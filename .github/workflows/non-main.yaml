name: Lint and Test Charts

on:
  push:
    branches:
    - 'next'
  pull_request:
    branches:
    - 'next'

jobs:
  lint-test:
    env:
      CT_TARGET_BRANCH: next
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.2.4

      - uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.0.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        working-directory: charts
        run: |
          changed=$(ct list-changed)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Run chart-testing (lint)
        run: ct lint --check-version-increment=false
        working-directory: charts

      - name: setup testing environment (kind-cluster)
        run: ./scripts/test-env.sh
        # currently broken. list-changed refuses to list changed charts for some reason
        #if: steps.list-changed.outputs.changed == 'true'

      - name: run chart-testing (install)
        run: ct install
        working-directory: charts

      - name: cleanup integration tests (cleanup)
        run: ./scripts/test-env.sh cleanup

  integration-test:
    # Not a real requirement, but due to worker CPU contention, this can fail if it runs concurrent with lint-test
    needs: lint-test
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: setup helm
        uses: azure/setup-helm@v1
        with:
          version: v3.2.4

      - name: setup testing environment (kind-cluster)
        run: ./scripts/test-env.sh

      - name: run integration tests (integration)
        run: ./scripts/test-run.sh

      - name: run upgrade integration tests (integration-upgrade)
        run: ./scripts/test-upgrade.sh

      - name: run crds integration tests (integration-crds)
        run: ./scripts/test-crds.sh

      # TODO: these are specifically in place in the interim between v1.x
      #       and the upcoming v2.x release to add some extra checking to
      #       ensure our chart and our pre-releases are compatible, and there
      #       are no regressions with our charts in between pre-releases.
      #       Once v2.0 has released and become a standard part of the chart
      #       we can remove this or change the upgrade tests in whatever way
      #       seems to fit.

      - name: run prerelease deployment tests (v2-deploy)
        run: ./scripts/test-v2-deploy.sh

      - name: run prerelease upgrade compatibility tests (v2-upgrade)
        run: ./scripts/test-v2-upgrade.sh

      # </TODO>

      - name: cleanup integration tests (cleanup)
        run: ./scripts/test-env.sh cleanup

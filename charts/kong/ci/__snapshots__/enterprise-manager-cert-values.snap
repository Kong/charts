# chartsnap: snapshot_version=v3
---
# Source: kong/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: chartsnap-kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-3.0.0
    app.kubernetes.io/instance: "chartsnap"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.10"
---
# Source: kong/templates/admission-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: chartsnap-kong-validation-webhook-ca-keypair
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-3.0.0
    app.kubernetes.io/instance: "chartsnap"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.10"
type: kubernetes.io/tls
data:
  tls.crt: '###DYNAMIC_FIELD###'
  tls.key: '###DYNAMIC_FIELD###'
---
# Source: kong/templates/admission-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: chartsnap-kong-validation-webhook-keypair
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-3.0.0
    app.kubernetes.io/instance: "chartsnap"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.10"
type: kubernetes.io/tls
data:
  tls.crt: '###DYNAMIC_FIELD###'
  tls.key: '###DYNAMIC_FIELD###'
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-3.0.0
    app.kubernetes.io/instance: "chartsnap"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.10"
  name: chartsnap-kong
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - backendtlspolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - backendtlspolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongcustomentities
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongcustomentities/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongupstreampolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongupstreampolicies/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumergroups
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumergroups/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - ingressclassparameterses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gateways
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gateways/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - httproutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - httproutes/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - referencegrants
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - referencegrants/status
  verbs:
  - get
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - tcproutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - tcproutes/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - tlsroutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - tlsroutes/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - udproutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - udproutes/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - grpcroutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - grpcroutes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - konglicenses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - konglicenses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongvaults
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongvaults/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses/status
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: chartsnap-kong
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-3.0.0
    app.kubernetes.io/instance: "chartsnap"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.10"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: chartsnap-kong
subjects:
- kind: ServiceAccount
  name: chartsnap-kong
  namespace: default
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: chartsnap-kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-3.0.0
    app.kubernetes.io/instance: "chartsnap"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.10"
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  resourceNames:
  # Defaults to "<election-id>-<ingress-class>"
  # Here: "<kong-ingress-controller-leader-nginx>-<nginx>"
  # This has to be adapted if you change either parameter
  # when launching the nginx-ingress-controller.
  - "kong-ingress-controller-leader-kong-kong"
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
# Begin KIC 2.x leader permissions
- apiGroups:
  - ""
  - coordination.k8s.io
  resources:
  - configmaps
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: chartsnap-kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-3.0.0
    app.kubernetes.io/instance: "chartsnap"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.10"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: chartsnap-kong
subjects:
- kind: ServiceAccount
  name: chartsnap-kong
  namespace: default
---
# Source: kong/templates/admission-webhook.yaml
apiVersion: v1
kind: Service
metadata:
  name: chartsnap-kong-validation-webhook
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-3.0.0
    app.kubernetes.io/instance: "chartsnap"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.10"
spec:
  ports:
  - name: webhook
    port: 443
    protocol: TCP
    targetPort: webhook
  selector:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-3.0.0
    app.kubernetes.io/instance: "chartsnap"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.10"
    app.kubernetes.io/component: app
---
# Source: kong/templates/controller-service-metrics.yaml
apiVersion: v1
kind: Service
metadata:
  name: chartsnap-kong-metrics
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-3.0.0
    app.kubernetes.io/instance: "chartsnap"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.10"
spec:
  ports:
  - name: cmetrics
    port: 10255
    protocol: TCP
    targetPort: cmetrics
  - name: status
    port: 10254
    protocol: TCP
    targetPort: cstatus
  selector:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-3.0.0
    app.kubernetes.io/instance: "chartsnap"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.10"
    app.kubernetes.io/component: app
---
# Source: kong/templates/service-kong-admin.yaml
apiVersion: v1
kind: Service
metadata:
  name: chartsnap-kong-admin
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-3.0.0
    app.kubernetes.io/instance: "chartsnap"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.10"
spec:
  type: NodePort
  ports:
  - name: kong-admin-tls
    port: 8444
    targetPort: 8444
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "chartsnap"
---
# Source: kong/templates/service-kong-manager.yaml
apiVersion: v1
kind: Service
metadata:
  name: chartsnap-kong-manager
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-3.0.0
    app.kubernetes.io/instance: "chartsnap"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.10"
spec:
  type: NodePort
  ports:
  - name: kong-manager-tls
    port: 8445
    targetPort: 8445
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "chartsnap"
---
# Source: kong/templates/service-kong-portal-api.yaml
apiVersion: v1
kind: Service
metadata:
  name: chartsnap-kong-portalapi
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-3.0.0
    app.kubernetes.io/instance: "chartsnap"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.10"
spec:
  type: NodePort
  ports:
  - name: kong-portalapi
    port: 8004
    targetPort: 8004
    protocol: TCP
  - name: kong-portalapi-tls
    port: 8447
    targetPort: 8447
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "chartsnap"
---
# Source: kong/templates/service-kong-portal.yaml
apiVersion: v1
kind: Service
metadata:
  name: chartsnap-kong-portal
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-3.0.0
    app.kubernetes.io/instance: "chartsnap"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.10"
spec:
  type: NodePort
  ports:
  - name: kong-portal
    port: 8003
    targetPort: 8003
    protocol: TCP
  - name: kong-portal-tls
    port: 8446
    targetPort: 8446
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "chartsnap"
---
# Source: kong/templates/service-kong-proxy.yaml
apiVersion: v1
kind: Service
metadata:
  name: chartsnap-kong-proxy
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-3.0.0
    app.kubernetes.io/instance: "chartsnap"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.10"
    enable-metrics: "true"
spec:
  type: LoadBalancer
  ports:
  - name: kong-proxy
    port: 80
    targetPort: 8000
    protocol: TCP
  - name: kong-proxy-tls
    port: 443
    targetPort: 8443
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "chartsnap"
---
# Source: kong/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chartsnap-kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-3.0.0
    app.kubernetes.io/instance: "chartsnap"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.10"
    app.kubernetes.io/component: app
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: kong
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: "chartsnap"
  template:
    metadata:
      annotations:
        kuma.io/service-account-token-volume: chartsnap-kong-token
        kuma.io/gateway: "enabled"
        traffic.sidecar.istio.io/includeInboundPorts: ""
      labels:
        app.kubernetes.io/name: kong
        helm.sh/chart: kong-3.0.0
        app.kubernetes.io/instance: "chartsnap"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/version: "3.10"
        app.kubernetes.io/component: app
        app: chartsnap-kong
        version: "3.10"
    spec:
      serviceAccountName: chartsnap-kong
      automountServiceAccountToken: false
      initContainers:
      - name: clear-stale-pid
        image: kong/kong-gateway:3.10.0.2
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        resources: {}
        command:
        - "rm"
        - "-vrf"
        - "$KONG_PREFIX/pids"
        env:
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_LISTEN
          value: "0.0.0.0:8445 http2 ssl, [::]:8445 http2 ssl"
        - name: KONG_ADMIN_GUI_SSL_CERT
          value: "/etc/cert-manager/manager/tls.crt"
        - name: KONG_ADMIN_GUI_SSL_CERT_KEY
          value: "/etc/cert-manager/manager/tls.key"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8444 http2 ssl, [::]:8444 http2 ssl"
        - name: KONG_ADMIN_SSL_CERT
          value: "/etc/cert-manager/admin/tls.crt"
        - name: KONG_ADMIN_SSL_CERT_KEY
          value: "/etc/cert-manager/admin/tls.key"
        - name: KONG_ANONYMOUS_REPORTS
          value: "off"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_CLUSTER_TELEMETRY_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_KIC
          value: "on"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORTAL_API_SSL_CERT
          value: "/etc/cert-manager/portal/tls.crt"
        - name: KONG_PORTAL_API_SSL_CERT_KEY
          value: "/etc/cert-manager/portal/tls.key"
        - name: KONG_PORTAL_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORTAL_GUI_SSL_CERT
          value: "/etc/cert-manager/portal/tls.crt"
        - name: KONG_PORTAL_GUI_SSL_CERT_KEY
          value: "/etc/cert-manager/portal/tls.key"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_SMTP_MOCK
          value: "on"
        - name: KONG_SSL_CERT
          value: "/etc/cert-manager/proxy/tls.crt"
        - name: KONG_SSL_CERT_KEY
          value: "/etc/cert-manager/proxy/tls.key"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        volumeMounts:
        - name: chartsnap-kong-prefix-dir
          mountPath: /kong_prefix/
        - name: chartsnap-kong-tmp
          mountPath: /tmp
        - name: chartsnap-kong-cluster-cert
          mountPath: /etc/cert-manager/cluster/
        - name: chartsnap-kong-proxy-cert
          mountPath: /etc/cert-manager/proxy/
        - name: chartsnap-kong-admin-cert
          mountPath: /etc/cert-manager/admin/
        - name: chartsnap-kong-manager-cert
          mountPath: /etc/cert-manager/manager/
        - name: chartsnap-kong-portal-cert
          mountPath: /etc/cert-manager/portal/
      containers:
      - name: ingress-controller
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        args:
        ports:
        - name: webhook
          containerPort: 8080
          protocol: TCP
        - name: cmetrics
          containerPort: 10255
          protocol: TCP
        - name: cstatus
          containerPort: 10254
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CONTROLLER_ADMISSION_WEBHOOK_LISTEN
          value: "0.0.0.0:8080"
        - name: CONTROLLER_ANONYMOUS_REPORTS
          value: "false"
        - name: CONTROLLER_ELECTION_ID
          value: "kong-ingress-controller-leader-kong"
        - name: CONTROLLER_INGRESS_CLASS
          value: "kong"
        - name: CONTROLLER_KONG_ADMIN_TLS_SKIP_VERIFY
          value: "true"
        - name: CONTROLLER_KONG_ADMIN_URL
          value: "https://localhost:8444"
        - name: CONTROLLER_PUBLISH_SERVICE
          value: "default/chartsnap-kong-proxy"
        image: kong/kubernetes-ingress-controller:3.5
        imagePullPolicy: IfNotPresent
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources: {}
        volumeMounts:
        - name: webhook-cert
          mountPath: /admission-webhook
          readOnly: true
        - name: chartsnap-kong-token
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          readOnly: true
      - name: "proxy"
        image: kong/kong-gateway:3.10.0.2
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        env:
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_LISTEN
          value: "0.0.0.0:8445 http2 ssl, [::]:8445 http2 ssl"
        - name: KONG_ADMIN_GUI_SSL_CERT
          value: "/etc/cert-manager/manager/tls.crt"
        - name: KONG_ADMIN_GUI_SSL_CERT_KEY
          value: "/etc/cert-manager/manager/tls.key"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8444 http2 ssl, [::]:8444 http2 ssl"
        - name: KONG_ADMIN_SSL_CERT
          value: "/etc/cert-manager/admin/tls.crt"
        - name: KONG_ADMIN_SSL_CERT_KEY
          value: "/etc/cert-manager/admin/tls.key"
        - name: KONG_ANONYMOUS_REPORTS
          value: "off"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_CLUSTER_TELEMETRY_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_KIC
          value: "on"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORTAL_API_SSL_CERT
          value: "/etc/cert-manager/portal/tls.crt"
        - name: KONG_PORTAL_API_SSL_CERT_KEY
          value: "/etc/cert-manager/portal/tls.key"
        - name: KONG_PORTAL_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORTAL_GUI_SSL_CERT
          value: "/etc/cert-manager/portal/tls.crt"
        - name: KONG_PORTAL_GUI_SSL_CERT_KEY
          value: "/etc/cert-manager/portal/tls.key"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_SMTP_MOCK
          value: "on"
        - name: KONG_SSL_CERT
          value: "/etc/cert-manager/proxy/tls.crt"
        - name: KONG_SSL_CERT_KEY
          value: "/etc/cert-manager/proxy/tls.key"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_NGINX_DAEMON
          value: "off"
        lifecycle:
          preStop:
            exec:
              command:
              - kong
              - quit
              - --wait=15
        ports:
        - name: admin-tls
          containerPort: 8444
          protocol: TCP
        - name: proxy
          containerPort: 8000
          protocol: TCP
        - name: proxy-tls
          containerPort: 8443
          protocol: TCP
        - name: status
          containerPort: 8100
          protocol: TCP
        - name: manager-tls
          containerPort: 8445
          protocol: TCP
        - name: portal
          containerPort: 8003
          protocol: TCP
        - name: portal-tls
          containerPort: 8446
          protocol: TCP
        - name: portalapi
          containerPort: 8004
          protocol: TCP
        - name: portalapi-tls
          containerPort: 8447
          protocol: TCP
        volumeMounts:
        - name: chartsnap-kong-prefix-dir
          mountPath: /kong_prefix/
        - name: chartsnap-kong-tmp
          mountPath: /tmp
        - name: chartsnap-kong-cluster-cert
          mountPath: /etc/cert-manager/cluster/
        - name: chartsnap-kong-proxy-cert
          mountPath: /etc/cert-manager/proxy/
        - name: chartsnap-kong-admin-cert
          mountPath: /etc/cert-manager/admin/
        - name: chartsnap-kong-manager-cert
          mountPath: /etc/cert-manager/manager/
        - name: chartsnap-kong-portal-cert
          mountPath: /etc/cert-manager/portal/
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /status/ready
            port: status
            scheme: HTTP
          initialDelaySeconds: 1
          periodSeconds: 1
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources: {}
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 30
      volumes:
      - name: chartsnap-kong-prefix-dir
        emptyDir:
          sizeLimit: 256Mi
      - name: chartsnap-kong-tmp
        emptyDir:
          sizeLimit: 1Gi
      - name: chartsnap-kong-token
        projected:
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: chartsnap-kong-cluster-cert
        secret:
          secretName: chartsnap-kong-cluster-cert
      - name: chartsnap-kong-proxy-cert
        secret:
          secretName: chartsnap-kong-proxy-cert
      - name: chartsnap-kong-admin-cert
        secret:
          secretName: chartsnap-kong-admin-cert
      - name: chartsnap-kong-manager-cert
        secret:
          secretName: chartsnap-kong-manager-cert
      - name: chartsnap-kong-portal-cert
        secret:
          secretName: chartsnap-kong-portal-cert
      - name: webhook-cert
        secret:
          secretName: chartsnap-kong-validation-webhook-keypair
---
# Source: kong/templates/certificate.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: chartsnap-kong-admin
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-3.0.0
    app.kubernetes.io/instance: "chartsnap"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.10"
spec:
  secretName: chartsnap-kong-admin-cert
  commonName: kong-admin.example.com
  dnsNames:
  - "admin.kong.example.com"
  - "api.kong.example.com"
  - "kong-admin.example.com"
  renewBefore: 360h0m0s
  duration: 2160h0m0s
---
# Source: kong/templates/certificate.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: chartsnap-kong-portal
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-3.0.0
    app.kubernetes.io/instance: "chartsnap"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.10"
spec:
  secretName: chartsnap-kong-portal-cert
  commonName: developer.example
  dnsNames:
  - "developer.example"
  renewBefore: 360h0m0s
  duration: 2160h0m0s
---
# Source: kong/templates/certificate.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: chartsnap-kong-manager
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-3.0.0
    app.kubernetes.io/instance: "chartsnap"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.10"
spec:
  secretName: chartsnap-kong-manager-cert
  commonName: kong-manager.example.com
  dnsNames:
  - "manager.kong.example.com"
  - "gui.kong.example.com"
  - "kong-manager.example.com"
  renewBefore: 360h0m0s
  duration: 2160h0m0s
---
# Source: kong/templates/certificate.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: chartsnap-kong-proxy
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-3.0.0
    app.kubernetes.io/instance: "chartsnap"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.10"
spec:
  secretName: chartsnap-kong-proxy-cert
  commonName: app.example
  dnsNames:
  - "app.example"
  renewBefore: 360h0m0s
  duration: 2160h0m0s
---
# Source: kong/templates/certificate.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: chartsnap-kong-cluster
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-3.0.0
    app.kubernetes.io/instance: "chartsnap"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.10"
spec:
  secretName: chartsnap-kong-cluster-cert
  commonName: kong_clustering
  dnsNames:
  - "kong_clustering"
  renewBefore: 360h0m0s
  duration: 2160h0m0s
---
# Source: kong/templates/admission-webhook.yaml
kind: ValidatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1
metadata:
  name: chartsnap-kong-default-validations
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-3.0.0
    app.kubernetes.io/instance: "chartsnap"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.10"
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: '###DYNAMIC_FIELD###'
    service:
      name: chartsnap-kong-validation-webhook
      namespace: default
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: secrets.credentials.validation.ingress-controller.konghq.com
  objectSelector:
    matchExpressions:
    - key: "konghq.com/credential"
      operator: "Exists"
    - key: "konghq.com/credential"
      operator: "NotIn"
      values:
      - "konnect"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: '###DYNAMIC_FIELD###'
    service:
      name: chartsnap-kong-validation-webhook
      namespace: default
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: secrets.plugins.validation.ingress-controller.konghq.com
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
    - key: "konghq.com/credential"
      operator: "NotIn"
      values:
      - "konnect"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
  sideEffects: None
- name: validations.kong.konghq.com
  matchPolicy: Equivalent
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
  failurePolicy: Ignore
  sideEffects: None
  admissionReviewVersions: ["v1beta1"]
  rules:
  - apiGroups:
    - configuration.konghq.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - kongconsumers
    - kongplugins
    - kongclusterplugins
    - kongingresses
  - apiGroups:
    - ''
    apiVersions:
    - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - services
  - apiGroups:
    - networking.k8s.io
    apiVersions:
    - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  - apiGroups:
    - gateway.networking.k8s.io
    apiVersions:
    - 'v1alpha2'
    - 'v1beta1'
    - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - gateways
    - httproutes
  clientConfig:
    caBundle: '###DYNAMIC_FIELD###'
    service:
      name: chartsnap-kong-validation-webhook
      namespace: default

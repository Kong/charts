{{- if .Values.deployment.kong.enabled }}
{{- $deployConfig := dict -}}
{{- $deployConfig = (mustMerge $deployConfig .Values.deployment.kong) -}}
{{- $deployPreRender := dict -}} {{/* collection of values rendered from includes, so that there's no risk of colliding with things from the merge */}}
{{- $podPreRender := dict -}}
{{- $containerConfig := .Values.deployment.kong.pod.container -}}
{{- $containerPreRender := dict -}}

# TODO 921 review how these names end up in practice with a "kong" release. we've historically
# suggested a lot of example configurations that resulted in various "kong-kong" resources which,
# while harmless, look a bit silly
{{- $_ := set $deployPreRender "name" (printf "%s-%s" (include "kong.fullname" .) "proxy") -}}
{{- $_ := set $deployPreRender "namespace" (include "kong.namespace" .) -}}
# TODO 921 combine with .deployment.kong.labels.
# unsure how the types work out here--kong.metaLabels produces YAML output, and I'm not sure if we can
# just concat them as strings or what. can maybe ignore .deployment.kong.labels--it wasn't
# included in the past and we instead set extraLabels on EVERYTHING. that's apparently sufficient for
# user needs (there's been no request to provide separate per-resource labels here), but incongruous
# with how we handle annotations
{{- $_ := set $deployPreRender "labels" (include "kong.metaLabels" .) -}}
# TODO 921 this needs changes to the helper template since we'll need to point to two different sets of pods.
# in ingress chart this is relying on different fullnames. can't simply format since there multiple keys,
# need to pass a suffix to the helper
{{- $_ := set $deployPreRender "selectorMatchLabels" (include "kong.selectorLabels" .) -}}
# TODO 921 SA stuff can probably be refactored to be cleaner, but as-is it's functional
{{- $_ := set $deployPreRender "serviceAccount" .Values.serviceAccount -}}
{{- $_ := set $deployPreRender "serviceAccountTokenName" (include "kong.serviceAccountTokenName" .) -}}
{{- $_ := set $deployPreRender "serviceAccountName" (include "kong.serviceAccountName" .) -}}

{{- $_ := set $deployPreRender "volumes" (include "kong.volumes.proxy" .) -}}
{{- $_ := set $deployPreRender "userVolumes" (include "kong.userDefinedVolumes" .Values.deployment.kong ) -}}
{{- $_ := set $containerPreRender "volumeMounts" (include "kong.volumeMounts.proxy" .) -}}
{{- $_ := set $containerPreRender "userVolumeMounts" (include "kong.userDefinedVolumeMounts" .Values.deployment.kong ) -}}

# TODO 921 ditto the deploy labels todo
{{- $_ := set $podPreRender "component" "proxy" -}}
{{- $_ := set $podPreRender "labels" (include "kong.metaLabels" .) -}}
{{- $_ := set $podPreRender "name" (printf "%s-%s" (include "kong.fullname" .) "proxy") -}}
{{- $_ := set $podPreRender "versionLabel" .Chart.AppVersion -}}

{{- $serviceConfig := dict -}}
{{- $_ := set $containerPreRender "admissionWebhook" .Values.admissionWebhook -}}
{{- $_ := set $containerPreRender "enterprise" .Values.enterprise -}}

{{- $_ := set $serviceConfig "admin" .Values.admin -}}
{{- $_ := set $serviceConfig "proxy" .Values.proxy -}}
{{- $_ := set $serviceConfig "udpProxy" .Values.udpProxy -}}
{{- $_ := set $serviceConfig "status" .Values.status -}}
{{- $_ := set $serviceConfig "cluster" .Values.cluster -}}
{{- $_ := set $serviceConfig "manager" .Values.manager -}}
{{- $_ := set $serviceConfig "portal" .Values.portal -}}
{{- $_ := set $serviceConfig "portalapi" .Values.portalapi -}}
{{- $_ := set $serviceConfig "clustertelemetry" .Values.clustertelemetry -}}
{{- $_ := set $containerPreRender "svc" $serviceConfig -}}

{{- $_ := set $containerPreRender "serviceAccount" .Values.serviceAccount -}}
{{- $_ := set $containerPreRender "serviceAccountTokenName" (include "kong.serviceAccountTokenName" .) -}}
{{- $_ := set $containerPreRender "serviceAccountName" (include "kong.serviceAccountName" .) -}}

{{- $_ := set $containerPreRender "ingressControllerEnabled" .Values.deployment.controller.enabled -}}
# TODO 921 Capabilities and Release got stuck here because it was the first place I used them, but
# it's probably not a great home for them--they are not specific to the container and also get used
# in the deployment-level volumes
{{- $_ := set $containerPreRender "Capabilities" .Capabilities -}}
{{- $_ := set $containerPreRender "Release" .Release -}}
{{- $_ := set $containerPreRender "dblessConfig" .Values.dblessConfig -}}
{{- $_ := set $containerPreRender "plugins" .Values.plugins -}}
{{- $_ := set $containerPreRender "certificates" .Values.certificates -}}
# TODO 921 we should probably take this opportunity to drop the postgresql subchart. keeping for
# now to try and reduce scope (hah)
{{- $_ := set $containerPreRender "postgresql" .Values.postgresql -}}

# TODO 921 figure this initcontainer out. it needs stuff like env and volumemounts figured out
# first, and then needs to be injected into a prerender var, since we don't know whether
# we're rendering kong or the controller here
{{/*
      {{- if .Values.deployment.kong.enabled }}
      initContainers:
      - name: clear-stale-pid
        image: {{ include "kong.getRepoTag" .Values.image }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
        {{ toYaml .Values.containerSecurityContext | nindent 10 }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        command:
        - "rm"
        - "-vrf"
        - "$KONG_PREFIX/pids"
        env:
        {{- include "kong.env" . | nindent 8 }}
        volumeMounts:
        {{- include "kong.volumeMounts" . | nindent 8 }}
        {{- if .Values.deployment.initContainers }}
        {{- toYaml .Values.deployment.initContainers | nindent 6 }}
        {{- end }}
        {{- if (and (not (eq .Values.env.database "off")) .Values.waitImage.enabled) }}
        {{- include "kong.wait-for-db" . | nindent 6 }}
        {{- end }}
      {{- end }} # TODO 921 END initContainers clear-stale-pid
*/}}
{{- $initContainers := list -}}
{{- range .Values.deployment.kong.pod.initContainers -}}
  {{- $initContainers = mustAppend $initContainers . -}}
{{- end -}}
{{- $_ := set $podPreRender "initContainers" $initContainers -}}

{{- $volumeMounts := list -}}
{{- $volumeMounts = mustAppend $volumeMounts (dict "foo" "bar") -}}

# TODO 921 this is inconsistent with the others
{{- $_ := set $containerConfig "pre" $containerPreRender -}}

{{- $_ := set $podPreRender "container" (include "kong.proxy-container-new" $containerConfig ) -}}

{{- $preRender := dict -}}
{{- $_ := set $preRender "deployment" $deployPreRender -}}
{{- $_ := set $preRender "pod" $podPreRender -}}
{{- $_ := set $deployConfig "pre" $preRender -}} # TODO 921 maybe think of a better key name

{{- template "kong.deployment" $deployConfig -}}
{{- end -}}

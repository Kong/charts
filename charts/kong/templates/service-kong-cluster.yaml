{{- /*
Note that "http.enabled" should never be true for this service--the feature
does not support plaintext mode.

As such, it does not exist in the default values.yaml and is omitted from the
initial render/do not render logic at the top, which is different from other
Service templates.
*/ -}}
{{- if .Values.deployment.kong.enabled }}
{{- if and .Values.cluster.enabled .Values.cluster.tls.enabled -}}
apiVersion: v1
kind: Service
metadata:
  name: {{ template "kong.fullname" . }}-cluster
  annotations:
    {{- range $key, $value := .Values.cluster.annotations }}
      {{ $key }}: {{ $value | quote }}
    {{- end }}
  labels:
    {{- include "kong.metaLabels" . | nindent 4 }}
spec:
  type: {{ .Values.cluster.type }}
  {{- if eq .Values.cluster.type "LoadBalancer" }}
  {{- if .Values.cluster.loadBalancerIP }}
  loadBalancerIP: {{ .Values.cluster.loadBalancerIP }}
  {{- end }}
  {{- if .Values.cluster.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
  {{- range $cidr := .Values.cluster.loadBalancerSourceRanges }}
  - {{ $cidr }}
  {{- end }}
  {{- end }}
  {{- end }}
  externalIPs:
  {{- range $ip := .Values.cluster.externalIPs }}
  - {{ $ip }}
  {{- end }}
  ports:
  {{- if or .Values.cluster.tls.enabled }}
  - name: kong-cluster-tls
    port: {{ .Values.cluster.tls.servicePort }}
    targetPort: {{ .Values.cluster.tls.containerPort }}
  {{- if (and (eq .Values.cluster.type "NodePort") (not (empty .Values.cluster.tls.nodePort))) }}
    nodePort: {{ .Values.cluster.tls.nodePort }}
  {{- end }}
    protocol: TCP
  {{- end }}
  selector:
    {{- include "kong.selectorLabels" . | nindent 4 }}
{{- end -}}
{{- end -}}

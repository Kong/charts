{{- if .Values.deployment.kong.enabled }}
{{- if and .Values.proxy.enabled (or .Values.proxy.http.enabled .Values.proxy.tls.enabled) -}}
{{- $serviceConfig := dict -}}
{{- $serviceConfig := merge $serviceConfig .Values.proxy -}}
{{- $_ := set $serviceConfig "fullName" (include "kong.fullname" .) -}}
{{- $_ := set $serviceConfig "namespace" (include "kong.namespace" .) -}}
{{- $_ := set $serviceConfig "metaLabels" (include "kong.metaLabels" .) -}}
{{- $_ := set $serviceConfig "selectorLabels" (include "kong.selectorLabels" .) -}}
{{- $_ := set $serviceConfig "serviceName" "proxy" -}}
{{- include "kong.service" $serviceConfig }}
{{ if .Values.proxy.ingress.enabled }}
---
{{ if (not (hasKey .Values.proxy.ingress "hosts"))  -}}
{{ include "kong.ingress" $serviceConfig }}
{{ else -}} {{/* TODO remove legacy proxy ingress handling */}}
{{- $serviceName := include "kong.fullname" . -}}
{{- $servicePort := include "kong.ingress.servicePort" .Values.proxy -}}
{{- $path := .Values.proxy.ingress.path -}}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ template "kong.fullname" . }}-proxy
  namespace: {{ template "kong.namespace" . }}
  labels:
    {{- include "kong.metaLabels" . | nindent 4 }}
  {{- if .Values.proxy.ingress.annotations }}
  annotations:
  {{- range $key, $value := .Values.proxy.ingress.annotations }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
  {{- end }}
spec:
  rules:
    {{- range $host := .Values.proxy.ingress.hosts }}
    - host: {{ $host | quote }}
      http:
        paths:
          - path: {{ $path }}
            backend:
              serviceName: {{ $serviceName }}-proxy
              servicePort: {{ $servicePort }}
    {{- end -}}
  {{- if .Values.proxy.ingress.tls }}
  tls:
{{ toYaml .Values.proxy.ingress.tls | indent 2 }}
  {{- end -}}
{{- end -}}
{{- end -}}
{{- end -}}
{{- end -}}

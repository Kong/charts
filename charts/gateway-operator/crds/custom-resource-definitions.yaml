apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: aigateways.gateway-operator.konghq.com
spec:
  group: gateway-operator.konghq.com
  names:
    kind: AIGateway
    listKind: AIGatewayList
    plural: aigateways
    singular: aigateway
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The URL endpoint for the AIGateway
      jsonPath: .status.endpoint
      name: Endpoint
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          AIGateway is a network Gateway enabling access and management for AI &
          Machine Learning models such as Large Language Models (LLM).

          The underlying technology for the AIGateway is the Kong Gateway configured
          with a variety of plugins which provide the the AI featureset.

          This is a list of the plugins, which are available in Kong Gateway v3.6.x+:

            - ai-proxy (https://github.com/kong/kong/tree/master/kong/plugins/ai-proxy)
            - ai-request-transformer (https://github.com/kong/kong/tree/master/kong/plugins/ai-request-transformer)
            - ai-response-transformers (https://github.com/kong/kong/tree/master/kong/plugins/ai-response-transformer)
            - ai-prompt-template (https://github.com/kong/kong/tree/master/kong/plugins/ai-prompt-template)
            - ai-prompt-guard-plugin (https://github.com/kong/kong/tree/master/kong/plugins/ai-prompt-guard)
            - ai-prompt-decorator-plugin (https://github.com/kong/kong/tree/master/kong/plugins/ai-prompt-decorator)

          So effectively the AIGateway resource provides a bespoke Gateway resource
          (which it owns and manages) with the gateway, consumers and plugin
          configurations automated and configurable via Kubernetes APIs.

          The current iteration only supports the proxy itself, but the API is being
          built with room for future growth in several dimensions. For instance:

            - Supporting auxiliary functions (e.g. decorator, guard, templater, token-rate-limit)
            - Supporting request/response transformers
            - Supporting more than just LLMs (e.g. CCNs, GANs, e.t.c.)
            - Supporting more hosting options for LLMs (e.g. self hosted)
            - Supporting more AI cloud providers
            - Supporting more AI cloud provider features

          The validation rules throughout are set up to ensure at least one
          cloud-provider-based LLM is specified, but in the future when we have more
          model types and more hosting options for those types so we may want to look
          into using CEL validation to ensure that at least one model configuration is
          provided. We may also want to use CEL to validate things like identifier
          unique-ness, e.t.c.

          See: https://kubernetes.io/docs/reference/using-api/cel/
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the desired state of the AIGateway.
            properties:
              cloudProviderCredentials:
                description: |-
                  CloudProviderCredentials is a reference to an object (e.g. a Kubernetes
                  Secret) which contains the credentials needed to access the APIs of
                  cloud providers.

                  This is the global configuration that will be used by DEFAULT for all
                  model configurations. A secret configured this way MAY include any number
                  of key-value pairs equal to the number of providers you have, but used
                  this way the keys MUST be named according to their providers (e.g.
                  "openai", "azure", "cohere", e.t.c.). For example:

                    apiVersion: v1
                    kind: Secret
                    metadata:
                      name: devteam-ai-cloud-providers
                    type: Opaque
                    data:
                      openai: *****************
                      azure: *****************
                      cohere: *****************

                  See AICloudProviderName for a list of known and valid cloud providers.

                  Note that the keys are NOT case-sensitive (e.g. "OpenAI", "openai", and
                  "openAI" are all valid and considered the same keys) but if there are
                  duplicates endpoints failures conditions will be emitted and endpoints
                  will not be configured until the duplicates are resolved.

                  This is currently considered required, but in future iterations will be
                  optional as we do things like enable configuring credentials at the model
                  level.
                properties:
                  kind:
                    description: |-
                      Kind is the API object kind

                      If not specified, it will be assumed to be "Secret". If a Secret is used
                      as the Kind, the secret must contain a single key-value pair where the
                      value is the secret API token. The key can be named anything, as long as
                      there's only one entry, but by convention it should be "apiToken".
                    type: string
                  name:
                    description: Name is the name of the reference object.
                    type: string
                  namespace:
                    description: |-
                      Namespace is the namespace of the reference object.

                      If not specified, it will be assumed to be the same namespace as the
                      object which references it.
                    type: string
                required:
                - name
                type: object
              gatewayClassName:
                description: |-
                  GatewayClassName is the name of the GatewayClass which is responsible for
                  the AIGateway.
                type: string
              largeLanguageModels:
                description: |-
                  LargeLanguageModels is a list of Large Language Models (LLMs) to be
                  managed by the AI Gateway.

                  This is a required field because we only support LLMs at the moment. In
                  future iterations we may support other model types.
                properties:
                  cloudHosted:
                    description: |-
                      CloudHosted configures LLMs hosted and served by cloud providers.

                      This is currently a required field, requiring at least one cloud-hosted
                      LLM be specified, however in future iterations we may add other hosting
                      options such as self-hosted LLMs as separate fields.
                    items:
                      description: |-
                        CloudHostedLargeLanguageModel is the configuration for Large Language Models
                        (LLM) hosted by a known and supported AI cloud provider (e.g. OpenAI, Cohere,
                        Azure, e.t.c.).
                      properties:
                        aiCloudProvider:
                          description: |-
                            AICloudProvider defines the cloud provider that will fulfill the LLM
                            requests for this CloudHostedLargeLanguageModel
                          properties:
                            name:
                              description: Name is the unique name of an LLM provider.
                              enum:
                              - openai
                              - azure
                              - cohere
                              - mistral
                              type: string
                          required:
                          - name
                          type: object
                        defaultPromptParams:
                          description: |-
                            DefaultPromptParams configures the parameters which will be sent with
                            any and every inference request.

                            If this is set, there is currently no way to override these parameters
                            at the individual prompt level. This is an expected feature from later
                            releases of our AI plugins.
                          properties:
                            maxTokens:
                              description: |-
                                Max Tokens specifies the maximum length of the model's output in terms
                                of the number of tokens (words or pieces of words). This parameter
                                limits the output's size, ensuring the model generates content within a
                                manageable scope. A token can be a word or part of a word, depending on
                                the model's tokenizer.
                              type: integer
                            temperature:
                              description: |-
                                Temperature controls the randomness of predictions by scaling the logits
                                before applying softmax. A lower temperature (e.g., 0.0 to 0.7) makes
                                the model more confident in its predictions, leading to more repetitive
                                and deterministic outputs. A higher temperature (e.g., 0.8 to 1.0)
                                increases randomness, generating more diverse and creative outputs. At
                                very high temperatures, the outputs may become nonsensical or highly
                                unpredictable.
                              type: string
                            topK:
                              description: |-
                                TopK sampling is a technique where the model's prediction is limited to
                                the K most likely next tokens at each step of the generation process.
                                The probability distribution is truncated to these top K tokens, and the
                                next token is randomly sampled from this subset. This method helps in
                                reducing the chance of selecting highly improbable tokens, making the
                                text more coherent. A smaller K leads to more predictable text, while a
                                larger K allows for more diversity but with an increased risk of
                                incoherence.
                              type: integer
                            topP:
                              description: |-
                                TopP (also known as nucleus sampling) is an alternative to top K
                                sampling. Instead of selecting the top K tokens, top P sampling chooses
                                from the smallest set of tokens whose cumulative probability exceeds the
                                threshold P. This method dynamically adjusts the number of tokens
                                considered at each step, depending on their probability distribution. It
                                helps in maintaining diversity while also avoiding very unlikely tokens.
                                A higher P value increases diversity but can lead to less coherence,
                                whereas a lower P value makes the model's outputs more focused and
                                coherent.
                              type: string
                          type: object
                        defaultPrompts:
                          description: |-
                            DefaultPrompts is a list of prompts that should be provided to the LLM
                            by default. This is generally used to influence inference behavior, for
                            instance by providing a "system" role prompt that instructs the LLM to
                            take on a certain persona.
                          items:
                            description: |-
                              LLMPrompt is a text prompt that includes parameters, a role and content.

                              This is intended for situations like when you need to provide roles in a
                              prompt to an LLM in order to influence its behavior and responses.

                              For example, you might want to provide a "system" role and tell the LLM
                              something like "you are a helpful assistant who responds in the style of
                              Sherlock Holmes".
                            properties:
                              content:
                                description: Content is the prompt text sent for inference.
                                type: string
                              role:
                                default: user
                                description: |-
                                  Role indicates the role of the prompt. This is used to identify the
                                  prompt's purpose, such as "system" or "user" and can influence the
                                  behavior of the LLM.

                                  If not specified, "user" will be used as the default.
                                enum:
                                - user
                                - system
                                type: string
                            required:
                            - content
                            type: object
                          maxItems: 64
                          type: array
                        identifier:
                          description: |-
                            Identifier is the unique name which identifies the LLM. This will be used
                            as part of the requests made to an AIGateway endpoint. For instance: if
                            you provided the identifier "devteam-gpt-access", then you would access
                            this model via "https://${endpoint}/devteam-gpt-access" and supply it
                            with your consumer credentials to authenticate requests.
                          type: string
                        model:
                          description: |-
                            Model is the model name of the LLM (e.g. gpt-3.5-turbo, phi-2, e.t.c.).

                            If not specified, whatever the cloud provider specifies as the default
                            model will be used.
                          type: string
                        promptType:
                          default: completions
                          description: |-
                            PromptType is the type of prompt to be used for inference requests to
                            the LLM (e.g. "chat", "completions").

                            If "chat" is specified, prompts sent by the user will be interactive,
                            contextual and stateful. The LLM will dynamically answer questions and
                            simulate a dialogue, while also keeping track of the conversation to
                            provide contextually relevant responses.

                            If "completions" is specified, prompts sent by the user will be
                            stateless and "one-shot". The LLM will provide a single response to the
                            prompt, without any context from previous prompts.

                            If not specified, "completions" will be used as the default.
                          enum:
                          - chat
                          - completions
                          type: string
                      required:
                      - aiCloudProvider
                      - identifier
                      type: object
                    maxItems: 64
                    minItems: 1
                    type: array
                required:
                - cloudHosted
                type: object
                x-kubernetes-validations:
                - message: At least one class of LLMs has been configured
                  rule: (self.cloudHosted.size() != 0)
            required:
            - cloudProviderCredentials
            - gatewayClassName
            - largeLanguageModels
            type: object
            x-kubernetes-validations:
            - message: At least one type of LLM has been specified
              rule: (self.largeLanguageModels != null)
          status:
            description: Status is the observed state of the AIGateway.
            properties:
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Accepted
                description: |-
                  Conditions describe the current conditions of the AIGateway.

                  Known condition types are:

                    - "Accepted"
                    - "Provisioning"
                    - "EndpointsReady"
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              endpoints:
                description: |-
                  Endpoints are collections of the URL, credentials and metadata needed in
                  order to access models served by the AIGateway for inference.
                items:
                  description: AIGatewayEndpoint is a network endpoint for accessing
                    an AIGateway.
                  properties:
                    conditions:
                      default:
                      - lastTransitionTime: "1970-01-01T00:00:00Z"
                        message: Waiting for controller
                        reason: Pending
                        status: Unknown
                        type: Provisioning
                      description: |-
                        Conditions describe the current conditions of the AIGatewayEndpoint.

                        Known condition types are:

                          - "Provisioning"
                          - "EndpointReady"
                      items:
                        description: Condition contains details for one aspect of
                          the current state of this API Resource.
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    consumer:
                      description: |-
                        Consumer is a reference to the Secret that contains the credentials for
                        the Kong consumer that is allowed to access this endpoint.
                      properties:
                        name:
                          description: Name is the name of the reference object.
                          type: string
                        namespace:
                          description: Namespace is the namespace of the reference
                            object.
                          type: string
                      required:
                      - name
                      - namespace
                      type: object
                    models:
                      description: |-
                        AvailableModels is a list of the identifiers of all the AI models that are
                        accessible from this endpoint.
                      items:
                        type: string
                      type: array
                    network:
                      description: |-
                        NetworkAccessHint is a hint to the user about what kind of network access
                        is expected for the reachability of this endpoint.
                      type: string
                    url:
                      description: |-
                        URL is the URL to access the endpoint from the network indicated by the
                        NetworkAccessHint.
                      type: string
                  required:
                  - consumer
                  - models
                  - network
                  - url
                  type: object
                maxItems: 64
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: controlplanes.gateway-operator.konghq.com
spec:
  group: gateway-operator.konghq.com
  names:
    categories:
    - kong
    - all
    kind: ControlPlane
    listKind: ControlPlaneList
    plural: controlplanes
    shortNames:
    - kocp
    singular: controlplane
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The Resource is ready
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - description: The Resource is provisioned
      jsonPath: .status.conditions[?(@.type=='Provisioned')].status
      name: Provisioned
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: ControlPlane is the Schema for the controlplanes API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ControlPlaneSpec defines the desired state of ControlPlane
            properties:
              dataplane:
                description: |-
                  DataPlanes refers to the named DataPlane objects which this ControlPlane
                  is responsible for. Currently they must be in the same namespace as the
                  DataPlane.
                type: string
              deployment:
                description: |-
                  ControlPlaneDeploymentOptions is a shared type used on objects to indicate that their
                  configuration results in a Deployment which is managed by the Operator and
                  includes options for managing Deployments such as the the number of replicas
                  or pod options like container image and resource requirements.
                  version, as well as Env variable overrides.
                properties:
                  podTemplateSpec:
                    description: PodTemplateSpec defines PodTemplateSpec for Deployment's
                      pods.
                    properties:
                      metadata:
                        description: |-
                          Standard object's metadata.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            type: object
                          finalizers:
                            items:
                              type: string
                            type: array
                          labels:
                            additionalProperties:
                              type: string
                            type: object
                          name:
                            type: string
                          namespace:
                            type: string
                        type: object
                      spec:
                        description: |-
                          Specification of the desired behavior of the pod.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
                        properties:
                          activeDeadlineSeconds:
                            description: |-
                              Optional duration in seconds the pod may be active on the node relative to
                              StartTime before the system will actively try to mark it failed and kill associated containers.
                              Value must be a positive integer.
                            format: int64
                            type: integer
                          affinity:
                            description: If specified, the pod's scheduling constraints
                            properties:
                              nodeAffinity:
                                description: Describes node affinity scheduling rules
                                  for the pod.
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: |-
                                      The scheduler will prefer to schedule pods to nodes that satisfy
                                      the affinity expressions specified by this field, but it may choose
                                      a node that violates one or more of the expressions. The node that is
                                      most preferred is the one with the greatest sum of weights, i.e.
                                      for each node that meets all of the scheduling requirements (resource
                                      request, requiredDuringScheduling affinity expressions, etc.),
                                      compute a sum by iterating through the elements of this field and adding
                                      "weight" to the sum if the node matches the corresponding matchExpressions; the
                                      node(s) with the highest sum are the most preferred.
                                    items:
                                      description: |-
                                        An empty preferred scheduling term matches all objects with implicit weight 0
                                        (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                      properties:
                                        preference:
                                          description: A node selector term, associated
                                            with the corresponding weight.
                                          properties:
                                            matchExpressions:
                                              description: A list of node selector
                                                requirements by node's labels.
                                              items:
                                                description: |-
                                                  A node selector requirement is a selector that contains values, a key, and an operator
                                                  that relates the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      Represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      An array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. If the operator is Gt or Lt, the values
                                                      array must have a single element, which will be interpreted as an integer.
                                                      This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchFields:
                                              description: A list of node selector
                                                requirements by node's fields.
                                              items:
                                                description: |-
                                                  A node selector requirement is a selector that contains values, a key, and an operator
                                                  that relates the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      Represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      An array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. If the operator is Gt or Lt, the values
                                                      array must have a single element, which will be interpreted as an integer.
                                                      This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        weight:
                                          description: Weight associated with matching
                                            the corresponding nodeSelectorTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - preference
                                      - weight
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: |-
                                      If the affinity requirements specified by this field are not met at
                                      scheduling time, the pod will not be scheduled onto the node.
                                      If the affinity requirements specified by this field cease to be met
                                      at some point during pod execution (e.g. due to an update), the system
                                      may or may not try to eventually evict the pod from its node.
                                    properties:
                                      nodeSelectorTerms:
                                        description: Required. A list of node selector
                                          terms. The terms are ORed.
                                        items:
                                          description: |-
                                            A null or empty node selector term matches no objects. The requirements of
                                            them are ANDed.
                                            The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                          properties:
                                            matchExpressions:
                                              description: A list of node selector
                                                requirements by node's labels.
                                              items:
                                                description: |-
                                                  A node selector requirement is a selector that contains values, a key, and an operator
                                                  that relates the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      Represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      An array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. If the operator is Gt or Lt, the values
                                                      array must have a single element, which will be interpreted as an integer.
                                                      This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchFields:
                                              description: A list of node selector
                                                requirements by node's fields.
                                              items:
                                                description: |-
                                                  A node selector requirement is a selector that contains values, a key, and an operator
                                                  that relates the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      Represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      An array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. If the operator is Gt or Lt, the values
                                                      array must have a single element, which will be interpreted as an integer.
                                                      This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - nodeSelectorTerms
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              podAffinity:
                                description: Describes pod affinity scheduling rules
                                  (e.g. co-locate this pod in the same node, zone,
                                  etc. as some other pod(s)).
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: |-
                                      The scheduler will prefer to schedule pods to nodes that satisfy
                                      the affinity expressions specified by this field, but it may choose
                                      a node that violates one or more of the expressions. The node that is
                                      most preferred is the one with the greatest sum of weights, i.e.
                                      for each node that meets all of the scheduling requirements (resource
                                      request, requiredDuringScheduling affinity expressions, etc.),
                                      compute a sum by iterating through the elements of this field and adding
                                      "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                      node(s) with the highest sum are the most preferred.
                                    items:
                                      description: The weights of all of the matched
                                        WeightedPodAffinityTerm fields are added per-node
                                        to find the most preferred node(s)
                                      properties:
                                        podAffinityTerm:
                                          description: Required. A pod affinity term,
                                            associated with the corresponding weight.
                                          properties:
                                            labelSelector:
                                              description: |-
                                                A label query over a set of resources, in this case pods.
                                                If it's null, this PodAffinityTerm matches with no Pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            matchLabelKeys:
                                              description: |-
                                                MatchLabelKeys is a set of pod label keys to select which pods will
                                                be taken into consideration. The keys are used to lookup values from the
                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                to select the group of existing pods which pods will be taken into consideration
                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                pod labels will be ignored. The default value is empty.
                                                The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            mismatchLabelKeys:
                                              description: |-
                                                MismatchLabelKeys is a set of pod label keys to select which pods will
                                                be taken into consideration. The keys are used to lookup values from the
                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                to select the group of existing pods which pods will be taken into consideration
                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                pod labels will be ignored. The default value is empty.
                                                The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            namespaceSelector:
                                              description: |-
                                                A label query over the set of namespaces that the term applies to.
                                                The term is applied to the union of the namespaces selected by this field
                                                and the ones listed in the namespaces field.
                                                null selector and null or empty namespaces list means "this pod's namespace".
                                                An empty selector ({}) matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaces:
                                              description: |-
                                                namespaces specifies a static list of namespace names that the term applies to.
                                                The term is applied to the union of the namespaces listed in this field
                                                and the ones selected by namespaceSelector.
                                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            topologyKey:
                                              description: |-
                                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                whose value of the label with key topologyKey matches that of any node on which any of the
                                                selected pods is running.
                                                Empty topologyKey is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        weight:
                                          description: |-
                                            weight associated with matching the corresponding podAffinityTerm,
                                            in the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - podAffinityTerm
                                      - weight
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: |-
                                      If the affinity requirements specified by this field are not met at
                                      scheduling time, the pod will not be scheduled onto the node.
                                      If the affinity requirements specified by this field cease to be met
                                      at some point during pod execution (e.g. due to a pod label update), the
                                      system may or may not try to eventually evict the pod from its node.
                                      When there are multiple elements, the lists of nodes corresponding to each
                                      podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                    items:
                                      description: |-
                                        Defines a set of pods (namely those matching the labelSelector
                                        relative to the given namespace(s)) that this pod should be
                                        co-located (affinity) or not co-located (anti-affinity) with,
                                        where co-located is defined as running on a node whose value of
                                        the label with key <topologyKey> matches that of any node on which
                                        a pod of the set of pods is running
                                      properties:
                                        labelSelector:
                                          description: |-
                                            A label query over a set of resources, in this case pods.
                                            If it's null, this PodAffinityTerm matches with no Pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: |-
                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                  relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      operator represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      values is an array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. This array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        matchLabelKeys:
                                          description: |-
                                            MatchLabelKeys is a set of pod label keys to select which pods will
                                            be taken into consideration. The keys are used to lookup values from the
                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                            to select the group of existing pods which pods will be taken into consideration
                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                            pod labels will be ignored. The default value is empty.
                                            The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                            Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                            This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        mismatchLabelKeys:
                                          description: |-
                                            MismatchLabelKeys is a set of pod label keys to select which pods will
                                            be taken into consideration. The keys are used to lookup values from the
                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                            to select the group of existing pods which pods will be taken into consideration
                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                            pod labels will be ignored. The default value is empty.
                                            The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                            Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                            This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        namespaceSelector:
                                          description: |-
                                            A label query over the set of namespaces that the term applies to.
                                            The term is applied to the union of the namespaces selected by this field
                                            and the ones listed in the namespaces field.
                                            null selector and null or empty namespaces list means "this pod's namespace".
                                            An empty selector ({}) matches all namespaces.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: |-
                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                  relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      operator represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      values is an array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. This array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: |-
                                            namespaces specifies a static list of namespace names that the term applies to.
                                            The term is applied to the union of the namespaces listed in this field
                                            and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        topologyKey:
                                          description: |-
                                            This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                            the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                            whose value of the label with key topologyKey matches that of any node on which any of the
                                            selected pods is running.
                                            Empty topologyKey is not allowed.
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                              podAntiAffinity:
                                description: Describes pod anti-affinity scheduling
                                  rules (e.g. avoid putting this pod in the same node,
                                  zone, etc. as some other pod(s)).
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: |-
                                      The scheduler will prefer to schedule pods to nodes that satisfy
                                      the anti-affinity expressions specified by this field, but it may choose
                                      a node that violates one or more of the expressions. The node that is
                                      most preferred is the one with the greatest sum of weights, i.e.
                                      for each node that meets all of the scheduling requirements (resource
                                      request, requiredDuringScheduling anti-affinity expressions, etc.),
                                      compute a sum by iterating through the elements of this field and adding
                                      "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                      node(s) with the highest sum are the most preferred.
                                    items:
                                      description: The weights of all of the matched
                                        WeightedPodAffinityTerm fields are added per-node
                                        to find the most preferred node(s)
                                      properties:
                                        podAffinityTerm:
                                          description: Required. A pod affinity term,
                                            associated with the corresponding weight.
                                          properties:
                                            labelSelector:
                                              description: |-
                                                A label query over a set of resources, in this case pods.
                                                If it's null, this PodAffinityTerm matches with no Pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            matchLabelKeys:
                                              description: |-
                                                MatchLabelKeys is a set of pod label keys to select which pods will
                                                be taken into consideration. The keys are used to lookup values from the
                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                to select the group of existing pods which pods will be taken into consideration
                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                pod labels will be ignored. The default value is empty.
                                                The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            mismatchLabelKeys:
                                              description: |-
                                                MismatchLabelKeys is a set of pod label keys to select which pods will
                                                be taken into consideration. The keys are used to lookup values from the
                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                to select the group of existing pods which pods will be taken into consideration
                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                pod labels will be ignored. The default value is empty.
                                                The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            namespaceSelector:
                                              description: |-
                                                A label query over the set of namespaces that the term applies to.
                                                The term is applied to the union of the namespaces selected by this field
                                                and the ones listed in the namespaces field.
                                                null selector and null or empty namespaces list means "this pod's namespace".
                                                An empty selector ({}) matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaces:
                                              description: |-
                                                namespaces specifies a static list of namespace names that the term applies to.
                                                The term is applied to the union of the namespaces listed in this field
                                                and the ones selected by namespaceSelector.
                                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            topologyKey:
                                              description: |-
                                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                whose value of the label with key topologyKey matches that of any node on which any of the
                                                selected pods is running.
                                                Empty topologyKey is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        weight:
                                          description: |-
                                            weight associated with matching the corresponding podAffinityTerm,
                                            in the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - podAffinityTerm
                                      - weight
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: |-
                                      If the anti-affinity requirements specified by this field are not met at
                                      scheduling time, the pod will not be scheduled onto the node.
                                      If the anti-affinity requirements specified by this field cease to be met
                                      at some point during pod execution (e.g. due to a pod label update), the
                                      system may or may not try to eventually evict the pod from its node.
                                      When there are multiple elements, the lists of nodes corresponding to each
                                      podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                    items:
                                      description: |-
                                        Defines a set of pods (namely those matching the labelSelector
                                        relative to the given namespace(s)) that this pod should be
                                        co-located (affinity) or not co-located (anti-affinity) with,
                                        where co-located is defined as running on a node whose value of
                                        the label with key <topologyKey> matches that of any node on which
                                        a pod of the set of pods is running
                                      properties:
                                        labelSelector:
                                          description: |-
                                            A label query over a set of resources, in this case pods.
                                            If it's null, this PodAffinityTerm matches with no Pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: |-
                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                  relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      operator represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      values is an array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. This array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        matchLabelKeys:
                                          description: |-
                                            MatchLabelKeys is a set of pod label keys to select which pods will
                                            be taken into consideration. The keys are used to lookup values from the
                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                            to select the group of existing pods which pods will be taken into consideration
                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                            pod labels will be ignored. The default value is empty.
                                            The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                            Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                            This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        mismatchLabelKeys:
                                          description: |-
                                            MismatchLabelKeys is a set of pod label keys to select which pods will
                                            be taken into consideration. The keys are used to lookup values from the
                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                            to select the group of existing pods which pods will be taken into consideration
                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                            pod labels will be ignored. The default value is empty.
                                            The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                            Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                            This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        namespaceSelector:
                                          description: |-
                                            A label query over the set of namespaces that the term applies to.
                                            The term is applied to the union of the namespaces selected by this field
                                            and the ones listed in the namespaces field.
                                            null selector and null or empty namespaces list means "this pod's namespace".
                                            An empty selector ({}) matches all namespaces.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: |-
                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                  relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      operator represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      values is an array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. This array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: |-
                                            namespaces specifies a static list of namespace names that the term applies to.
                                            The term is applied to the union of the namespaces listed in this field
                                            and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        topologyKey:
                                          description: |-
                                            This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                            the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                            whose value of the label with key topologyKey matches that of any node on which any of the
                                            selected pods is running.
                                            Empty topologyKey is not allowed.
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                            type: object
                          automountServiceAccountToken:
                            description: AutomountServiceAccountToken indicates whether
                              a service account token should be automatically mounted.
                            type: boolean
                          containers:
                            description: |-
                              List of containers belonging to the pod.
                              Containers cannot currently be added or removed.
                              There must be at least one container in a Pod.
                              Cannot be updated.
                            items:
                              description: A single application container that you
                                want to run within a pod.
                              properties:
                                args:
                                  description: |-
                                    Arguments to the entrypoint.
                                    The container image's CMD is used if this is not provided.
                                    Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                    cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                    to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                    produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Cannot be updated.
                                    More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                command:
                                  description: |-
                                    Entrypoint array. Not executed within a shell.
                                    The container image's ENTRYPOINT is used if this is not provided.
                                    Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                    cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                    to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                    produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Cannot be updated.
                                    More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                env:
                                  description: |-
                                    List of environment variables to set in the container.
                                    Cannot be updated.
                                  items:
                                    description: EnvVar represents an environment
                                      variable present in a Container.
                                    properties:
                                      name:
                                        description: Name of the environment variable.
                                          Must be a C_IDENTIFIER.
                                        type: string
                                      value:
                                        description: |-
                                          Variable references $(VAR_NAME) are expanded
                                          using the previously defined environment variables in the container and
                                          any service environment variables. If a variable cannot be resolved,
                                          the reference in the input string will be unchanged. Double $$ are reduced
                                          to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                          "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                          Escaped references will never be expanded, regardless of whether the variable
                                          exists or not.
                                          Defaults to "".
                                        type: string
                                      valueFrom:
                                        description: Source for the environment variable's
                                          value. Cannot be used if value is not empty.
                                        properties:
                                          configMapKeyRef:
                                            description: Selects a key of a ConfigMap.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          fieldRef:
                                            description: |-
                                              Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                              spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                            properties:
                                              apiVersion:
                                                description: Version of the schema
                                                  the FieldPath is written in terms
                                                  of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to
                                                  select in the specified API version.
                                                type: string
                                            required:
                                            - fieldPath
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          resourceFieldRef:
                                            description: |-
                                              Selects a resource of the container: only resources limits and requests
                                              (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                            properties:
                                              containerName:
                                                description: 'Container name: required
                                                  for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                description: Specifies the output
                                                  format of the exposed resources,
                                                  defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to
                                                  select'
                                                type: string
                                            required:
                                            - resource
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          secretKeyRef:
                                            description: Selects a key of a secret
                                              in the pod's namespace
                                            properties:
                                              key:
                                                description: The key of the secret
                                                  to select from.  Must be a valid
                                                  secret key.
                                                type: string
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        type: object
                                    required:
                                    - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - name
                                  x-kubernetes-list-type: map
                                envFrom:
                                  description: |-
                                    List of sources to populate environment variables in the container.
                                    The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                                    will be reported as an event when the container is starting. When a key exists in multiple
                                    sources, the value associated with the last source will take precedence.
                                    Values defined by an Env with a duplicate key will take precedence.
                                    Cannot be updated.
                                  items:
                                    description: EnvFromSource represents the source
                                      of a set of ConfigMaps
                                    properties:
                                      configMapRef:
                                        description: The ConfigMap to select from
                                        properties:
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              must be defined
                                            type: boolean
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      prefix:
                                        description: An optional identifier to prepend
                                          to each key in the ConfigMap. Must be a
                                          C_IDENTIFIER.
                                        type: string
                                      secretRef:
                                        description: The Secret to select from
                                        properties:
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              must be defined
                                            type: boolean
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                image:
                                  description: |-
                                    Container image name.
                                    More info: https://kubernetes.io/docs/concepts/containers/images
                                    This field is optional to allow higher level config management to default or override
                                    container images in workload controllers like Deployments and StatefulSets.
                                  type: string
                                imagePullPolicy:
                                  description: |-
                                    Image pull policy.
                                    One of Always, Never, IfNotPresent.
                                    Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                                    Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                                  type: string
                                lifecycle:
                                  description: |-
                                    Actions that the management system should take in response to container lifecycle events.
                                    Cannot be updated.
                                  properties:
                                    postStart:
                                      description: |-
                                        PostStart is called immediately after a container is created. If the handler fails,
                                        the container is terminated and restarted according to its restart policy.
                                        Other management of the container blocks until the hook completes.
                                        More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                      properties:
                                        exec:
                                          description: Exec specifies a command to
                                            execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        sleep:
                                          description: Sleep represents a duration
                                            that the container should sleep.
                                          properties:
                                            seconds:
                                              description: Seconds is the number of
                                                seconds to sleep.
                                              format: int64
                                              type: integer
                                          required:
                                          - seconds
                                          type: object
                                        tcpSocket:
                                          description: |-
                                            Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                            for backward compatibility. There is no validation of this field and
                                            lifecycle hooks will fail at runtime when it is specified.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                      type: object
                                    preStop:
                                      description: |-
                                        PreStop is called immediately before a container is terminated due to an
                                        API request or management event such as liveness/startup probe failure,
                                        preemption, resource contention, etc. The handler is not called if the
                                        container crashes or exits. The Pod's termination grace period countdown begins before the
                                        PreStop hook is executed. Regardless of the outcome of the handler, the
                                        container will eventually terminate within the Pod's termination grace
                                        period (unless delayed by finalizers). Other management of the container blocks until the hook completes
                                        or until the termination grace period is reached.
                                        More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                      properties:
                                        exec:
                                          description: Exec specifies a command to
                                            execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        sleep:
                                          description: Sleep represents a duration
                                            that the container should sleep.
                                          properties:
                                            seconds:
                                              description: Seconds is the number of
                                                seconds to sleep.
                                              format: int64
                                              type: integer
                                          required:
                                          - seconds
                                          type: object
                                        tcpSocket:
                                          description: |-
                                            Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                            for backward compatibility. There is no validation of this field and
                                            lifecycle hooks will fail at runtime when it is specified.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                      type: object
                                  type: object
                                livenessProbe:
                                  description: |-
                                    Periodic probe of container liveness.
                                    Container will be restarted if the probe fails.
                                    Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                  properties:
                                    exec:
                                      description: Exec specifies a command to execute
                                        in the container.
                                      properties:
                                        command:
                                          description: |-
                                            Command is the command line to execute inside the container, the working directory for the
                                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                            a shell, you need to explicitly call out to that shell.
                                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    failureThreshold:
                                      description: |-
                                        Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                        Defaults to 3. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies a GRPC HealthCheckRequest.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          default: ""
                                          description: |-
                                            Service is the name of the service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                            If this is not specified, the default behavior is defined by gRPC.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies an HTTP GET request
                                        to perform.
                                      properties:
                                        host:
                                          description: |-
                                            Host name to connect to, defaults to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: |-
                                                  The header field name.
                                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Name or number of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: |-
                                            Scheme to use for connecting to the host.
                                            Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: |-
                                        Number of seconds after the container has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: |-
                                        How often (in seconds) to perform the probe.
                                        Default to 10 seconds. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: |-
                                        Minimum consecutive successes for the probe to be considered successful after having failed.
                                        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies a connection
                                        to a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Number or name of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: |-
                                        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                        The grace period is the duration in seconds after the processes running in the pod are sent
                                        a termination signal and the time when the processes are forcibly halted with a kill signal.
                                        Set this value longer than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                        value overrides the value provided by the pod spec.
                                        Value must be non-negative integer. The value zero indicates stop immediately via
                                        the kill signal (no opportunity to shut down).
                                        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: |-
                                        Number of seconds after which the probe times out.
                                        Defaults to 1 second. Minimum value is 1.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                  type: object
                                name:
                                  description: |-
                                    Name of the container specified as a DNS_LABEL.
                                    Each container in a pod must have a unique name (DNS_LABEL).
                                    Cannot be updated.
                                  type: string
                                ports:
                                  description: |-
                                    List of ports to expose from the container. Not specifying a port here
                                    DOES NOT prevent that port from being exposed. Any port which is
                                    listening on the default "0.0.0.0" address inside a container will be
                                    accessible from the network.
                                    Modifying this array with strategic merge patch may corrupt the data.
                                    For more information See https://github.com/kubernetes/kubernetes/issues/108255.
                                    Cannot be updated.
                                  items:
                                    description: ContainerPort represents a network
                                      port in a single container.
                                    properties:
                                      containerPort:
                                        description: |-
                                          Number of port to expose on the pod's IP address.
                                          This must be a valid port number, 0 < x < 65536.
                                        format: int32
                                        type: integer
                                      hostIP:
                                        description: What host IP to bind the external
                                          port to.
                                        type: string
                                      hostPort:
                                        description: |-
                                          Number of port to expose on the host.
                                          If specified, this must be a valid port number, 0 < x < 65536.
                                          If HostNetwork is specified, this must match ContainerPort.
                                          Most containers do not need this.
                                        format: int32
                                        type: integer
                                      name:
                                        description: |-
                                          If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                                          named port in a pod must have a unique name. Name for the port that can be
                                          referred to by services.
                                        type: string
                                      protocol:
                                        default: TCP
                                        description: |-
                                          Protocol for port. Must be UDP, TCP, or SCTP.
                                          Defaults to "TCP".
                                        type: string
                                    required:
                                    - containerPort
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - containerPort
                                  - protocol
                                  x-kubernetes-list-type: map
                                readinessProbe:
                                  description: |-
                                    Periodic probe of container service readiness.
                                    Container will be removed from service endpoints if the probe fails.
                                    Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                  properties:
                                    exec:
                                      description: Exec specifies a command to execute
                                        in the container.
                                      properties:
                                        command:
                                          description: |-
                                            Command is the command line to execute inside the container, the working directory for the
                                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                            a shell, you need to explicitly call out to that shell.
                                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    failureThreshold:
                                      description: |-
                                        Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                        Defaults to 3. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies a GRPC HealthCheckRequest.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          default: ""
                                          description: |-
                                            Service is the name of the service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                            If this is not specified, the default behavior is defined by gRPC.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies an HTTP GET request
                                        to perform.
                                      properties:
                                        host:
                                          description: |-
                                            Host name to connect to, defaults to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: |-
                                                  The header field name.
                                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Name or number of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: |-
                                            Scheme to use for connecting to the host.
                                            Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: |-
                                        Number of seconds after the container has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: |-
                                        How often (in seconds) to perform the probe.
                                        Default to 10 seconds. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: |-
                                        Minimum consecutive successes for the probe to be considered successful after having failed.
                                        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies a connection
                                        to a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Number or name of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: |-
                                        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                        The grace period is the duration in seconds after the processes running in the pod are sent
                                        a termination signal and the time when the processes are forcibly halted with a kill signal.
                                        Set this value longer than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                        value overrides the value provided by the pod spec.
                                        Value must be non-negative integer. The value zero indicates stop immediately via
                                        the kill signal (no opportunity to shut down).
                                        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: |-
                                        Number of seconds after which the probe times out.
                                        Defaults to 1 second. Minimum value is 1.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                  type: object
                                resizePolicy:
                                  description: Resources resize policy for the container.
                                  items:
                                    description: ContainerResizePolicy represents
                                      resource resize policy for the container.
                                    properties:
                                      resourceName:
                                        description: |-
                                          Name of the resource to which this resource resize policy applies.
                                          Supported values: cpu, memory.
                                        type: string
                                      restartPolicy:
                                        description: |-
                                          Restart policy to apply when specified resource is resized.
                                          If not specified, it defaults to NotRequired.
                                        type: string
                                    required:
                                    - resourceName
                                    - restartPolicy
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                resources:
                                  description: |-
                                    Compute Resources required by this container.
                                    Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                  properties:
                                    claims:
                                      description: |-
                                        Claims lists the names of resources, defined in spec.resourceClaims,
                                        that are used by this container.

                                        This is an alpha field and requires enabling the
                                        DynamicResourceAllocation feature gate.

                                        This field is immutable. It can only be set for containers.
                                      items:
                                        description: ResourceClaim references one
                                          entry in PodSpec.ResourceClaims.
                                        properties:
                                          name:
                                            description: |-
                                              Name must match the name of one entry in pod.spec.resourceClaims of
                                              the Pod where this field is used. It makes that resource available
                                              inside a container.
                                            type: string
                                          request:
                                            description: |-
                                              Request is the name chosen for a request in the referenced claim.
                                              If empty, everything from the claim is made available, otherwise
                                              only the result of this request.
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    limits:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: |-
                                        Limits describes the maximum amount of compute resources allowed.
                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                      type: object
                                    requests:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: |-
                                        Requests describes the minimum amount of compute resources required.
                                        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                        otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                      type: object
                                  type: object
                                restartPolicy:
                                  description: |-
                                    RestartPolicy defines the restart behavior of individual containers in a pod.
                                    This field may only be set for init containers, and the only allowed value is "Always".
                                    For non-init containers or when this field is not specified,
                                    the restart behavior is defined by the Pod's restart policy and the container type.
                                    Setting the RestartPolicy as "Always" for the init container will have the following effect:
                                    this init container will be continually restarted on
                                    exit until all regular containers have terminated. Once all regular
                                    containers have completed, all init containers with restartPolicy "Always"
                                    will be shut down. This lifecycle differs from normal init containers and
                                    is often referred to as a "sidecar" container. Although this init
                                    container still starts in the init container sequence, it does not wait
                                    for the container to complete before proceeding to the next init
                                    container. Instead, the next init container starts immediately after this
                                    init container is started, or after any startupProbe has successfully
                                    completed.
                                  type: string
                                securityContext:
                                  description: |-
                                    SecurityContext defines the security options the container should be run with.
                                    If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
                                    More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
                                  properties:
                                    allowPrivilegeEscalation:
                                      description: |-
                                        AllowPrivilegeEscalation controls whether a process can gain more
                                        privileges than its parent process. This bool directly controls if
                                        the no_new_privs flag will be set on the container process.
                                        AllowPrivilegeEscalation is true always when the container is:
                                        1) run as Privileged
                                        2) has CAP_SYS_ADMIN
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: boolean
                                    appArmorProfile:
                                      description: |-
                                        appArmorProfile is the AppArmor options to use by this container. If set, this profile
                                        overrides the pod's appArmorProfile.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        localhostProfile:
                                          description: |-
                                            localhostProfile indicates a profile loaded on the node that should be used.
                                            The profile must be preconfigured on the node to work.
                                            Must match the loaded name of the profile.
                                            Must be set if and only if type is "Localhost".
                                          type: string
                                        type:
                                          description: |-
                                            type indicates which kind of AppArmor profile will be applied.
                                            Valid options are:
                                              Localhost - a profile pre-loaded on the node.
                                              RuntimeDefault - the container runtime's default profile.
                                              Unconfined - no AppArmor enforcement.
                                          type: string
                                      required:
                                      - type
                                      type: object
                                    capabilities:
                                      description: |-
                                        The capabilities to add/drop when running containers.
                                        Defaults to the default set of capabilities granted by the container runtime.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        add:
                                          description: Added capabilities
                                          items:
                                            description: Capability represent POSIX
                                              capabilities type
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        drop:
                                          description: Removed capabilities
                                          items:
                                            description: Capability represent POSIX
                                              capabilities type
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    privileged:
                                      description: |-
                                        Run container in privileged mode.
                                        Processes in privileged containers are essentially equivalent to root on the host.
                                        Defaults to false.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: boolean
                                    procMount:
                                      description: |-
                                        procMount denotes the type of proc mount to use for the containers.
                                        The default value is Default which uses the container runtime defaults for
                                        readonly paths and masked paths.
                                        This requires the ProcMountType feature flag to be enabled.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: string
                                    readOnlyRootFilesystem:
                                      description: |-
                                        Whether this container has a read-only root filesystem.
                                        Default is false.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: boolean
                                    runAsGroup:
                                      description: |-
                                        The GID to run the entrypoint of the container process.
                                        Uses runtime default if unset.
                                        May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      format: int64
                                      type: integer
                                    runAsNonRoot:
                                      description: |-
                                        Indicates that the container must run as a non-root user.
                                        If true, the Kubelet will validate the image at runtime to ensure that it
                                        does not run as UID 0 (root) and fail to start the container if it does.
                                        If unset or false, no such validation will be performed.
                                        May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                      type: boolean
                                    runAsUser:
                                      description: |-
                                        The UID to run the entrypoint of the container process.
                                        Defaults to user specified in image metadata if unspecified.
                                        May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      format: int64
                                      type: integer
                                    seLinuxOptions:
                                      description: |-
                                        The SELinux context to be applied to the container.
                                        If unspecified, the container runtime will allocate a random SELinux context for each
                                        container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        level:
                                          description: Level is SELinux level label
                                            that applies to the container.
                                          type: string
                                        role:
                                          description: Role is a SELinux role label
                                            that applies to the container.
                                          type: string
                                        type:
                                          description: Type is a SELinux type label
                                            that applies to the container.
                                          type: string
                                        user:
                                          description: User is a SELinux user label
                                            that applies to the container.
                                          type: string
                                      type: object
                                    seccompProfile:
                                      description: |-
                                        The seccomp options to use by this container. If seccomp options are
                                        provided at both the pod & container level, the container options
                                        override the pod options.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        localhostProfile:
                                          description: |-
                                            localhostProfile indicates a profile defined in a file on the node should be used.
                                            The profile must be preconfigured on the node to work.
                                            Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                            Must be set if type is "Localhost". Must NOT be set for any other type.
                                          type: string
                                        type:
                                          description: |-
                                            type indicates which kind of seccomp profile will be applied.
                                            Valid options are:

                                            Localhost - a profile defined in a file on the node should be used.
                                            RuntimeDefault - the container runtime default profile should be used.
                                            Unconfined - no profile should be applied.
                                          type: string
                                      required:
                                      - type
                                      type: object
                                    windowsOptions:
                                      description: |-
                                        The Windows specific settings applied to all containers.
                                        If unspecified, the options from the PodSecurityContext will be used.
                                        If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is linux.
                                      properties:
                                        gmsaCredentialSpec:
                                          description: |-
                                            GMSACredentialSpec is where the GMSA admission webhook
                                            (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                            GMSA credential spec named by the GMSACredentialSpecName field.
                                          type: string
                                        gmsaCredentialSpecName:
                                          description: GMSACredentialSpecName is the
                                            name of the GMSA credential spec to use.
                                          type: string
                                        hostProcess:
                                          description: |-
                                            HostProcess determines if a container should be run as a 'Host Process' container.
                                            All of a Pod's containers must have the same effective HostProcess value
                                            (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                            In addition, if HostProcess is true then HostNetwork must also be set to true.
                                          type: boolean
                                        runAsUserName:
                                          description: |-
                                            The UserName in Windows to run the entrypoint of the container process.
                                            Defaults to the user specified in image metadata if unspecified.
                                            May also be set in PodSecurityContext. If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                          type: string
                                      type: object
                                  type: object
                                startupProbe:
                                  description: |-
                                    StartupProbe indicates that the Pod has successfully initialized.
                                    If specified, no other probes are executed until this completes successfully.
                                    If this probe fails, the Pod will be restarted, just as if the livenessProbe failed.
                                    This can be used to provide different probe parameters at the beginning of a Pod's lifecycle,
                                    when it might take a long time to load data or warm a cache, than during steady-state operation.
                                    This cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                  properties:
                                    exec:
                                      description: Exec specifies a command to execute
                                        in the container.
                                      properties:
                                        command:
                                          description: |-
                                            Command is the command line to execute inside the container, the working directory for the
                                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                            a shell, you need to explicitly call out to that shell.
                                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    failureThreshold:
                                      description: |-
                                        Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                        Defaults to 3. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies a GRPC HealthCheckRequest.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          default: ""
                                          description: |-
                                            Service is the name of the service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                            If this is not specified, the default behavior is defined by gRPC.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies an HTTP GET request
                                        to perform.
                                      properties:
                                        host:
                                          description: |-
                                            Host name to connect to, defaults to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: |-
                                                  The header field name.
                                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Name or number of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: |-
                                            Scheme to use for connecting to the host.
                                            Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: |-
                                        Number of seconds after the container has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: |-
                                        How often (in seconds) to perform the probe.
                                        Default to 10 seconds. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: |-
                                        Minimum consecutive successes for the probe to be considered successful after having failed.
                                        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies a connection
                                        to a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Number or name of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: |-
                                        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                        The grace period is the duration in seconds after the processes running in the pod are sent
                                        a termination signal and the time when the processes are forcibly halted with a kill signal.
                                        Set this value longer than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                        value overrides the value provided by the pod spec.
                                        Value must be non-negative integer. The value zero indicates stop immediately via
                                        the kill signal (no opportunity to shut down).
                                        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: |-
                                        Number of seconds after which the probe times out.
                                        Defaults to 1 second. Minimum value is 1.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                  type: object
                                stdin:
                                  description: |-
                                    Whether this container should allocate a buffer for stdin in the container runtime. If this
                                    is not set, reads from stdin in the container will always result in EOF.
                                    Default is false.
                                  type: boolean
                                stdinOnce:
                                  description: |-
                                    Whether the container runtime should close the stdin channel after it has been opened by
                                    a single attach. When stdin is true the stdin stream will remain open across multiple attach
                                    sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
                                    first client attaches to stdin, and then remains open and accepts data until the client disconnects,
                                    at which time stdin is closed and remains closed until the container is restarted. If this
                                    flag is false, a container processes that reads from stdin will never receive an EOF.
                                    Default is false
                                  type: boolean
                                terminationMessagePath:
                                  description: |-
                                    Optional: Path at which the file to which the container's termination message
                                    will be written is mounted into the container's filesystem.
                                    Message written is intended to be brief final status, such as an assertion failure message.
                                    Will be truncated by the node if greater than 4096 bytes. The total message length across
                                    all containers will be limited to 12kb.
                                    Defaults to /dev/termination-log.
                                    Cannot be updated.
                                  type: string
                                terminationMessagePolicy:
                                  description: |-
                                    Indicate how the termination message should be populated. File will use the contents of
                                    terminationMessagePath to populate the container status message on both success and failure.
                                    FallbackToLogsOnError will use the last chunk of container log output if the termination
                                    message file is empty and the container exited with an error.
                                    The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
                                    Defaults to File.
                                    Cannot be updated.
                                  type: string
                                tty:
                                  description: |-
                                    Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
                                    Default is false.
                                  type: boolean
                                volumeDevices:
                                  description: volumeDevices is the list of block
                                    devices to be used by the container.
                                  items:
                                    description: volumeDevice describes a mapping
                                      of a raw block device within a container.
                                    properties:
                                      devicePath:
                                        description: devicePath is the path inside
                                          of the container that the device will be
                                          mapped to.
                                        type: string
                                      name:
                                        description: name must match the name of a
                                          persistentVolumeClaim in the pod
                                        type: string
                                    required:
                                    - devicePath
                                    - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - devicePath
                                  x-kubernetes-list-type: map
                                volumeMounts:
                                  description: |-
                                    Pod volumes to mount into the container's filesystem.
                                    Cannot be updated.
                                  items:
                                    description: VolumeMount describes a mounting
                                      of a Volume within a container.
                                    properties:
                                      mountPath:
                                        description: |-
                                          Path within the container at which the volume should be mounted.  Must
                                          not contain ':'.
                                        type: string
                                      mountPropagation:
                                        description: |-
                                          mountPropagation determines how mounts are propagated from the host
                                          to container and the other way around.
                                          When not set, MountPropagationNone is used.
                                          This field is beta in 1.10.
                                          When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                                          (which defaults to None).
                                        type: string
                                      name:
                                        description: This must match the Name of a
                                          Volume.
                                        type: string
                                      readOnly:
                                        description: |-
                                          Mounted read-only if true, read-write otherwise (false or unspecified).
                                          Defaults to false.
                                        type: boolean
                                      recursiveReadOnly:
                                        description: |-
                                          RecursiveReadOnly specifies whether read-only mounts should be handled
                                          recursively.

                                          If ReadOnly is false, this field has no meaning and must be unspecified.

                                          If ReadOnly is true, and this field is set to Disabled, the mount is not made
                                          recursively read-only.  If this field is set to IfPossible, the mount is made
                                          recursively read-only, if it is supported by the container runtime.  If this
                                          field is set to Enabled, the mount is made recursively read-only if it is
                                          supported by the container runtime, otherwise the pod will not be started and
                                          an error will be generated to indicate the reason.

                                          If this field is set to IfPossible or Enabled, MountPropagation must be set to
                                          None (or be unspecified, which defaults to None).

                                          If this field is not specified, it is treated as an equivalent of Disabled.
                                        type: string
                                      subPath:
                                        description: |-
                                          Path within the volume from which the container's volume should be mounted.
                                          Defaults to "" (volume's root).
                                        type: string
                                      subPathExpr:
                                        description: |-
                                          Expanded path within the volume from which the container's volume should be mounted.
                                          Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                          Defaults to "" (volume's root).
                                          SubPathExpr and SubPath are mutually exclusive.
                                        type: string
                                    required:
                                    - mountPath
                                    - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - mountPath
                                  x-kubernetes-list-type: map
                                workingDir:
                                  description: |-
                                    Container's working directory.
                                    If not specified, the container runtime's default will be used, which
                                    might be configured in the container image.
                                    Cannot be updated.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          dnsConfig:
                            description: |-
                              Specifies the DNS parameters of a pod.
                              Parameters specified here will be merged to the generated DNS
                              configuration based on DNSPolicy.
                            properties:
                              nameservers:
                                description: |-
                                  A list of DNS name server IP addresses.
                                  This will be appended to the base nameservers generated from DNSPolicy.
                                  Duplicated nameservers will be removed.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                              options:
                                description: |-
                                  A list of DNS resolver options.
                                  This will be merged with the base options generated from DNSPolicy.
                                  Duplicated entries will be removed. Resolution options given in Options
                                  will override those that appear in the base DNSPolicy.
                                items:
                                  description: PodDNSConfigOption defines DNS resolver
                                    options of a pod.
                                  properties:
                                    name:
                                      description: |-
                                        Name is this DNS resolver option's name.
                                        Required.
                                      type: string
                                    value:
                                      description: Value is this DNS resolver option's
                                        value.
                                      type: string
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              searches:
                                description: |-
                                  A list of DNS search domains for host-name lookup.
                                  This will be appended to the base search paths generated from DNSPolicy.
                                  Duplicated search paths will be removed.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                          dnsPolicy:
                            description: |-
                              Set DNS policy for the pod.
                              Defaults to "ClusterFirst".
                              Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'.
                              DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.
                              To have DNS options set along with hostNetwork, you have to specify DNS policy
                              explicitly to 'ClusterFirstWithHostNet'.
                            type: string
                          enableServiceLinks:
                            description: |-
                              EnableServiceLinks indicates whether information about services should be injected into pod's
                              environment variables, matching the syntax of Docker links.
                              Optional: Defaults to true.
                            type: boolean
                          ephemeralContainers:
                            description: |-
                              List of ephemeral containers run in this pod. Ephemeral containers may be run in an existing
                              pod to perform user-initiated actions such as debugging. This list cannot be specified when
                              creating a pod, and it cannot be modified by updating the pod spec. In order to add an
                              ephemeral container to an existing pod, use the pod's ephemeralcontainers subresource.
                            items:
                              description: |-
                                An EphemeralContainer is a temporary container that you may add to an existing Pod for
                                user-initiated activities such as debugging. Ephemeral containers have no resource or
                                scheduling guarantees, and they will not be restarted when they exit or when a Pod is
                                removed or restarted. The kubelet may evict a Pod if an ephemeral container causes the
                                Pod to exceed its resource allocation.

                                To add an ephemeral container, use the ephemeralcontainers subresource of an existing
                                Pod. Ephemeral containers may not be removed or restarted.
                              properties:
                                args:
                                  description: |-
                                    Arguments to the entrypoint.
                                    The image's CMD is used if this is not provided.
                                    Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                    cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                    to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                    produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Cannot be updated.
                                    More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                command:
                                  description: |-
                                    Entrypoint array. Not executed within a shell.
                                    The image's ENTRYPOINT is used if this is not provided.
                                    Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                    cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                    to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                    produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Cannot be updated.
                                    More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                env:
                                  description: |-
                                    List of environment variables to set in the container.
                                    Cannot be updated.
                                  items:
                                    description: EnvVar represents an environment
                                      variable present in a Container.
                                    properties:
                                      name:
                                        description: Name of the environment variable.
                                          Must be a C_IDENTIFIER.
                                        type: string
                                      value:
                                        description: |-
                                          Variable references $(VAR_NAME) are expanded
                                          using the previously defined environment variables in the container and
                                          any service environment variables. If a variable cannot be resolved,
                                          the reference in the input string will be unchanged. Double $$ are reduced
                                          to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                          "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                          Escaped references will never be expanded, regardless of whether the variable
                                          exists or not.
                                          Defaults to "".
                                        type: string
                                      valueFrom:
                                        description: Source for the environment variable's
                                          value. Cannot be used if value is not empty.
                                        properties:
                                          configMapKeyRef:
                                            description: Selects a key of a ConfigMap.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          fieldRef:
                                            description: |-
                                              Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                              spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                            properties:
                                              apiVersion:
                                                description: Version of the schema
                                                  the FieldPath is written in terms
                                                  of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to
                                                  select in the specified API version.
                                                type: string
                                            required:
                                            - fieldPath
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          resourceFieldRef:
                                            description: |-
                                              Selects a resource of the container: only resources limits and requests
                                              (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                            properties:
                                              containerName:
                                                description: 'Container name: required
                                                  for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                description: Specifies the output
                                                  format of the exposed resources,
                                                  defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to
                                                  select'
                                                type: string
                                            required:
                                            - resource
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          secretKeyRef:
                                            description: Selects a key of a secret
                                              in the pod's namespace
                                            properties:
                                              key:
                                                description: The key of the secret
                                                  to select from.  Must be a valid
                                                  secret key.
                                                type: string
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        type: object
                                    required:
                                    - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - name
                                  x-kubernetes-list-type: map
                                envFrom:
                                  description: |-
                                    List of sources to populate environment variables in the container.
                                    The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                                    will be reported as an event when the container is starting. When a key exists in multiple
                                    sources, the value associated with the last source will take precedence.
                                    Values defined by an Env with a duplicate key will take precedence.
                                    Cannot be updated.
                                  items:
                                    description: EnvFromSource represents the source
                                      of a set of ConfigMaps
                                    properties:
                                      configMapRef:
                                        description: The ConfigMap to select from
                                        properties:
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              must be defined
                                            type: boolean
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      prefix:
                                        description: An optional identifier to prepend
                                          to each key in the ConfigMap. Must be a
                                          C_IDENTIFIER.
                                        type: string
                                      secretRef:
                                        description: The Secret to select from
                                        properties:
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              must be defined
                                            type: boolean
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                image:
                                  description: |-
                                    Container image name.
                                    More info: https://kubernetes.io/docs/concepts/containers/images
                                  type: string
                                imagePullPolicy:
                                  description: |-
                                    Image pull policy.
                                    One of Always, Never, IfNotPresent.
                                    Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                                    Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                                  type: string
                                lifecycle:
                                  description: Lifecycle is not allowed for ephemeral
                                    containers.
                                  properties:
                                    postStart:
                                      description: |-
                                        PostStart is called immediately after a container is created. If the handler fails,
                                        the container is terminated and restarted according to its restart policy.
                                        Other management of the container blocks until the hook completes.
                                        More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                      properties:
                                        exec:
                                          description: Exec specifies a command to
                                            execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        sleep:
                                          description: Sleep represents a duration
                                            that the container should sleep.
                                          properties:
                                            seconds:
                                              description: Seconds is the number of
                                                seconds to sleep.
                                              format: int64
                                              type: integer
                                          required:
                                          - seconds
                                          type: object
                                        tcpSocket:
                                          description: |-
                                            Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                            for backward compatibility. There is no validation of this field and
                                            lifecycle hooks will fail at runtime when it is specified.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                      type: object
                                    preStop:
                                      description: |-
                                        PreStop is called immediately before a container is terminated due to an
                                        API request or management event such as liveness/startup probe failure,
                                        preemption, resource contention, etc. The handler is not called if the
                                        container crashes or exits. The Pod's termination grace period countdown begins before the
                                        PreStop hook is executed. Regardless of the outcome of the handler, the
                                        container will eventually terminate within the Pod's termination grace
                                        period (unless delayed by finalizers). Other management of the container blocks until the hook completes
                                        or until the termination grace period is reached.
                                        More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                      properties:
                                        exec:
                                          description: Exec specifies a command to
                                            execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        sleep:
                                          description: Sleep represents a duration
                                            that the container should sleep.
                                          properties:
                                            seconds:
                                              description: Seconds is the number of
                                                seconds to sleep.
                                              format: int64
                                              type: integer
                                          required:
                                          - seconds
                                          type: object
                                        tcpSocket:
                                          description: |-
                                            Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                            for backward compatibility. There is no validation of this field and
                                            lifecycle hooks will fail at runtime when it is specified.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                      type: object
                                  type: object
                                livenessProbe:
                                  description: Probes are not allowed for ephemeral
                                    containers.
                                  properties:
                                    exec:
                                      description: Exec specifies a command to execute
                                        in the container.
                                      properties:
                                        command:
                                          description: |-
                                            Command is the command line to execute inside the container, the working directory for the
                                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                            a shell, you need to explicitly call out to that shell.
                                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    failureThreshold:
                                      description: |-
                                        Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                        Defaults to 3. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies a GRPC HealthCheckRequest.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          default: ""
                                          description: |-
                                            Service is the name of the service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                            If this is not specified, the default behavior is defined by gRPC.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies an HTTP GET request
                                        to perform.
                                      properties:
                                        host:
                                          description: |-
                                            Host name to connect to, defaults to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: |-
                                                  The header field name.
                                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Name or number of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: |-
                                            Scheme to use for connecting to the host.
                                            Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: |-
                                        Number of seconds after the container has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: |-
                                        How often (in seconds) to perform the probe.
                                        Default to 10 seconds. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: |-
                                        Minimum consecutive successes for the probe to be considered successful after having failed.
                                        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies a connection
                                        to a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Number or name of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: |-
                                        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                        The grace period is the duration in seconds after the processes running in the pod are sent
                                        a termination signal and the time when the processes are forcibly halted with a kill signal.
                                        Set this value longer than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                        value overrides the value provided by the pod spec.
                                        Value must be non-negative integer. The value zero indicates stop immediately via
                                        the kill signal (no opportunity to shut down).
                                        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: |-
                                        Number of seconds after which the probe times out.
                                        Defaults to 1 second. Minimum value is 1.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                  type: object
                                name:
                                  description: |-
                                    Name of the ephemeral container specified as a DNS_LABEL.
                                    This name must be unique among all containers, init containers and ephemeral containers.
                                  type: string
                                ports:
                                  description: Ports are not allowed for ephemeral
                                    containers.
                                  items:
                                    description: ContainerPort represents a network
                                      port in a single container.
                                    properties:
                                      containerPort:
                                        description: |-
                                          Number of port to expose on the pod's IP address.
                                          This must be a valid port number, 0 < x < 65536.
                                        format: int32
                                        type: integer
                                      hostIP:
                                        description: What host IP to bind the external
                                          port to.
                                        type: string
                                      hostPort:
                                        description: |-
                                          Number of port to expose on the host.
                                          If specified, this must be a valid port number, 0 < x < 65536.
                                          If HostNetwork is specified, this must match ContainerPort.
                                          Most containers do not need this.
                                        format: int32
                                        type: integer
                                      name:
                                        description: |-
                                          If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                                          named port in a pod must have a unique name. Name for the port that can be
                                          referred to by services.
                                        type: string
                                      protocol:
                                        default: TCP
                                        description: |-
                                          Protocol for port. Must be UDP, TCP, or SCTP.
                                          Defaults to "TCP".
                                        type: string
                                    required:
                                    - containerPort
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - containerPort
                                  - protocol
                                  x-kubernetes-list-type: map
                                readinessProbe:
                                  description: Probes are not allowed for ephemeral
                                    containers.
                                  properties:
                                    exec:
                                      description: Exec specifies a command to execute
                                        in the container.
                                      properties:
                                        command:
                                          description: |-
                                            Command is the command line to execute inside the container, the working directory for the
                                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                            a shell, you need to explicitly call out to that shell.
                                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    failureThreshold:
                                      description: |-
                                        Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                        Defaults to 3. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies a GRPC HealthCheckRequest.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          default: ""
                                          description: |-
                                            Service is the name of the service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                            If this is not specified, the default behavior is defined by gRPC.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies an HTTP GET request
                                        to perform.
                                      properties:
                                        host:
                                          description: |-
                                            Host name to connect to, defaults to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: |-
                                                  The header field name.
                                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Name or number of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: |-
                                            Scheme to use for connecting to the host.
                                            Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: |-
                                        Number of seconds after the container has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: |-
                                        How often (in seconds) to perform the probe.
                                        Default to 10 seconds. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: |-
                                        Minimum consecutive successes for the probe to be considered successful after having failed.
                                        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies a connection
                                        to a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Number or name of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: |-
                                        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                        The grace period is the duration in seconds after the processes running in the pod are sent
                                        a termination signal and the time when the processes are forcibly halted with a kill signal.
                                        Set this value longer than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                        value overrides the value provided by the pod spec.
                                        Value must be non-negative integer. The value zero indicates stop immediately via
                                        the kill signal (no opportunity to shut down).
                                        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: |-
                                        Number of seconds after which the probe times out.
                                        Defaults to 1 second. Minimum value is 1.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                  type: object
                                resizePolicy:
                                  description: Resources resize policy for the container.
                                  items:
                                    description: ContainerResizePolicy represents
                                      resource resize policy for the container.
                                    properties:
                                      resourceName:
                                        description: |-
                                          Name of the resource to which this resource resize policy applies.
                                          Supported values: cpu, memory.
                                        type: string
                                      restartPolicy:
                                        description: |-
                                          Restart policy to apply when specified resource is resized.
                                          If not specified, it defaults to NotRequired.
                                        type: string
                                    required:
                                    - resourceName
                                    - restartPolicy
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                resources:
                                  description: |-
                                    Resources are not allowed for ephemeral containers. Ephemeral containers use spare resources
                                    already allocated to the pod.
                                  properties:
                                    claims:
                                      description: |-
                                        Claims lists the names of resources, defined in spec.resourceClaims,
                                        that are used by this container.

                                        This is an alpha field and requires enabling the
                                        DynamicResourceAllocation feature gate.

                                        This field is immutable. It can only be set for containers.
                                      items:
                                        description: ResourceClaim references one
                                          entry in PodSpec.ResourceClaims.
                                        properties:
                                          name:
                                            description: |-
                                              Name must match the name of one entry in pod.spec.resourceClaims of
                                              the Pod where this field is used. It makes that resource available
                                              inside a container.
                                            type: string
                                          request:
                                            description: |-
                                              Request is the name chosen for a request in the referenced claim.
                                              If empty, everything from the claim is made available, otherwise
                                              only the result of this request.
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    limits:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: |-
                                        Limits describes the maximum amount of compute resources allowed.
                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                      type: object
                                    requests:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: |-
                                        Requests describes the minimum amount of compute resources required.
                                        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                        otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                      type: object
                                  type: object
                                restartPolicy:
                                  description: |-
                                    Restart policy for the container to manage the restart behavior of each
                                    container within a pod.
                                    This may only be set for init containers. You cannot set this field on
                                    ephemeral containers.
                                  type: string
                                securityContext:
                                  description: |-
                                    Optional: SecurityContext defines the security options the ephemeral container should be run with.
                                    If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
                                  properties:
                                    allowPrivilegeEscalation:
                                      description: |-
                                        AllowPrivilegeEscalation controls whether a process can gain more
                                        privileges than its parent process. This bool directly controls if
                                        the no_new_privs flag will be set on the container process.
                                        AllowPrivilegeEscalation is true always when the container is:
                                        1) run as Privileged
                                        2) has CAP_SYS_ADMIN
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: boolean
                                    appArmorProfile:
                                      description: |-
                                        appArmorProfile is the AppArmor options to use by this container. If set, this profile
                                        overrides the pod's appArmorProfile.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        localhostProfile:
                                          description: |-
                                            localhostProfile indicates a profile loaded on the node that should be used.
                                            The profile must be preconfigured on the node to work.
                                            Must match the loaded name of the profile.
                                            Must be set if and only if type is "Localhost".
                                          type: string
                                        type:
                                          description: |-
                                            type indicates which kind of AppArmor profile will be applied.
                                            Valid options are:
                                              Localhost - a profile pre-loaded on the node.
                                              RuntimeDefault - the container runtime's default profile.
                                              Unconfined - no AppArmor enforcement.
                                          type: string
                                      required:
                                      - type
                                      type: object
                                    capabilities:
                                      description: |-
                                        The capabilities to add/drop when running containers.
                                        Defaults to the default set of capabilities granted by the container runtime.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        add:
                                          description: Added capabilities
                                          items:
                                            description: Capability represent POSIX
                                              capabilities type
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        drop:
                                          description: Removed capabilities
                                          items:
                                            description: Capability represent POSIX
                                              capabilities type
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    privileged:
                                      description: |-
                                        Run container in privileged mode.
                                        Processes in privileged containers are essentially equivalent to root on the host.
                                        Defaults to false.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: boolean
                                    procMount:
                                      description: |-
                                        procMount denotes the type of proc mount to use for the containers.
                                        The default value is Default which uses the container runtime defaults for
                                        readonly paths and masked paths.
                                        This requires the ProcMountType feature flag to be enabled.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: string
                                    readOnlyRootFilesystem:
                                      description: |-
                                        Whether this container has a read-only root filesystem.
                                        Default is false.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: boolean
                                    runAsGroup:
                                      description: |-
                                        The GID to run the entrypoint of the container process.
                                        Uses runtime default if unset.
                                        May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      format: int64
                                      type: integer
                                    runAsNonRoot:
                                      description: |-
                                        Indicates that the container must run as a non-root user.
                                        If true, the Kubelet will validate the image at runtime to ensure that it
                                        does not run as UID 0 (root) and fail to start the container if it does.
                                        If unset or false, no such validation will be performed.
                                        May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                      type: boolean
                                    runAsUser:
                                      description: |-
                                        The UID to run the entrypoint of the container process.
                                        Defaults to user specified in image metadata if unspecified.
                                        May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      format: int64
                                      type: integer
                                    seLinuxOptions:
                                      description: |-
                                        The SELinux context to be applied to the container.
                                        If unspecified, the container runtime will allocate a random SELinux context for each
                                        container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        level:
                                          description: Level is SELinux level label
                                            that applies to the container.
                                          type: string
                                        role:
                                          description: Role is a SELinux role label
                                            that applies to the container.
                                          type: string
                                        type:
                                          description: Type is a SELinux type label
                                            that applies to the container.
                                          type: string
                                        user:
                                          description: User is a SELinux user label
                                            that applies to the container.
                                          type: string
                                      type: object
                                    seccompProfile:
                                      description: |-
                                        The seccomp options to use by this container. If seccomp options are
                                        provided at both the pod & container level, the container options
                                        override the pod options.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        localhostProfile:
                                          description: |-
                                            localhostProfile indicates a profile defined in a file on the node should be used.
                                            The profile must be preconfigured on the node to work.
                                            Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                            Must be set if type is "Localhost". Must NOT be set for any other type.
                                          type: string
                                        type:
                                          description: |-
                                            type indicates which kind of seccomp profile will be applied.
                                            Valid options are:

                                            Localhost - a profile defined in a file on the node should be used.
                                            RuntimeDefault - the container runtime default profile should be used.
                                            Unconfined - no profile should be applied.
                                          type: string
                                      required:
                                      - type
                                      type: object
                                    windowsOptions:
                                      description: |-
                                        The Windows specific settings applied to all containers.
                                        If unspecified, the options from the PodSecurityContext will be used.
                                        If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is linux.
                                      properties:
                                        gmsaCredentialSpec:
                                          description: |-
                                            GMSACredentialSpec is where the GMSA admission webhook
                                            (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                            GMSA credential spec named by the GMSACredentialSpecName field.
                                          type: string
                                        gmsaCredentialSpecName:
                                          description: GMSACredentialSpecName is the
                                            name of the GMSA credential spec to use.
                                          type: string
                                        hostProcess:
                                          description: |-
                                            HostProcess determines if a container should be run as a 'Host Process' container.
                                            All of a Pod's containers must have the same effective HostProcess value
                                            (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                            In addition, if HostProcess is true then HostNetwork must also be set to true.
                                          type: boolean
                                        runAsUserName:
                                          description: |-
                                            The UserName in Windows to run the entrypoint of the container process.
                                            Defaults to the user specified in image metadata if unspecified.
                                            May also be set in PodSecurityContext. If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                          type: string
                                      type: object
                                  type: object
                                startupProbe:
                                  description: Probes are not allowed for ephemeral
                                    containers.
                                  properties:
                                    exec:
                                      description: Exec specifies a command to execute
                                        in the container.
                                      properties:
                                        command:
                                          description: |-
                                            Command is the command line to execute inside the container, the working directory for the
                                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                            a shell, you need to explicitly call out to that shell.
                                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    failureThreshold:
                                      description: |-
                                        Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                        Defaults to 3. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies a GRPC HealthCheckRequest.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          default: ""
                                          description: |-
                                            Service is the name of the service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                            If this is not specified, the default behavior is defined by gRPC.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies an HTTP GET request
                                        to perform.
                                      properties:
                                        host:
                                          description: |-
                                            Host name to connect to, defaults to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: |-
                                                  The header field name.
                                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Name or number of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: |-
                                            Scheme to use for connecting to the host.
                                            Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: |-
                                        Number of seconds after the container has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: |-
                                        How often (in seconds) to perform the probe.
                                        Default to 10 seconds. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: |-
                                        Minimum consecutive successes for the probe to be considered successful after having failed.
                                        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies a connection
                                        to a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Number or name of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: |-
                                        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                        The grace period is the duration in seconds after the processes running in the pod are sent
                                        a termination signal and the time when the processes are forcibly halted with a kill signal.
                                        Set this value longer than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                        value overrides the value provided by the pod spec.
                                        Value must be non-negative integer. The value zero indicates stop immediately via
                                        the kill signal (no opportunity to shut down).
                                        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: |-
                                        Number of seconds after which the probe times out.
                                        Defaults to 1 second. Minimum value is 1.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                  type: object
                                stdin:
                                  description: |-
                                    Whether this container should allocate a buffer for stdin in the container runtime. If this
                                    is not set, reads from stdin in the container will always result in EOF.
                                    Default is false.
                                  type: boolean
                                stdinOnce:
                                  description: |-
                                    Whether the container runtime should close the stdin channel after it has been opened by
                                    a single attach. When stdin is true the stdin stream will remain open across multiple attach
                                    sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
                                    first client attaches to stdin, and then remains open and accepts data until the client disconnects,
                                    at which time stdin is closed and remains closed until the container is restarted. If this
                                    flag is false, a container processes that reads from stdin will never receive an EOF.
                                    Default is false
                                  type: boolean
                                targetContainerName:
                                  description: |-
                                    If set, the name of the container from PodSpec that this ephemeral container targets.
                                    The ephemeral container will be run in the namespaces (IPC, PID, etc) of this container.
                                    If not set then the ephemeral container uses the namespaces configured in the Pod spec.

                                    The container runtime must implement support for this feature. If the runtime does not
                                    support namespace targeting then the result of setting this field is undefined.
                                  type: string
                                terminationMessagePath:
                                  description: |-
                                    Optional: Path at which the file to which the container's termination message
                                    will be written is mounted into the container's filesystem.
                                    Message written is intended to be brief final status, such as an assertion failure message.
                                    Will be truncated by the node if greater than 4096 bytes. The total message length across
                                    all containers will be limited to 12kb.
                                    Defaults to /dev/termination-log.
                                    Cannot be updated.
                                  type: string
                                terminationMessagePolicy:
                                  description: |-
                                    Indicate how the termination message should be populated. File will use the contents of
                                    terminationMessagePath to populate the container status message on both success and failure.
                                    FallbackToLogsOnError will use the last chunk of container log output if the termination
                                    message file is empty and the container exited with an error.
                                    The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
                                    Defaults to File.
                                    Cannot be updated.
                                  type: string
                                tty:
                                  description: |-
                                    Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
                                    Default is false.
                                  type: boolean
                                volumeDevices:
                                  description: volumeDevices is the list of block
                                    devices to be used by the container.
                                  items:
                                    description: volumeDevice describes a mapping
                                      of a raw block device within a container.
                                    properties:
                                      devicePath:
                                        description: devicePath is the path inside
                                          of the container that the device will be
                                          mapped to.
                                        type: string
                                      name:
                                        description: name must match the name of a
                                          persistentVolumeClaim in the pod
                                        type: string
                                    required:
                                    - devicePath
                                    - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - devicePath
                                  x-kubernetes-list-type: map
                                volumeMounts:
                                  description: |-
                                    Pod volumes to mount into the container's filesystem. Subpath mounts are not allowed for ephemeral containers.
                                    Cannot be updated.
                                  items:
                                    description: VolumeMount describes a mounting
                                      of a Volume within a container.
                                    properties:
                                      mountPath:
                                        description: |-
                                          Path within the container at which the volume should be mounted.  Must
                                          not contain ':'.
                                        type: string
                                      mountPropagation:
                                        description: |-
                                          mountPropagation determines how mounts are propagated from the host
                                          to container and the other way around.
                                          When not set, MountPropagationNone is used.
                                          This field is beta in 1.10.
                                          When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                                          (which defaults to None).
                                        type: string
                                      name:
                                        description: This must match the Name of a
                                          Volume.
                                        type: string
                                      readOnly:
                                        description: |-
                                          Mounted read-only if true, read-write otherwise (false or unspecified).
                                          Defaults to false.
                                        type: boolean
                                      recursiveReadOnly:
                                        description: |-
                                          RecursiveReadOnly specifies whether read-only mounts should be handled
                                          recursively.

                                          If ReadOnly is false, this field has no meaning and must be unspecified.

                                          If ReadOnly is true, and this field is set to Disabled, the mount is not made
                                          recursively read-only.  If this field is set to IfPossible, the mount is made
                                          recursively read-only, if it is supported by the container runtime.  If this
                                          field is set to Enabled, the mount is made recursively read-only if it is
                                          supported by the container runtime, otherwise the pod will not be started and
                                          an error will be generated to indicate the reason.

                                          If this field is set to IfPossible or Enabled, MountPropagation must be set to
                                          None (or be unspecified, which defaults to None).

                                          If this field is not specified, it is treated as an equivalent of Disabled.
                                        type: string
                                      subPath:
                                        description: |-
                                          Path within the volume from which the container's volume should be mounted.
                                          Defaults to "" (volume's root).
                                        type: string
                                      subPathExpr:
                                        description: |-
                                          Expanded path within the volume from which the container's volume should be mounted.
                                          Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                          Defaults to "" (volume's root).
                                          SubPathExpr and SubPath are mutually exclusive.
                                        type: string
                                    required:
                                    - mountPath
                                    - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - mountPath
                                  x-kubernetes-list-type: map
                                workingDir:
                                  description: |-
                                    Container's working directory.
                                    If not specified, the container runtime's default will be used, which
                                    might be configured in the container image.
                                    Cannot be updated.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          hostAliases:
                            description: |-
                              HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts
                              file if specified.
                            items:
                              description: |-
                                HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                                pod's hosts file.
                              properties:
                                hostnames:
                                  description: Hostnames for the above IP address.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                ip:
                                  description: IP address of the host file entry.
                                  type: string
                              required:
                              - ip
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - ip
                            x-kubernetes-list-type: map
                          hostIPC:
                            description: |-
                              Use the host's ipc namespace.
                              Optional: Default to false.
                            type: boolean
                          hostNetwork:
                            description: |-
                              Host networking requested for this pod. Use the host's network namespace.
                              If this option is set, the ports that will be used must be specified.
                              Default to false.
                            type: boolean
                          hostPID:
                            description: |-
                              Use the host's pid namespace.
                              Optional: Default to false.
                            type: boolean
                          hostUsers:
                            description: |-
                              Use the host's user namespace.
                              Optional: Default to true.
                              If set to true or not present, the pod will be run in the host user namespace, useful
                              for when the pod needs a feature only available to the host user namespace, such as
                              loading a kernel module with CAP_SYS_MODULE.
                              When set to false, a new userns is created for the pod. Setting false is useful for
                              mitigating container breakout vulnerabilities even allowing users to run their
                              containers as root without actually having root privileges on the host.
                              This field is alpha-level and is only honored by servers that enable the UserNamespacesSupport feature.
                            type: boolean
                          hostname:
                            description: |-
                              Specifies the hostname of the Pod
                              If not specified, the pod's hostname will be set to a system-defined value.
                            type: string
                          imagePullSecrets:
                            description: |-
                              ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.
                              If specified, these secrets will be passed to individual puller implementations for them to use.
                              More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod
                            items:
                              description: |-
                                LocalObjectReference contains enough information to let you locate the
                                referenced object inside the same namespace.
                              properties:
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          initContainers:
                            description: |-
                              List of initialization containers belonging to the pod.
                              Init containers are executed in order prior to containers being started. If any
                              init container fails, the pod is considered to have failed and is handled according
                              to its restartPolicy. The name for an init container or normal container must be
                              unique among all containers.
                              Init containers may not have Lifecycle actions, Readiness probes, Liveness probes, or Startup probes.
                              The resourceRequirements of an init container are taken into account during scheduling
                              by finding the highest request/limit for each resource type, and then using the max of
                              of that value or the sum of the normal containers. Limits are applied to init containers
                              in a similar fashion.
                              Init containers cannot currently be added or removed.
                              Cannot be updated.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
                            items:
                              description: A single application container that you
                                want to run within a pod.
                              properties:
                                args:
                                  description: |-
                                    Arguments to the entrypoint.
                                    The container image's CMD is used if this is not provided.
                                    Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                    cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                    to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                    produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Cannot be updated.
                                    More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                command:
                                  description: |-
                                    Entrypoint array. Not executed within a shell.
                                    The container image's ENTRYPOINT is used if this is not provided.
                                    Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                    cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                    to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                    produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Cannot be updated.
                                    More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                env:
                                  description: |-
                                    List of environment variables to set in the container.
                                    Cannot be updated.
                                  items:
                                    description: EnvVar represents an environment
                                      variable present in a Container.
                                    properties:
                                      name:
                                        description: Name of the environment variable.
                                          Must be a C_IDENTIFIER.
                                        type: string
                                      value:
                                        description: |-
                                          Variable references $(VAR_NAME) are expanded
                                          using the previously defined environment variables in the container and
                                          any service environment variables. If a variable cannot be resolved,
                                          the reference in the input string will be unchanged. Double $$ are reduced
                                          to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                          "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                          Escaped references will never be expanded, regardless of whether the variable
                                          exists or not.
                                          Defaults to "".
                                        type: string
                                      valueFrom:
                                        description: Source for the environment variable's
                                          value. Cannot be used if value is not empty.
                                        properties:
                                          configMapKeyRef:
                                            description: Selects a key of a ConfigMap.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          fieldRef:
                                            description: |-
                                              Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                              spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                            properties:
                                              apiVersion:
                                                description: Version of the schema
                                                  the FieldPath is written in terms
                                                  of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to
                                                  select in the specified API version.
                                                type: string
                                            required:
                                            - fieldPath
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          resourceFieldRef:
                                            description: |-
                                              Selects a resource of the container: only resources limits and requests
                                              (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                            properties:
                                              containerName:
                                                description: 'Container name: required
                                                  for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                description: Specifies the output
                                                  format of the exposed resources,
                                                  defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to
                                                  select'
                                                type: string
                                            required:
                                            - resource
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          secretKeyRef:
                                            description: Selects a key of a secret
                                              in the pod's namespace
                                            properties:
                                              key:
                                                description: The key of the secret
                                                  to select from.  Must be a valid
                                                  secret key.
                                                type: string
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        type: object
                                    required:
                                    - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - name
                                  x-kubernetes-list-type: map
                                envFrom:
                                  description: |-
                                    List of sources to populate environment variables in the container.
                                    The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                                    will be reported as an event when the container is starting. When a key exists in multiple
                                    sources, the value associated with the last source will take precedence.
                                    Values defined by an Env with a duplicate key will take precedence.
                                    Cannot be updated.
                                  items:
                                    description: EnvFromSource represents the source
                                      of a set of ConfigMaps
                                    properties:
                                      configMapRef:
                                        description: The ConfigMap to select from
                                        properties:
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              must be defined
                                            type: boolean
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      prefix:
                                        description: An optional identifier to prepend
                                          to each key in the ConfigMap. Must be a
                                          C_IDENTIFIER.
                                        type: string
                                      secretRef:
                                        description: The Secret to select from
                                        properties:
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              must be defined
                                            type: boolean
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                image:
                                  description: |-
                                    Container image name.
                                    More info: https://kubernetes.io/docs/concepts/containers/images
                                    This field is optional to allow higher level config management to default or override
                                    container images in workload controllers like Deployments and StatefulSets.
                                  type: string
                                imagePullPolicy:
                                  description: |-
                                    Image pull policy.
                                    One of Always, Never, IfNotPresent.
                                    Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                                    Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                                  type: string
                                lifecycle:
                                  description: |-
                                    Actions that the management system should take in response to container lifecycle events.
                                    Cannot be updated.
                                  properties:
                                    postStart:
                                      description: |-
                                        PostStart is called immediately after a container is created. If the handler fails,
                                        the container is terminated and restarted according to its restart policy.
                                        Other management of the container blocks until the hook completes.
                                        More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                      properties:
                                        exec:
                                          description: Exec specifies a command to
                                            execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        sleep:
                                          description: Sleep represents a duration
                                            that the container should sleep.
                                          properties:
                                            seconds:
                                              description: Seconds is the number of
                                                seconds to sleep.
                                              format: int64
                                              type: integer
                                          required:
                                          - seconds
                                          type: object
                                        tcpSocket:
                                          description: |-
                                            Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                            for backward compatibility. There is no validation of this field and
                                            lifecycle hooks will fail at runtime when it is specified.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                      type: object
                                    preStop:
                                      description: |-
                                        PreStop is called immediately before a container is terminated due to an
                                        API request or management event such as liveness/startup probe failure,
                                        preemption, resource contention, etc. The handler is not called if the
                                        container crashes or exits. The Pod's termination grace period countdown begins before the
                                        PreStop hook is executed. Regardless of the outcome of the handler, the
                                        container will eventually terminate within the Pod's termination grace
                                        period (unless delayed by finalizers). Other management of the container blocks until the hook completes
                                        or until the termination grace period is reached.
                                        More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                      properties:
                                        exec:
                                          description: Exec specifies a command to
                                            execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        sleep:
                                          description: Sleep represents a duration
                                            that the container should sleep.
                                          properties:
                                            seconds:
                                              description: Seconds is the number of
                                                seconds to sleep.
                                              format: int64
                                              type: integer
                                          required:
                                          - seconds
                                          type: object
                                        tcpSocket:
                                          description: |-
                                            Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                            for backward compatibility. There is no validation of this field and
                                            lifecycle hooks will fail at runtime when it is specified.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                      type: object
                                  type: object
                                livenessProbe:
                                  description: |-
                                    Periodic probe of container liveness.
                                    Container will be restarted if the probe fails.
                                    Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                  properties:
                                    exec:
                                      description: Exec specifies a command to execute
                                        in the container.
                                      properties:
                                        command:
                                          description: |-
                                            Command is the command line to execute inside the container, the working directory for the
                                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                            a shell, you need to explicitly call out to that shell.
                                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    failureThreshold:
                                      description: |-
                                        Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                        Defaults to 3. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies a GRPC HealthCheckRequest.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          default: ""
                                          description: |-
                                            Service is the name of the service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                            If this is not specified, the default behavior is defined by gRPC.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies an HTTP GET request
                                        to perform.
                                      properties:
                                        host:
                                          description: |-
                                            Host name to connect to, defaults to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: |-
                                                  The header field name.
                                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Name or number of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: |-
                                            Scheme to use for connecting to the host.
                                            Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: |-
                                        Number of seconds after the container has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: |-
                                        How often (in seconds) to perform the probe.
                                        Default to 10 seconds. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: |-
                                        Minimum consecutive successes for the probe to be considered successful after having failed.
                                        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies a connection
                                        to a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Number or name of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: |-
                                        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                        The grace period is the duration in seconds after the processes running in the pod are sent
                                        a termination signal and the time when the processes are forcibly halted with a kill signal.
                                        Set this value longer than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                        value overrides the value provided by the pod spec.
                                        Value must be non-negative integer. The value zero indicates stop immediately via
                                        the kill signal (no opportunity to shut down).
                                        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: |-
                                        Number of seconds after which the probe times out.
                                        Defaults to 1 second. Minimum value is 1.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                  type: object
                                name:
                                  description: |-
                                    Name of the container specified as a DNS_LABEL.
                                    Each container in a pod must have a unique name (DNS_LABEL).
                                    Cannot be updated.
                                  type: string
                                ports:
                                  description: |-
                                    List of ports to expose from the container. Not specifying a port here
                                    DOES NOT prevent that port from being exposed. Any port which is
                                    listening on the default "0.0.0.0" address inside a container will be
                                    accessible from the network.
                                    Modifying this array with strategic merge patch may corrupt the data.
                                    For more information See https://github.com/kubernetes/kubernetes/issues/108255.
                                    Cannot be updated.
                                  items:
                                    description: ContainerPort represents a network
                                      port in a single container.
                                    properties:
                                      containerPort:
                                        description: |-
                                          Number of port to expose on the pod's IP address.
                                          This must be a valid port number, 0 < x < 65536.
                                        format: int32
                                        type: integer
                                      hostIP:
                                        description: What host IP to bind the external
                                          port to.
                                        type: string
                                      hostPort:
                                        description: |-
                                          Number of port to expose on the host.
                                          If specified, this must be a valid port number, 0 < x < 65536.
                                          If HostNetwork is specified, this must match ContainerPort.
                                          Most containers do not need this.
                                        format: int32
                                        type: integer
                                      name:
                                        description: |-
                                          If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                                          named port in a pod must have a unique name. Name for the port that can be
                                          referred to by services.
                                        type: string
                                      protocol:
                                        default: TCP
                                        description: |-
                                          Protocol for port. Must be UDP, TCP, or SCTP.
                                          Defaults to "TCP".
                                        type: string
                                    required:
                                    - containerPort
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - containerPort
                                  - protocol
                                  x-kubernetes-list-type: map
                                readinessProbe:
                                  description: |-
                                    Periodic probe of container service readiness.
                                    Container will be removed from service endpoints if the probe fails.
                                    Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                  properties:
                                    exec:
                                      description: Exec specifies a command to execute
                                        in the container.
                                      properties:
                                        command:
                                          description: |-
                                            Command is the command line to execute inside the container, the working directory for the
                                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                            a shell, you need to explicitly call out to that shell.
                                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    failureThreshold:
                                      description: |-
                                        Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                        Defaults to 3. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies a GRPC HealthCheckRequest.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          default: ""
                                          description: |-
                                            Service is the name of the service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                            If this is not specified, the default behavior is defined by gRPC.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies an HTTP GET request
                                        to perform.
                                      properties:
                                        host:
                                          description: |-
                                            Host name to connect to, defaults to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: |-
                                                  The header field name.
                                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Name or number of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: |-
                                            Scheme to use for connecting to the host.
                                            Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: |-
                                        Number of seconds after the container has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: |-
                                        How often (in seconds) to perform the probe.
                                        Default to 10 seconds. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: |-
                                        Minimum consecutive successes for the probe to be considered successful after having failed.
                                        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies a connection
                                        to a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Number or name of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: |-
                                        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                        The grace period is the duration in seconds after the processes running in the pod are sent
                                        a termination signal and the time when the processes are forcibly halted with a kill signal.
                                        Set this value longer than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                        value overrides the value provided by the pod spec.
                                        Value must be non-negative integer. The value zero indicates stop immediately via
                                        the kill signal (no opportunity to shut down).
                                        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: |-
                                        Number of seconds after which the probe times out.
                                        Defaults to 1 second. Minimum value is 1.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                  type: object
                                resizePolicy:
                                  description: Resources resize policy for the container.
                                  items:
                                    description: ContainerResizePolicy represents
                                      resource resize policy for the container.
                                    properties:
                                      resourceName:
                                        description: |-
                                          Name of the resource to which this resource resize policy applies.
                                          Supported values: cpu, memory.
                                        type: string
                                      restartPolicy:
                                        description: |-
                                          Restart policy to apply when specified resource is resized.
                                          If not specified, it defaults to NotRequired.
                                        type: string
                                    required:
                                    - resourceName
                                    - restartPolicy
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                resources:
                                  description: |-
                                    Compute Resources required by this container.
                                    Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                  properties:
                                    claims:
                                      description: |-
                                        Claims lists the names of resources, defined in spec.resourceClaims,
                                        that are used by this container.

                                        This is an alpha field and requires enabling the
                                        DynamicResourceAllocation feature gate.

                                        This field is immutable. It can only be set for containers.
                                      items:
                                        description: ResourceClaim references one
                                          entry in PodSpec.ResourceClaims.
                                        properties:
                                          name:
                                            description: |-
                                              Name must match the name of one entry in pod.spec.resourceClaims of
                                              the Pod where this field is used. It makes that resource available
                                              inside a container.
                                            type: string
                                          request:
                                            description: |-
                                              Request is the name chosen for a request in the referenced claim.
                                              If empty, everything from the claim is made available, otherwise
                                              only the result of this request.
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    limits:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: |-
                                        Limits describes the maximum amount of compute resources allowed.
                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                      type: object
                                    requests:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: |-
                                        Requests describes the minimum amount of compute resources required.
                                        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                        otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                      type: object
                                  type: object
                                restartPolicy:
                                  description: |-
                                    RestartPolicy defines the restart behavior of individual containers in a pod.
                                    This field may only be set for init containers, and the only allowed value is "Always".
                                    For non-init containers or when this field is not specified,
                                    the restart behavior is defined by the Pod's restart policy and the container type.
                                    Setting the RestartPolicy as "Always" for the init container will have the following effect:
                                    this init container will be continually restarted on
                                    exit until all regular containers have terminated. Once all regular
                                    containers have completed, all init containers with restartPolicy "Always"
                                    will be shut down. This lifecycle differs from normal init containers and
                                    is often referred to as a "sidecar" container. Although this init
                                    container still starts in the init container sequence, it does not wait
                                    for the container to complete before proceeding to the next init
                                    container. Instead, the next init container starts immediately after this
                                    init container is started, or after any startupProbe has successfully
                                    completed.
                                  type: string
                                securityContext:
                                  description: |-
                                    SecurityContext defines the security options the container should be run with.
                                    If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
                                    More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
                                  properties:
                                    allowPrivilegeEscalation:
                                      description: |-
                                        AllowPrivilegeEscalation controls whether a process can gain more
                                        privileges than its parent process. This bool directly controls if
                                        the no_new_privs flag will be set on the container process.
                                        AllowPrivilegeEscalation is true always when the container is:
                                        1) run as Privileged
                                        2) has CAP_SYS_ADMIN
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: boolean
                                    appArmorProfile:
                                      description: |-
                                        appArmorProfile is the AppArmor options to use by this container. If set, this profile
                                        overrides the pod's appArmorProfile.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        localhostProfile:
                                          description: |-
                                            localhostProfile indicates a profile loaded on the node that should be used.
                                            The profile must be preconfigured on the node to work.
                                            Must match the loaded name of the profile.
                                            Must be set if and only if type is "Localhost".
                                          type: string
                                        type:
                                          description: |-
                                            type indicates which kind of AppArmor profile will be applied.
                                            Valid options are:
                                              Localhost - a profile pre-loaded on the node.
                                              RuntimeDefault - the container runtime's default profile.
                                              Unconfined - no AppArmor enforcement.
                                          type: string
                                      required:
                                      - type
                                      type: object
                                    capabilities:
                                      description: |-
                                        The capabilities to add/drop when running containers.
                                        Defaults to the default set of capabilities granted by the container runtime.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        add:
                                          description: Added capabilities
                                          items:
                                            description: Capability represent POSIX
                                              capabilities type
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        drop:
                                          description: Removed capabilities
                                          items:
                                            description: Capability represent POSIX
                                              capabilities type
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    privileged:
                                      description: |-
                                        Run container in privileged mode.
                                        Processes in privileged containers are essentially equivalent to root on the host.
                                        Defaults to false.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: boolean
                                    procMount:
                                      description: |-
                                        procMount denotes the type of proc mount to use for the containers.
                                        The default value is Default which uses the container runtime defaults for
                                        readonly paths and masked paths.
                                        This requires the ProcMountType feature flag to be enabled.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: string
                                    readOnlyRootFilesystem:
                                      description: |-
                                        Whether this container has a read-only root filesystem.
                                        Default is false.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: boolean
                                    runAsGroup:
                                      description: |-
                                        The GID to run the entrypoint of the container process.
                                        Uses runtime default if unset.
                                        May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      format: int64
                                      type: integer
                                    runAsNonRoot:
                                      description: |-
                                        Indicates that the container must run as a non-root user.
                                        If true, the Kubelet will validate the image at runtime to ensure that it
                                        does not run as UID 0 (root) and fail to start the container if it does.
                                        If unset or false, no such validation will be performed.
                                        May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                      type: boolean
                                    runAsUser:
                                      description: |-
                                        The UID to run the entrypoint of the container process.
                                        Defaults to user specified in image metadata if unspecified.
                                        May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      format: int64
                                      type: integer
                                    seLinuxOptions:
                                      description: |-
                                        The SELinux context to be applied to the container.
                                        If unspecified, the container runtime will allocate a random SELinux context for each
                                        container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        level:
                                          description: Level is SELinux level label
                                            that applies to the container.
                                          type: string
                                        role:
                                          description: Role is a SELinux role label
                                            that applies to the container.
                                          type: string
                                        type:
                                          description: Type is a SELinux type label
                                            that applies to the container.
                                          type: string
                                        user:
                                          description: User is a SELinux user label
                                            that applies to the container.
                                          type: string
                                      type: object
                                    seccompProfile:
                                      description: |-
                                        The seccomp options to use by this container. If seccomp options are
                                        provided at both the pod & container level, the container options
                                        override the pod options.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        localhostProfile:
                                          description: |-
                                            localhostProfile indicates a profile defined in a file on the node should be used.
                                            The profile must be preconfigured on the node to work.
                                            Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                            Must be set if type is "Localhost". Must NOT be set for any other type.
                                          type: string
                                        type:
                                          description: |-
                                            type indicates which kind of seccomp profile will be applied.
                                            Valid options are:

                                            Localhost - a profile defined in a file on the node should be used.
                                            RuntimeDefault - the container runtime default profile should be used.
                                            Unconfined - no profile should be applied.
                                          type: string
                                      required:
                                      - type
                                      type: object
                                    windowsOptions:
                                      description: |-
                                        The Windows specific settings applied to all containers.
                                        If unspecified, the options from the PodSecurityContext will be used.
                                        If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is linux.
                                      properties:
                                        gmsaCredentialSpec:
                                          description: |-
                                            GMSACredentialSpec is where the GMSA admission webhook
                                            (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                            GMSA credential spec named by the GMSACredentialSpecName field.
                                          type: string
                                        gmsaCredentialSpecName:
                                          description: GMSACredentialSpecName is the
                                            name of the GMSA credential spec to use.
                                          type: string
                                        hostProcess:
                                          description: |-
                                            HostProcess determines if a container should be run as a 'Host Process' container.
                                            All of a Pod's containers must have the same effective HostProcess value
                                            (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                            In addition, if HostProcess is true then HostNetwork must also be set to true.
                                          type: boolean
                                        runAsUserName:
                                          description: |-
                                            The UserName in Windows to run the entrypoint of the container process.
                                            Defaults to the user specified in image metadata if unspecified.
                                            May also be set in PodSecurityContext. If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                          type: string
                                      type: object
                                  type: object
                                startupProbe:
                                  description: |-
                                    StartupProbe indicates that the Pod has successfully initialized.
                                    If specified, no other probes are executed until this completes successfully.
                                    If this probe fails, the Pod will be restarted, just as if the livenessProbe failed.
                                    This can be used to provide different probe parameters at the beginning of a Pod's lifecycle,
                                    when it might take a long time to load data or warm a cache, than during steady-state operation.
                                    This cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                  properties:
                                    exec:
                                      description: Exec specifies a command to execute
                                        in the container.
                                      properties:
                                        command:
                                          description: |-
                                            Command is the command line to execute inside the container, the working directory for the
                                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                            a shell, you need to explicitly call out to that shell.
                                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    failureThreshold:
                                      description: |-
                                        Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                        Defaults to 3. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies a GRPC HealthCheckRequest.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          default: ""
                                          description: |-
                                            Service is the name of the service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                            If this is not specified, the default behavior is defined by gRPC.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies an HTTP GET request
                                        to perform.
                                      properties:
                                        host:
                                          description: |-
                                            Host name to connect to, defaults to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: |-
                                                  The header field name.
                                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Name or number of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: |-
                                            Scheme to use for connecting to the host.
                                            Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: |-
                                        Number of seconds after the container has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: |-
                                        How often (in seconds) to perform the probe.
                                        Default to 10 seconds. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: |-
                                        Minimum consecutive successes for the probe to be considered successful after having failed.
                                        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies a connection
                                        to a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Number or name of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: |-
                                        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                        The grace period is the duration in seconds after the processes running in the pod are sent
                                        a termination signal and the time when the processes are forcibly halted with a kill signal.
                                        Set this value longer than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                        value overrides the value provided by the pod spec.
                                        Value must be non-negative integer. The value zero indicates stop immediately via
                                        the kill signal (no opportunity to shut down).
                                        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: |-
                                        Number of seconds after which the probe times out.
                                        Defaults to 1 second. Minimum value is 1.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                  type: object
                                stdin:
                                  description: |-
                                    Whether this container should allocate a buffer for stdin in the container runtime. If this
                                    is not set, reads from stdin in the container will always result in EOF.
                                    Default is false.
                                  type: boolean
                                stdinOnce:
                                  description: |-
                                    Whether the container runtime should close the stdin channel after it has been opened by
                                    a single attach. When stdin is true the stdin stream will remain open across multiple attach
                                    sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
                                    first client attaches to stdin, and then remains open and accepts data until the client disconnects,
                                    at which time stdin is closed and remains closed until the container is restarted. If this
                                    flag is false, a container processes that reads from stdin will never receive an EOF.
                                    Default is false
                                  type: boolean
                                terminationMessagePath:
                                  description: |-
                                    Optional: Path at which the file to which the container's termination message
                                    will be written is mounted into the container's filesystem.
                                    Message written is intended to be brief final status, such as an assertion failure message.
                                    Will be truncated by the node if greater than 4096 bytes. The total message length across
                                    all containers will be limited to 12kb.
                                    Defaults to /dev/termination-log.
                                    Cannot be updated.
                                  type: string
                                terminationMessagePolicy:
                                  description: |-
                                    Indicate how the termination message should be populated. File will use the contents of
                                    terminationMessagePath to populate the container status message on both success and failure.
                                    FallbackToLogsOnError will use the last chunk of container log output if the termination
                                    message file is empty and the container exited with an error.
                                    The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
                                    Defaults to File.
                                    Cannot be updated.
                                  type: string
                                tty:
                                  description: |-
                                    Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
                                    Default is false.
                                  type: boolean
                                volumeDevices:
                                  description: volumeDevices is the list of block
                                    devices to be used by the container.
                                  items:
                                    description: volumeDevice describes a mapping
                                      of a raw block device within a container.
                                    properties:
                                      devicePath:
                                        description: devicePath is the path inside
                                          of the container that the device will be
                                          mapped to.
                                        type: string
                                      name:
                                        description: name must match the name of a
                                          persistentVolumeClaim in the pod
                                        type: string
                                    required:
                                    - devicePath
                                    - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - devicePath
                                  x-kubernetes-list-type: map
                                volumeMounts:
                                  description: |-
                                    Pod volumes to mount into the container's filesystem.
                                    Cannot be updated.
                                  items:
                                    description: VolumeMount describes a mounting
                                      of a Volume within a container.
                                    properties:
                                      mountPath:
                                        description: |-
                                          Path within the container at which the volume should be mounted.  Must
                                          not contain ':'.
                                        type: string
                                      mountPropagation:
                                        description: |-
                                          mountPropagation determines how mounts are propagated from the host
                                          to container and the other way around.
                                          When not set, MountPropagationNone is used.
                                          This field is beta in 1.10.
                                          When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                                          (which defaults to None).
                                        type: string
                                      name:
                                        description: This must match the Name of a
                                          Volume.
                                        type: string
                                      readOnly:
                                        description: |-
                                          Mounted read-only if true, read-write otherwise (false or unspecified).
                                          Defaults to false.
                                        type: boolean
                                      recursiveReadOnly:
                                        description: |-
                                          RecursiveReadOnly specifies whether read-only mounts should be handled
                                          recursively.

                                          If ReadOnly is false, this field has no meaning and must be unspecified.

                                          If ReadOnly is true, and this field is set to Disabled, the mount is not made
                                          recursively read-only.  If this field is set to IfPossible, the mount is made
                                          recursively read-only, if it is supported by the container runtime.  If this
                                          field is set to Enabled, the mount is made recursively read-only if it is
                                          supported by the container runtime, otherwise the pod will not be started and
                                          an error will be generated to indicate the reason.

                                          If this field is set to IfPossible or Enabled, MountPropagation must be set to
                                          None (or be unspecified, which defaults to None).

                                          If this field is not specified, it is treated as an equivalent of Disabled.
                                        type: string
                                      subPath:
                                        description: |-
                                          Path within the volume from which the container's volume should be mounted.
                                          Defaults to "" (volume's root).
                                        type: string
                                      subPathExpr:
                                        description: |-
                                          Expanded path within the volume from which the container's volume should be mounted.
                                          Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                          Defaults to "" (volume's root).
                                          SubPathExpr and SubPath are mutually exclusive.
                                        type: string
                                    required:
                                    - mountPath
                                    - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - mountPath
                                  x-kubernetes-list-type: map
                                workingDir:
                                  description: |-
                                    Container's working directory.
                                    If not specified, the container runtime's default will be used, which
                                    might be configured in the container image.
                                    Cannot be updated.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          nodeName:
                            description: |-
                              NodeName indicates in which node this pod is scheduled.
                              If empty, this pod is a candidate for scheduling by the scheduler defined in schedulerName.
                              Once this field is set, the kubelet for this node becomes responsible for the lifecycle of this pod.
                              This field should not be used to express a desire for the pod to be scheduled on a specific node.
                              https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodename
                            type: string
                          nodeSelector:
                            additionalProperties:
                              type: string
                            description: |-
                              NodeSelector is a selector which must be true for the pod to fit on a node.
                              Selector which must match a node's labels for the pod to be scheduled on that node.
                              More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                            type: object
                            x-kubernetes-map-type: atomic
                          os:
                            description: |-
                              Specifies the OS of the containers in the pod.
                              Some pod and container fields are restricted if this is set.

                              If the OS field is set to linux, the following fields must be unset:
                              -securityContext.windowsOptions

                              If the OS field is set to windows, following fields must be unset:
                              - spec.hostPID
                              - spec.hostIPC
                              - spec.hostUsers
                              - spec.securityContext.appArmorProfile
                              - spec.securityContext.seLinuxOptions
                              - spec.securityContext.seccompProfile
                              - spec.securityContext.fsGroup
                              - spec.securityContext.fsGroupChangePolicy
                              - spec.securityContext.sysctls
                              - spec.shareProcessNamespace
                              - spec.securityContext.runAsUser
                              - spec.securityContext.runAsGroup
                              - spec.securityContext.supplementalGroups
                              - spec.securityContext.supplementalGroupsPolicy
                              - spec.containers[*].securityContext.appArmorProfile
                              - spec.containers[*].securityContext.seLinuxOptions
                              - spec.containers[*].securityContext.seccompProfile
                              - spec.containers[*].securityContext.capabilities
                              - spec.containers[*].securityContext.readOnlyRootFilesystem
                              - spec.containers[*].securityContext.privileged
                              - spec.containers[*].securityContext.allowPrivilegeEscalation
                              - spec.containers[*].securityContext.procMount
                              - spec.containers[*].securityContext.runAsUser
                              - spec.containers[*].securityContext.runAsGroup
                            properties:
                              name:
                                description: |-
                                  Name is the name of the operating system. The currently supported values are linux and windows.
                                  Additional value may be defined in future and can be one of:
                                  https://github.com/opencontainers/runtime-spec/blob/master/config.md#platform-specific-configuration
                                  Clients should expect to handle additional values and treat unrecognized values in this field as os: null
                                type: string
                            required:
                            - name
                            type: object
                          overhead:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Overhead represents the resource overhead associated with running a pod for a given RuntimeClass.
                              This field will be autopopulated at admission time by the RuntimeClass admission controller. If
                              the RuntimeClass admission controller is enabled, overhead must not be set in Pod create requests.
                              The RuntimeClass admission controller will reject Pod create requests which have the overhead already
                              set. If RuntimeClass is configured and selected in the PodSpec, Overhead will be set to the value
                              defined in the corresponding RuntimeClass, otherwise it will remain unset and treated as zero.
                              More info: https://git.k8s.io/enhancements/keps/sig-node/688-pod-overhead/README.md
                            type: object
                          preemptionPolicy:
                            description: |-
                              PreemptionPolicy is the Policy for preempting pods with lower priority.
                              One of Never, PreemptLowerPriority.
                              Defaults to PreemptLowerPriority if unset.
                            type: string
                          priority:
                            description: |-
                              The priority value. Various system components use this field to find the
                              priority of the pod. When Priority Admission Controller is enabled, it
                              prevents users from setting this field. The admission controller populates
                              this field from PriorityClassName.
                              The higher the value, the higher the priority.
                            format: int32
                            type: integer
                          priorityClassName:
                            description: |-
                              If specified, indicates the pod's priority. "system-node-critical" and
                              "system-cluster-critical" are two special keywords which indicate the
                              highest priorities with the former being the highest priority. Any other
                              name must be defined by creating a PriorityClass object with that name.
                              If not specified, the pod priority will be default or zero if there is no
                              default.
                            type: string
                          readinessGates:
                            description: |-
                              If specified, all readiness gates will be evaluated for pod readiness.
                              A pod is ready when all its containers are ready AND
                              all conditions specified in the readiness gates have status equal to "True"
                              More info: https://git.k8s.io/enhancements/keps/sig-network/580-pod-readiness-gates
                            items:
                              description: PodReadinessGate contains the reference
                                to a pod condition
                              properties:
                                conditionType:
                                  description: ConditionType refers to a condition
                                    in the pod's condition list with matching type.
                                  type: string
                              required:
                              - conditionType
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          resourceClaims:
                            description: |-
                              ResourceClaims defines which ResourceClaims must be allocated
                              and reserved before the Pod is allowed to start. The resources
                              will be made available to those containers which consume them
                              by name.

                              This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate.

                              This field is immutable.
                            items:
                              description: |-
                                PodResourceClaim references exactly one ResourceClaim, either directly
                                or by naming a ResourceClaimTemplate which is then turned into a ResourceClaim
                                for the pod.

                                It adds a name to it that uniquely identifies the ResourceClaim inside the Pod.
                                Containers that need access to the ResourceClaim reference it with this name.
                              properties:
                                name:
                                  description: |-
                                    Name uniquely identifies this resource claim inside the pod.
                                    This must be a DNS_LABEL.
                                  type: string
                                resourceClaimName:
                                  description: |-
                                    ResourceClaimName is the name of a ResourceClaim object in the same
                                    namespace as this pod.

                                    Exactly one of ResourceClaimName and ResourceClaimTemplateName must
                                    be set.
                                  type: string
                                resourceClaimTemplateName:
                                  description: |-
                                    ResourceClaimTemplateName is the name of a ResourceClaimTemplate
                                    object in the same namespace as this pod.

                                    The template will be used to create a new ResourceClaim, which will
                                    be bound to this pod. When this pod is deleted, the ResourceClaim
                                    will also be deleted. The pod name and resource name, along with a
                                    generated component, will be used to form a unique name for the
                                    ResourceClaim, which will be recorded in pod.status.resourceClaimStatuses.

                                    This field is immutable and no changes will be made to the
                                    corresponding ResourceClaim by the control plane after creating the
                                    ResourceClaim.

                                    Exactly one of ResourceClaimName and ResourceClaimTemplateName must
                                    be set.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          resources:
                            description: |-
                              Resources is the total amount of CPU and Memory resources required by all
                              containers in the pod. It supports specifying Requests and Limits for
                              "cpu" and "memory" resource names only. ResourceClaims are not supported.

                              This field enables fine-grained control over resource allocation for the
                              entire pod, allowing resource sharing among containers in a pod.

                              This is an alpha field and requires enabling the PodLevelResources feature
                              gate.
                            properties:
                              claims:
                                description: |-
                                  Claims lists the names of resources, defined in spec.resourceClaims,
                                  that are used by this container.

                                  This is an alpha field and requires enabling the
                                  DynamicResourceAllocation feature gate.

                                  This field is immutable. It can only be set for containers.
                                items:
                                  description: ResourceClaim references one entry
                                    in PodSpec.ResourceClaims.
                                  properties:
                                    name:
                                      description: |-
                                        Name must match the name of one entry in pod.spec.resourceClaims of
                                        the Pod where this field is used. It makes that resource available
                                        inside a container.
                                      type: string
                                    request:
                                      description: |-
                                        Request is the name chosen for a request in the referenced claim.
                                        If empty, everything from the claim is made available, otherwise
                                        only the result of this request.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Limits describes the maximum amount of compute resources allowed.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Requests describes the minimum amount of compute resources required.
                                  If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                  otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                            type: object
                          restartPolicy:
                            description: |-
                              Restart policy for all containers within the pod.
                              One of Always, OnFailure, Never. In some contexts, only a subset of those values may be permitted.
                              Default to Always.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy
                            type: string
                          runtimeClassName:
                            description: |-
                              RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used
                              to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run.
                              If unset or empty, the "legacy" RuntimeClass will be used, which is an implicit class with an
                              empty definition that uses the default runtime handler.
                              More info: https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class
                            type: string
                          schedulerName:
                            description: |-
                              If specified, the pod will be dispatched by specified scheduler.
                              If not specified, the pod will be dispatched by default scheduler.
                            type: string
                          schedulingGates:
                            description: |-
                              SchedulingGates is an opaque list of values that if specified will block scheduling the pod.
                              If schedulingGates is not empty, the pod will stay in the SchedulingGated state and the
                              scheduler will not attempt to schedule the pod.

                              SchedulingGates can only be set at pod creation time, and be removed only afterwards.
                            items:
                              description: PodSchedulingGate is associated to a Pod
                                to guard its scheduling.
                              properties:
                                name:
                                  description: |-
                                    Name of the scheduling gate.
                                    Each scheduling gate must have a unique name field.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          securityContext:
                            description: |-
                              SecurityContext holds pod-level security attributes and common container settings.
                              Optional: Defaults to empty.  See type description for default values of each field.
                            properties:
                              appArmorProfile:
                                description: |-
                                  appArmorProfile is the AppArmor options to use by the containers in this pod.
                                  Note that this field cannot be set when spec.os.name is windows.
                                properties:
                                  localhostProfile:
                                    description: |-
                                      localhostProfile indicates a profile loaded on the node that should be used.
                                      The profile must be preconfigured on the node to work.
                                      Must match the loaded name of the profile.
                                      Must be set if and only if type is "Localhost".
                                    type: string
                                  type:
                                    description: |-
                                      type indicates which kind of AppArmor profile will be applied.
                                      Valid options are:
                                        Localhost - a profile pre-loaded on the node.
                                        RuntimeDefault - the container runtime's default profile.
                                        Unconfined - no AppArmor enforcement.
                                    type: string
                                required:
                                - type
                                type: object
                              fsGroup:
                                description: |-
                                  A special supplemental group that applies to all containers in a pod.
                                  Some volume types allow the Kubelet to change the ownership of that volume
                                  to be owned by the pod:

                                  1. The owning GID will be the FSGroup
                                  2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                                  3. The permission bits are OR'd with rw-rw----

                                  If unset, the Kubelet will not modify the ownership and permissions of any volume.
                                  Note that this field cannot be set when spec.os.name is windows.
                                format: int64
                                type: integer
                              fsGroupChangePolicy:
                                description: |-
                                  fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                                  before being exposed inside Pod. This field will only apply to
                                  volume types which support fsGroup based ownership(and permissions).
                                  It will have no effect on ephemeral volume types such as: secret, configmaps
                                  and emptydir.
                                  Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: string
                              runAsGroup:
                                description: |-
                                  The GID to run the entrypoint of the container process.
                                  Uses runtime default if unset.
                                  May also be set in SecurityContext.  If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext takes precedence
                                  for that container.
                                  Note that this field cannot be set when spec.os.name is windows.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: |-
                                  Indicates that the container must run as a non-root user.
                                  If true, the Kubelet will validate the image at runtime to ensure that it
                                  does not run as UID 0 (root) and fail to start the container if it does.
                                  If unset or false, no such validation will be performed.
                                  May also be set in SecurityContext.  If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: |-
                                  The UID to run the entrypoint of the container process.
                                  Defaults to user specified in image metadata if unspecified.
                                  May also be set in SecurityContext.  If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext takes precedence
                                  for that container.
                                  Note that this field cannot be set when spec.os.name is windows.
                                format: int64
                                type: integer
                              seLinuxChangePolicy:
                                description: |-
                                  seLinuxChangePolicy defines how the container's SELinux label is applied to all volumes used by the Pod.
                                  It has no effect on nodes that do not support SELinux or to volumes does not support SELinux.
                                  Valid values are "MountOption" and "Recursive".

                                  "Recursive" means relabeling of all files on all Pod volumes by the container runtime.
                                  This may be slow for large volumes, but allows mixing privileged and unprivileged Pods sharing the same volume on the same node.

                                  "MountOption" mounts all eligible Pod volumes with `-o context` mount option.
                                  This requires all Pods that share the same volume to use the same SELinux label.
                                  It is not possible to share the same volume among privileged and unprivileged Pods.
                                  Eligible volumes are in-tree FibreChannel and iSCSI volumes, and all CSI volumes
                                  whose CSI driver announces SELinux support by setting spec.seLinuxMount: true in their
                                  CSIDriver instance. Other volumes are always re-labelled recursively.
                                  "MountOption" value is allowed only when SELinuxMount feature gate is enabled.

                                  If not specified and SELinuxMount feature gate is enabled, "MountOption" is used.
                                  If not specified and SELinuxMount feature gate is disabled, "MountOption" is used for ReadWriteOncePod volumes
                                  and "Recursive" for all other volumes.

                                  This field affects only Pods that have SELinux label set, either in PodSecurityContext or in SecurityContext of all containers.

                                  All Pods that use the same volume should use the same seLinuxChangePolicy, otherwise some pods can get stuck in ContainerCreating state.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: string
                              seLinuxOptions:
                                description: |-
                                  The SELinux context to be applied to all containers.
                                  If unspecified, the container runtime will allocate a random SELinux context for each
                                  container.  May also be set in SecurityContext.  If set in
                                  both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence for that container.
                                  Note that this field cannot be set when spec.os.name is windows.
                                properties:
                                  level:
                                    description: Level is SELinux level label that
                                      applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that
                                      applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that
                                      applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that
                                      applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: |-
                                  The seccomp options to use by the containers in this pod.
                                  Note that this field cannot be set when spec.os.name is windows.
                                properties:
                                  localhostProfile:
                                    description: |-
                                      localhostProfile indicates a profile defined in a file on the node should be used.
                                      The profile must be preconfigured on the node to work.
                                      Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                      Must be set if type is "Localhost". Must NOT be set for any other type.
                                    type: string
                                  type:
                                    description: |-
                                      type indicates which kind of seccomp profile will be applied.
                                      Valid options are:

                                      Localhost - a profile defined in a file on the node should be used.
                                      RuntimeDefault - the container runtime default profile should be used.
                                      Unconfined - no profile should be applied.
                                    type: string
                                required:
                                - type
                                type: object
                              supplementalGroups:
                                description: |-
                                  A list of groups applied to the first process run in each container, in
                                  addition to the container's primary GID and fsGroup (if specified).  If
                                  the SupplementalGroupsPolicy feature is enabled, the
                                  supplementalGroupsPolicy field determines whether these are in addition
                                  to or instead of any group memberships defined in the container image.
                                  If unspecified, no additional groups are added, though group memberships
                                  defined in the container image may still be used, depending on the
                                  supplementalGroupsPolicy field.
                                  Note that this field cannot be set when spec.os.name is windows.
                                items:
                                  format: int64
                                  type: integer
                                type: array
                                x-kubernetes-list-type: atomic
                              supplementalGroupsPolicy:
                                description: |-
                                  Defines how supplemental groups of the first container processes are calculated.
                                  Valid values are "Merge" and "Strict". If not specified, "Merge" is used.
                                  (Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled
                                  and the container runtime must implement support for this feature.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: string
                              sysctls:
                                description: |-
                                  Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                                  sysctls (by the container runtime) might fail to launch.
                                  Note that this field cannot be set when spec.os.name is windows.
                                items:
                                  description: Sysctl defines a kernel parameter to
                                    be set
                                  properties:
                                    name:
                                      description: Name of a property to set
                                      type: string
                                    value:
                                      description: Value of a property to set
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              windowsOptions:
                                description: |-
                                  The Windows specific settings applied to all containers.
                                  If unspecified, the options within a container's SecurityContext will be used.
                                  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                  Note that this field cannot be set when spec.os.name is linux.
                                properties:
                                  gmsaCredentialSpec:
                                    description: |-
                                      GMSACredentialSpec is where the GMSA admission webhook
                                      (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                      GMSA credential spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name
                                      of the GMSA credential spec to use.
                                    type: string
                                  hostProcess:
                                    description: |-
                                      HostProcess determines if a container should be run as a 'Host Process' container.
                                      All of a Pod's containers must have the same effective HostProcess value
                                      (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                      In addition, if HostProcess is true then HostNetwork must also be set to true.
                                    type: boolean
                                  runAsUserName:
                                    description: |-
                                      The UserName in Windows to run the entrypoint of the container process.
                                      Defaults to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set in both SecurityContext and
                                      PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    type: string
                                type: object
                            type: object
                          serviceAccount:
                            description: |-
                              DeprecatedServiceAccount is a deprecated alias for ServiceAccountName.
                              Deprecated: Use serviceAccountName instead.
                            type: string
                          serviceAccountName:
                            description: |-
                              ServiceAccountName is the name of the ServiceAccount to use to run this pod.
                              More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
                            type: string
                          setHostnameAsFQDN:
                            description: |-
                              If true the pod's hostname will be configured as the pod's FQDN, rather than the leaf name (the default).
                              In Linux containers, this means setting the FQDN in the hostname field of the kernel (the nodename field of struct utsname).
                              In Windows containers, this means setting the registry value of hostname for the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters to FQDN.
                              If a pod does not have FQDN, this has no effect.
                              Default to false.
                            type: boolean
                          shareProcessNamespace:
                            description: |-
                              Share a single process namespace between all of the containers in a pod.
                              When this is set containers will be able to view and signal processes from other containers
                              in the same pod, and the first process in each container will not be assigned PID 1.
                              HostPID and ShareProcessNamespace cannot both be set.
                              Optional: Default to false.
                            type: boolean
                          subdomain:
                            description: |-
                              If specified, the fully qualified Pod hostname will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>".
                              If not specified, the pod will not have a domainname at all.
                            type: string
                          terminationGracePeriodSeconds:
                            description: |-
                              Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request.
                              Value must be non-negative integer. The value zero indicates stop immediately via
                              the kill signal (no opportunity to shut down).
                              If this value is nil, the default grace period will be used instead.
                              The grace period is the duration in seconds after the processes running in the pod are sent
                              a termination signal and the time when the processes are forcibly halted with a kill signal.
                              Set this value longer than the expected cleanup time for your process.
                              Defaults to 30 seconds.
                            format: int64
                            type: integer
                          tolerations:
                            description: If specified, the pod's tolerations.
                            items:
                              description: |-
                                The pod this Toleration is attached to tolerates any taint that matches
                                the triple <key,value,effect> using the matching operator <operator>.
                              properties:
                                effect:
                                  description: |-
                                    Effect indicates the taint effect to match. Empty means match all taint effects.
                                    When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                  type: string
                                key:
                                  description: |-
                                    Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                    If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                  type: string
                                operator:
                                  description: |-
                                    Operator represents a key's relationship to the value.
                                    Valid operators are Exists and Equal. Defaults to Equal.
                                    Exists is equivalent to wildcard for value, so that a pod can
                                    tolerate all taints of a particular category.
                                  type: string
                                tolerationSeconds:
                                  description: |-
                                    TolerationSeconds represents the period of time the toleration (which must be
                                    of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                    it is not set, which means tolerate the taint forever (do not evict). Zero and
                                    negative values will be treated as 0 (evict immediately) by the system.
                                  format: int64
                                  type: integer
                                value:
                                  description: |-
                                    Value is the taint value the toleration matches to.
                                    If the operator is Exists, the value should be empty, otherwise just a regular string.
                                  type: string
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          topologySpreadConstraints:
                            description: |-
                              TopologySpreadConstraints describes how a group of pods ought to spread across topology
                              domains. Scheduler will schedule pods in a way which abides by the constraints.
                              All topologySpreadConstraints are ANDed.
                            items:
                              description: TopologySpreadConstraint specifies how
                                to spread matching pods among the given topology.
                              properties:
                                labelSelector:
                                  description: |-
                                    LabelSelector is used to find matching pods.
                                    Pods that match this label selector are counted to determine the number of pods
                                    in their corresponding topology domain.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                matchLabelKeys:
                                  description: |-
                                    MatchLabelKeys is a set of pod label keys to select the pods over which
                                    spreading will be calculated. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are ANDed with labelSelector
                                    to select the group of existing pods over which spreading will be calculated
                                    for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                    MatchLabelKeys cannot be set when LabelSelector isn't set.
                                    Keys that don't exist in the incoming pod labels will
                                    be ignored. A null or empty list means only match against labelSelector.

                                    This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                maxSkew:
                                  description: |-
                                    MaxSkew describes the degree to which pods may be unevenly distributed.
                                    When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference
                                    between the number of matching pods in the target topology and the global minimum.
                                    The global minimum is the minimum number of matching pods in an eligible domain
                                    or zero if the number of eligible domains is less than MinDomains.
                                    For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                                    labelSelector spread as 2/2/1:
                                    In this case, the global minimum is 1.
                                    | zone1 | zone2 | zone3 |
                                    |  P P  |  P P  |   P   |
                                    - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;
                                    scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)
                                    violate MaxSkew(1).
                                    - if MaxSkew is 2, incoming pod can be scheduled onto any zone.
                                    When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence
                                    to topologies that satisfy it.
                                    It's a required field. Default value is 1 and 0 is not allowed.
                                  format: int32
                                  type: integer
                                minDomains:
                                  description: |-
                                    MinDomains indicates a minimum number of eligible domains.
                                    When the number of eligible domains with matching topology keys is less than minDomains,
                                    Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed.
                                    And when the number of eligible domains with matching topology keys equals or greater than minDomains,
                                    this value has no effect on scheduling.
                                    As a result, when the number of eligible domains is less than minDomains,
                                    scheduler won't schedule more than maxSkew Pods to those domains.
                                    If value is nil, the constraint behaves as if MinDomains is equal to 1.
                                    Valid values are integers greater than 0.
                                    When value is not nil, WhenUnsatisfiable must be DoNotSchedule.

                                    For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same
                                    labelSelector spread as 2/2/2:
                                    | zone1 | zone2 | zone3 |
                                    |  P P  |  P P  |  P P  |
                                    The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0.
                                    In this situation, new pod with the same labelSelector cannot be scheduled,
                                    because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,
                                    it will violate MaxSkew.
                                  format: int32
                                  type: integer
                                nodeAffinityPolicy:
                                  description: |-
                                    NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector
                                    when calculating pod topology spread skew. Options are:
                                    - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.
                                    - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.

                                    If this value is nil, the behavior is equivalent to the Honor policy.
                                    This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                                  type: string
                                nodeTaintsPolicy:
                                  description: |-
                                    NodeTaintsPolicy indicates how we will treat node taints when calculating
                                    pod topology spread skew. Options are:
                                    - Honor: nodes without taints, along with tainted nodes for which the incoming pod
                                    has a toleration, are included.
                                    - Ignore: node taints are ignored. All nodes are included.

                                    If this value is nil, the behavior is equivalent to the Ignore policy.
                                    This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                                  type: string
                                topologyKey:
                                  description: |-
                                    TopologyKey is the key of node labels. Nodes that have a label with this key
                                    and identical values are considered to be in the same topology.
                                    We consider each <key, value> as a "bucket", and try to put balanced number
                                    of pods into each bucket.
                                    We define a domain as a particular instance of a topology.
                                    Also, we define an eligible domain as a domain whose nodes meet the requirements of
                                    nodeAffinityPolicy and nodeTaintsPolicy.
                                    e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology.
                                    And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology.
                                    It's a required field.
                                  type: string
                                whenUnsatisfiable:
                                  description: |-
                                    WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy
                                    the spread constraint.
                                    - DoNotSchedule (default) tells the scheduler not to schedule it.
                                    - ScheduleAnyway tells the scheduler to schedule the pod in any location,
                                      but giving higher precedence to topologies that would help reduce the
                                      skew.
                                    A constraint is considered "Unsatisfiable" for an incoming pod
                                    if and only if every possible node assignment for that pod would violate
                                    "MaxSkew" on some topology.
                                    For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                                    labelSelector spread as 3/1/1:
                                    | zone1 | zone2 | zone3 |
                                    | P P P |   P   |   P   |
                                    If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled
                                    to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies
                                    MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler
                                    won't make it *more* imbalanced.
                                    It's a required field.
                                  type: string
                              required:
                              - maxSkew
                              - topologyKey
                              - whenUnsatisfiable
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - topologyKey
                            - whenUnsatisfiable
                            x-kubernetes-list-type: map
                          volumes:
                            description: |-
                              List of volumes that can be mounted by containers belonging to the pod.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes
                            items:
                              description: Volume represents a named volume in a pod
                                that may be accessed by any container in the pod.
                              properties:
                                awsElasticBlockStore:
                                  description: |-
                                    awsElasticBlockStore represents an AWS Disk resource that is attached to a
                                    kubelet's host machine and then exposed to the pod.
                                    Deprecated: AWSElasticBlockStore is deprecated. All operations for the in-tree
                                    awsElasticBlockStore type are redirected to the ebs.csi.aws.com CSI driver.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                  properties:
                                    fsType:
                                      description: |-
                                        fsType is the filesystem type of the volume that you want to mount.
                                        Tip: Ensure that the filesystem type is supported by the host operating system.
                                        Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                      type: string
                                    partition:
                                      description: |-
                                        partition is the partition in the volume that you want to mount.
                                        If omitted, the default is to mount by volume name.
                                        Examples: For volume /dev/sda1, you specify the partition as "1".
                                        Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                                      format: int32
                                      type: integer
                                    readOnly:
                                      description: |-
                                        readOnly value true will force the readOnly setting in VolumeMounts.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                      type: boolean
                                    volumeID:
                                      description: |-
                                        volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                      type: string
                                  required:
                                  - volumeID
                                  type: object
                                azureDisk:
                                  description: |-
                                    azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
                                    Deprecated: AzureDisk is deprecated. All operations for the in-tree azureDisk type
                                    are redirected to the disk.csi.azure.com CSI driver.
                                  properties:
                                    cachingMode:
                                      description: 'cachingMode is the Host Caching
                                        mode: None, Read Only, Read Write.'
                                      type: string
                                    diskName:
                                      description: diskName is the Name of the data
                                        disk in the blob storage
                                      type: string
                                    diskURI:
                                      description: diskURI is the URI of data disk
                                        in the blob storage
                                      type: string
                                    fsType:
                                      default: ext4
                                      description: |-
                                        fsType is Filesystem type to mount.
                                        Must be a filesystem type supported by the host operating system.
                                        Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                      type: string
                                    kind:
                                      description: 'kind expected values are Shared:
                                        multiple blob disks per storage account  Dedicated:
                                        single blob disk per storage account  Managed:
                                        azure managed data disk (only in managed availability
                                        set). defaults to shared'
                                      type: string
                                    readOnly:
                                      default: false
                                      description: |-
                                        readOnly Defaults to false (read/write). ReadOnly here will force
                                        the ReadOnly setting in VolumeMounts.
                                      type: boolean
                                  required:
                                  - diskName
                                  - diskURI
                                  type: object
                                azureFile:
                                  description: |-
                                    azureFile represents an Azure File Service mount on the host and bind mount to the pod.
                                    Deprecated: AzureFile is deprecated. All operations for the in-tree azureFile type
                                    are redirected to the file.csi.azure.com CSI driver.
                                  properties:
                                    readOnly:
                                      description: |-
                                        readOnly defaults to false (read/write). ReadOnly here will force
                                        the ReadOnly setting in VolumeMounts.
                                      type: boolean
                                    secretName:
                                      description: secretName is the  name of secret
                                        that contains Azure Storage Account Name and
                                        Key
                                      type: string
                                    shareName:
                                      description: shareName is the azure share Name
                                      type: string
                                  required:
                                  - secretName
                                  - shareName
                                  type: object
                                cephfs:
                                  description: |-
                                    cephFS represents a Ceph FS mount on the host that shares a pod's lifetime.
                                    Deprecated: CephFS is deprecated and the in-tree cephfs type is no longer supported.
                                  properties:
                                    monitors:
                                      description: |-
                                        monitors is Required: Monitors is a collection of Ceph monitors
                                        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    path:
                                      description: 'path is Optional: Used as the
                                        mounted root, rather than the full Ceph tree,
                                        default is /'
                                      type: string
                                    readOnly:
                                      description: |-
                                        readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
                                        the ReadOnly setting in VolumeMounts.
                                        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                      type: boolean
                                    secretFile:
                                      description: |-
                                        secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
                                        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                      type: string
                                    secretRef:
                                      description: |-
                                        secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.
                                        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                      properties:
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    user:
                                      description: |-
                                        user is optional: User is the rados user name, default is admin
                                        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                      type: string
                                  required:
                                  - monitors
                                  type: object
                                cinder:
                                  description: |-
                                    cinder represents a cinder volume attached and mounted on kubelets host machine.
                                    Deprecated: Cinder is deprecated. All operations for the in-tree cinder type
                                    are redirected to the cinder.csi.openstack.org CSI driver.
                                    More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                  properties:
                                    fsType:
                                      description: |-
                                        fsType is the filesystem type to mount.
                                        Must be a filesystem type supported by the host operating system.
                                        Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                        More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                      type: string
                                    readOnly:
                                      description: |-
                                        readOnly defaults to false (read/write). ReadOnly here will force
                                        the ReadOnly setting in VolumeMounts.
                                        More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                      type: boolean
                                    secretRef:
                                      description: |-
                                        secretRef is optional: points to a secret object containing parameters used to connect
                                        to OpenStack.
                                      properties:
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    volumeID:
                                      description: |-
                                        volumeID used to identify the volume in cinder.
                                        More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                      type: string
                                  required:
                                  - volumeID
                                  type: object
                                configMap:
                                  description: configMap represents a configMap that
                                    should populate this volume
                                  properties:
                                    defaultMode:
                                      description: |-
                                        defaultMode is optional: mode bits used to set permissions on created files by default.
                                        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                        Defaults to 0644.
                                        Directories within the path are not affected by this setting.
                                        This might be in conflict with other options that affect the file
                                        mode, like fsGroup, and the result can be other mode bits set.
                                      format: int32
                                      type: integer
                                    items:
                                      description: |-
                                        items if unspecified, each key-value pair in the Data field of the referenced
                                        ConfigMap will be projected into the volume as a file whose name is the
                                        key and content is the value. If specified, the listed keys will be
                                        projected into the specified paths, and unlisted keys will not be
                                        present. If a key is specified which is not present in the ConfigMap,
                                        the volume setup will error unless it is marked optional. Paths must be
                                        relative and may not contain the '..' path or start with '..'.
                                      items:
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: |-
                                              mode is Optional: mode bits used to set permissions on this file.
                                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                              If not specified, the volume defaultMode will be used.
                                              This might be in conflict with other options that affect the file
                                              mode, like fsGroup, and the result can be other mode bits set.
                                            format: int32
                                            type: integer
                                          path:
                                            description: |-
                                              path is the relative path of the file to map the key to.
                                              May not be an absolute path.
                                              May not contain the path element '..'.
                                              May not start with the string '..'.
                                            type: string
                                        required:
                                        - key
                                        - path
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: optional specify whether the ConfigMap
                                        or its keys must be defined
                                      type: boolean
                                  type: object
                                  x-kubernetes-map-type: atomic
                                csi:
                                  description: csi (Container Storage Interface) represents
                                    ephemeral storage that is handled by certain external
                                    CSI drivers.
                                  properties:
                                    driver:
                                      description: |-
                                        driver is the name of the CSI driver that handles this volume.
                                        Consult with your admin for the correct name as registered in the cluster.
                                      type: string
                                    fsType:
                                      description: |-
                                        fsType to mount. Ex. "ext4", "xfs", "ntfs".
                                        If not provided, the empty value is passed to the associated CSI driver
                                        which will determine the default filesystem to apply.
                                      type: string
                                    nodePublishSecretRef:
                                      description: |-
                                        nodePublishSecretRef is a reference to the secret object containing
                                        sensitive information to pass to the CSI driver to complete the CSI
                                        NodePublishVolume and NodeUnpublishVolume calls.
                                        This field is optional, and  may be empty if no secret is required. If the
                                        secret object contains more than one secret, all secret references are passed.
                                      properties:
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    readOnly:
                                      description: |-
                                        readOnly specifies a read-only configuration for the volume.
                                        Defaults to false (read/write).
                                      type: boolean
                                    volumeAttributes:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        volumeAttributes stores driver-specific properties that are passed to the CSI
                                        driver. Consult your driver's documentation for supported values.
                                      type: object
                                  required:
                                  - driver
                                  type: object
                                downwardAPI:
                                  description: downwardAPI represents downward API
                                    about the pod that should populate this volume
                                  properties:
                                    defaultMode:
                                      description: |-
                                        Optional: mode bits to use on created files by default. Must be a
                                        Optional: mode bits used to set permissions on created files by default.
                                        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                        Defaults to 0644.
                                        Directories within the path are not affected by this setting.
                                        This might be in conflict with other options that affect the file
                                        mode, like fsGroup, and the result can be other mode bits set.
                                      format: int32
                                      type: integer
                                    items:
                                      description: Items is a list of downward API
                                        volume file
                                      items:
                                        description: DownwardAPIVolumeFile represents
                                          information to create the file containing
                                          the pod field
                                        properties:
                                          fieldRef:
                                            description: 'Required: Selects a field
                                              of the pod: only annotations, labels,
                                              name, namespace and uid are supported.'
                                            properties:
                                              apiVersion:
                                                description: Version of the schema
                                                  the FieldPath is written in terms
                                                  of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to
                                                  select in the specified API version.
                                                type: string
                                            required:
                                            - fieldPath
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          mode:
                                            description: |-
                                              Optional: mode bits used to set permissions on this file, must be an octal value
                                              between 0000 and 0777 or a decimal value between 0 and 511.
                                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                              If not specified, the volume defaultMode will be used.
                                              This might be in conflict with other options that affect the file
                                              mode, like fsGroup, and the result can be other mode bits set.
                                            format: int32
                                            type: integer
                                          path:
                                            description: 'Required: Path is  the relative
                                              path name of the file to be created.
                                              Must not be absolute or contain the
                                              ''..'' path. Must be utf-8 encoded.
                                              The first item of the relative path
                                              must not start with ''..'''
                                            type: string
                                          resourceFieldRef:
                                            description: |-
                                              Selects a resource of the container: only resources limits and requests
                                              (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                            properties:
                                              containerName:
                                                description: 'Container name: required
                                                  for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                description: Specifies the output
                                                  format of the exposed resources,
                                                  defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to
                                                  select'
                                                type: string
                                            required:
                                            - resource
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        required:
                                        - path
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  type: object
                                emptyDir:
                                  description: |-
                                    emptyDir represents a temporary directory that shares a pod's lifetime.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                                  properties:
                                    medium:
                                      description: |-
                                        medium represents what type of storage medium should back this directory.
                                        The default is "" which means to use the node's default medium.
                                        Must be an empty string (default) or Memory.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                                      type: string
                                    sizeLimit:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: |-
                                        sizeLimit is the total amount of local storage required for this EmptyDir volume.
                                        The size limit is also applicable for memory medium.
                                        The maximum usage on memory medium EmptyDir would be the minimum value between
                                        the SizeLimit specified here and the sum of memory limits of all containers in a pod.
                                        The default is nil which means that the limit is undefined.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                  type: object
                                ephemeral:
                                  description: |-
                                    ephemeral represents a volume that is handled by a cluster storage driver.
                                    The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
                                    and deleted when the pod is removed.

                                    Use this if:
                                    a) the volume is only needed while the pod runs,
                                    b) features of normal volumes like restoring from snapshot or capacity
                                       tracking are needed,
                                    c) the storage driver is specified through a storage class, and
                                    d) the storage driver supports dynamic volume provisioning through
                                       a PersistentVolumeClaim (see EphemeralVolumeSource for more
                                       information on the connection between this volume type
                                       and PersistentVolumeClaim).

                                    Use PersistentVolumeClaim or one of the vendor-specific
                                    APIs for volumes that persist for longer than the lifecycle
                                    of an individual pod.

                                    Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
                                    be used that way - see the documentation of the driver for
                                    more information.

                                    A pod can use both types of ephemeral volumes and
                                    persistent volumes at the same time.
                                  properties:
                                    volumeClaimTemplate:
                                      description: |-
                                        Will be used to create a stand-alone PVC to provision the volume.
                                        The pod in which this EphemeralVolumeSource is embedded will be the
                                        owner of the PVC, i.e. the PVC will be deleted together with the
                                        pod.  The name of the PVC will be `<pod name>-<volume name>` where
                                        `<volume name>` is the name from the `PodSpec.Volumes` array
                                        entry. Pod validation will reject the pod if the concatenated name
                                        is not valid for a PVC (for example, too long).

                                        An existing PVC with that name that is not owned by the pod
                                        will *not* be used for the pod to avoid using an unrelated
                                        volume by mistake. Starting the pod is then blocked until
                                        the unrelated PVC is removed. If such a pre-created PVC is
                                        meant to be used by the pod, the PVC has to updated with an
                                        owner reference to the pod once the pod exists. Normally
                                        this should not be necessary, but it may be useful when
                                        manually reconstructing a broken cluster.

                                        This field is read-only and no changes will be made by Kubernetes
                                        to the PVC after it has been created.

                                        Required, must not be nil.
                                      properties:
                                        metadata:
                                          description: |-
                                            May contain labels and annotations that will be copied into the PVC
                                            when creating it. No other fields are allowed and will be rejected during
                                            validation.
                                          properties:
                                            annotations:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            finalizers:
                                              items:
                                                type: string
                                              type: array
                                            labels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                          type: object
                                        spec:
                                          description: |-
                                            The specification for the PersistentVolumeClaim. The entire content is
                                            copied unchanged into the PVC that gets created from this
                                            template. The same fields as in a PersistentVolumeClaim
                                            are also valid here.
                                          properties:
                                            accessModes:
                                              description: |-
                                                accessModes contains the desired access modes the volume should have.
                                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            dataSource:
                                              description: |-
                                                dataSource field can be used to specify either:
                                                * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                                * An existing PVC (PersistentVolumeClaim)
                                                If the provisioner or an external controller can support the specified data source,
                                                it will create a new volume based on the contents of the specified data source.
                                                When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
                                                and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
                                                If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                                              properties:
                                                apiGroup:
                                                  description: |-
                                                    APIGroup is the group for the resource being referenced.
                                                    If APIGroup is not specified, the specified Kind must be in the core API group.
                                                    For any other third-party types, APIGroup is required.
                                                  type: string
                                                kind:
                                                  description: Kind is the type of
                                                    resource being referenced
                                                  type: string
                                                name:
                                                  description: Name is the name of
                                                    resource being referenced
                                                  type: string
                                              required:
                                              - kind
                                              - name
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            dataSourceRef:
                                              description: |-
                                                dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
                                                volume is desired. This may be any object from a non-empty API group (non
                                                core object) or a PersistentVolumeClaim object.
                                                When this field is specified, volume binding will only succeed if the type of
                                                the specified object matches some installed volume populator or dynamic
                                                provisioner.
                                                This field will replace the functionality of the dataSource field and as such
                                                if both fields are non-empty, they must have the same value. For backwards
                                                compatibility, when namespace isn't specified in dataSourceRef,
                                                both fields (dataSource and dataSourceRef) will be set to the same
                                                value automatically if one of them is empty and the other is non-empty.
                                                When namespace is specified in dataSourceRef,
                                                dataSource isn't set to the same value and must be empty.
                                                There are three important differences between dataSource and dataSourceRef:
                                                * While dataSource only allows two specific types of objects, dataSourceRef
                                                  allows any non-core object, as well as PersistentVolumeClaim objects.
                                                * While dataSource ignores disallowed values (dropping them), dataSourceRef
                                                  preserves all values, and generates an error if a disallowed value is
                                                  specified.
                                                * While dataSource only allows local objects, dataSourceRef allows objects
                                                  in any namespaces.
                                                (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                                                (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                              properties:
                                                apiGroup:
                                                  description: |-
                                                    APIGroup is the group for the resource being referenced.
                                                    If APIGroup is not specified, the specified Kind must be in the core API group.
                                                    For any other third-party types, APIGroup is required.
                                                  type: string
                                                kind:
                                                  description: Kind is the type of
                                                    resource being referenced
                                                  type: string
                                                name:
                                                  description: Name is the name of
                                                    resource being referenced
                                                  type: string
                                                namespace:
                                                  description: |-
                                                    Namespace is the namespace of resource being referenced
                                                    Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                                                    (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                                  type: string
                                              required:
                                              - kind
                                              - name
                                              type: object
                                            resources:
                                              description: |-
                                                resources represents the minimum resources the volume should have.
                                                If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
                                                that are lower than previous value but must still be higher than capacity recorded in the
                                                status field of the claim.
                                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                                              properties:
                                                limits:
                                                  additionalProperties:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  description: |-
                                                    Limits describes the maximum amount of compute resources allowed.
                                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                                  type: object
                                                requests:
                                                  additionalProperties:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  description: |-
                                                    Requests describes the minimum amount of compute resources required.
                                                    If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                                    otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                                  type: object
                                              type: object
                                            selector:
                                              description: selector is a label query
                                                over volumes to consider for binding.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            storageClassName:
                                              description: |-
                                                storageClassName is the name of the StorageClass required by the claim.
                                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                                              type: string
                                            volumeAttributesClassName:
                                              description: |-
                                                volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
                                                If specified, the CSI driver will create or update the volume with the attributes defined
                                                in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
                                                it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
                                                will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
                                                If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
                                                will be set by the persistentvolume controller if it exists.
                                                If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
                                                set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
                                                exists.
                                                More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
                                                (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).
                                              type: string
                                            volumeMode:
                                              description: |-
                                                volumeMode defines what type of volume is required by the claim.
                                                Value of Filesystem is implied when not included in claim spec.
                                              type: string
                                            volumeName:
                                              description: volumeName is the binding
                                                reference to the PersistentVolume
                                                backing this claim.
                                              type: string
                                          type: object
                                      required:
                                      - spec
                                      type: object
                                  type: object
                                fc:
                                  description: fc represents a Fibre Channel resource
                                    that is attached to a kubelet's host machine and
                                    then exposed to the pod.
                                  properties:
                                    fsType:
                                      description: |-
                                        fsType is the filesystem type to mount.
                                        Must be a filesystem type supported by the host operating system.
                                        Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                      type: string
                                    lun:
                                      description: 'lun is Optional: FC target lun
                                        number'
                                      format: int32
                                      type: integer
                                    readOnly:
                                      description: |-
                                        readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
                                        the ReadOnly setting in VolumeMounts.
                                      type: boolean
                                    targetWWNs:
                                      description: 'targetWWNs is Optional: FC target
                                        worldwide names (WWNs)'
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    wwids:
                                      description: |-
                                        wwids Optional: FC volume world wide identifiers (wwids)
                                        Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  type: object
                                flexVolume:
                                  description: |-
                                    flexVolume represents a generic volume resource that is
                                    provisioned/attached using an exec based plugin.
                                    Deprecated: FlexVolume is deprecated. Consider using a CSIDriver instead.
                                  properties:
                                    driver:
                                      description: driver is the name of the driver
                                        to use for this volume.
                                      type: string
                                    fsType:
                                      description: |-
                                        fsType is the filesystem type to mount.
                                        Must be a filesystem type supported by the host operating system.
                                        Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
                                      type: string
                                    options:
                                      additionalProperties:
                                        type: string
                                      description: 'options is Optional: this field
                                        holds extra command options if any.'
                                      type: object
                                    readOnly:
                                      description: |-
                                        readOnly is Optional: defaults to false (read/write). ReadOnly here will force
                                        the ReadOnly setting in VolumeMounts.
                                      type: boolean
                                    secretRef:
                                      description: |-
                                        secretRef is Optional: secretRef is reference to the secret object containing
                                        sensitive information to pass to the plugin scripts. This may be
                                        empty if no secret object is specified. If the secret object
                                        contains more than one secret, all secrets are passed to the plugin
                                        scripts.
                                      properties:
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  required:
                                  - driver
                                  type: object
                                flocker:
                                  description: |-
                                    flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running.
                                    Deprecated: Flocker is deprecated and the in-tree flocker type is no longer supported.
                                  properties:
                                    datasetName:
                                      description: |-
                                        datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
                                        should be considered as deprecated
                                      type: string
                                    datasetUUID:
                                      description: datasetUUID is the UUID of the
                                        dataset. This is unique identifier of a Flocker
                                        dataset
                                      type: string
                                  type: object
                                gcePersistentDisk:
                                  description: |-
                                    gcePersistentDisk represents a GCE Disk resource that is attached to a
                                    kubelet's host machine and then exposed to the pod.
                                    Deprecated: GCEPersistentDisk is deprecated. All operations for the in-tree
                                    gcePersistentDisk type are redirected to the pd.csi.storage.gke.io CSI driver.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                  properties:
                                    fsType:
                                      description: |-
                                        fsType is filesystem type of the volume that you want to mount.
                                        Tip: Ensure that the filesystem type is supported by the host operating system.
                                        Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                      type: string
                                    partition:
                                      description: |-
                                        partition is the partition in the volume that you want to mount.
                                        If omitted, the default is to mount by volume name.
                                        Examples: For volume /dev/sda1, you specify the partition as "1".
                                        Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                      format: int32
                                      type: integer
                                    pdName:
                                      description: |-
                                        pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                      type: string
                                    readOnly:
                                      description: |-
                                        readOnly here will force the ReadOnly setting in VolumeMounts.
                                        Defaults to false.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                      type: boolean
                                  required:
                                  - pdName
                                  type: object
                                gitRepo:
                                  description: |-
                                    gitRepo represents a git repository at a particular revision.
                                    Deprecated: GitRepo is deprecated. To provision a container with a git repo, mount an
                                    EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
                                    into the Pod's container.
                                  properties:
                                    directory:
                                      description: |-
                                        directory is the target directory name.
                                        Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
                                        git repository.  Otherwise, if specified, the volume will contain the git repository in
                                        the subdirectory with the given name.
                                      type: string
                                    repository:
                                      description: repository is the URL
                                      type: string
                                    revision:
                                      description: revision is the commit hash for
                                        the specified revision.
                                      type: string
                                  required:
                                  - repository
                                  type: object
                                glusterfs:
                                  description: |-
                                    glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
                                    Deprecated: Glusterfs is deprecated and the in-tree glusterfs type is no longer supported.
                                    More info: https://examples.k8s.io/volumes/glusterfs/README.md
                                  properties:
                                    endpoints:
                                      description: |-
                                        endpoints is the endpoint name that details Glusterfs topology.
                                        More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                      type: string
                                    path:
                                      description: |-
                                        path is the Glusterfs volume path.
                                        More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                      type: string
                                    readOnly:
                                      description: |-
                                        readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
                                        Defaults to false.
                                        More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                      type: boolean
                                  required:
                                  - endpoints
                                  - path
                                  type: object
                                hostPath:
                                  description: |-
                                    hostPath represents a pre-existing file or directory on the host
                                    machine that is directly exposed to the container. This is generally
                                    used for system agents or other privileged things that are allowed
                                    to see the host machine. Most containers will NOT need this.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                  properties:
                                    path:
                                      description: |-
                                        path of the directory on the host.
                                        If the path is a symlink, it will follow the link to the real path.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                      type: string
                                    type:
                                      description: |-
                                        type for HostPath Volume
                                        Defaults to ""
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                      type: string
                                  required:
                                  - path
                                  type: object
                                image:
                                  description: |-
                                    image represents an OCI object (a container image or artifact) pulled and mounted on the kubelet's host machine.
                                    The volume is resolved at pod startup depending on which PullPolicy value is provided:

                                    - Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
                                    - Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
                                    - IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.

                                    The volume gets re-resolved if the pod gets deleted and recreated, which means that new remote content will become available on pod recreation.
                                    A failure to resolve or pull the image during pod startup will block containers from starting and may add significant latency. Failures will be retried using normal volume backoff and will be reported on the pod reason and message.
                                    The types of objects that may be mounted by this volume are defined by the container runtime implementation on a host machine and at minimum must include all valid types supported by the container image field.
                                    The OCI object gets mounted in a single directory (spec.containers[*].volumeMounts.mountPath) by merging the manifest layers in the same way as for container images.
                                    The volume will be mounted read-only (ro) and non-executable files (noexec).
                                    Sub path mounts for containers are not supported (spec.containers[*].volumeMounts.subpath).
                                    The field spec.securityContext.fsGroupChangePolicy has no effect on this volume type.
                                  properties:
                                    pullPolicy:
                                      description: |-
                                        Policy for pulling OCI objects. Possible values are:
                                        Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
                                        Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
                                        IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.
                                        Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                                      type: string
                                    reference:
                                      description: |-
                                        Required: Image or artifact reference to be used.
                                        Behaves in the same way as pod.spec.containers[*].image.
                                        Pull secrets will be assembled in the same way as for the container image by looking up node credentials, SA image pull secrets, and pod spec image pull secrets.
                                        More info: https://kubernetes.io/docs/concepts/containers/images
                                        This field is optional to allow higher level config management to default or override
                                        container images in workload controllers like Deployments and StatefulSets.
                                      type: string
                                  type: object
                                iscsi:
                                  description: |-
                                    iscsi represents an ISCSI Disk resource that is attached to a
                                    kubelet's host machine and then exposed to the pod.
                                    More info: https://examples.k8s.io/volumes/iscsi/README.md
                                  properties:
                                    chapAuthDiscovery:
                                      description: chapAuthDiscovery defines whether
                                        support iSCSI Discovery CHAP authentication
                                      type: boolean
                                    chapAuthSession:
                                      description: chapAuthSession defines whether
                                        support iSCSI Session CHAP authentication
                                      type: boolean
                                    fsType:
                                      description: |-
                                        fsType is the filesystem type of the volume that you want to mount.
                                        Tip: Ensure that the filesystem type is supported by the host operating system.
                                        Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                      type: string
                                    initiatorName:
                                      description: |-
                                        initiatorName is the custom iSCSI Initiator Name.
                                        If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
                                        <target portal>:<volume name> will be created for the connection.
                                      type: string
                                    iqn:
                                      description: iqn is the target iSCSI Qualified
                                        Name.
                                      type: string
                                    iscsiInterface:
                                      default: default
                                      description: |-
                                        iscsiInterface is the interface Name that uses an iSCSI transport.
                                        Defaults to 'default' (tcp).
                                      type: string
                                    lun:
                                      description: lun represents iSCSI Target Lun
                                        number.
                                      format: int32
                                      type: integer
                                    portals:
                                      description: |-
                                        portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
                                        is other than default (typically TCP ports 860 and 3260).
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    readOnly:
                                      description: |-
                                        readOnly here will force the ReadOnly setting in VolumeMounts.
                                        Defaults to false.
                                      type: boolean
                                    secretRef:
                                      description: secretRef is the CHAP Secret for
                                        iSCSI target and initiator authentication
                                      properties:
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    targetPortal:
                                      description: |-
                                        targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
                                        is other than default (typically TCP ports 860 and 3260).
                                      type: string
                                  required:
                                  - iqn
                                  - lun
                                  - targetPortal
                                  type: object
                                name:
                                  description: |-
                                    name of the volume.
                                    Must be a DNS_LABEL and unique within the pod.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                nfs:
                                  description: |-
                                    nfs represents an NFS mount on the host that shares a pod's lifetime
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                  properties:
                                    path:
                                      description: |-
                                        path that is exported by the NFS server.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                      type: string
                                    readOnly:
                                      description: |-
                                        readOnly here will force the NFS export to be mounted with read-only permissions.
                                        Defaults to false.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                      type: boolean
                                    server:
                                      description: |-
                                        server is the hostname or IP address of the NFS server.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                      type: string
                                  required:
                                  - path
                                  - server
                                  type: object
                                persistentVolumeClaim:
                                  description: |-
                                    persistentVolumeClaimVolumeSource represents a reference to a
                                    PersistentVolumeClaim in the same namespace.
                                    More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                  properties:
                                    claimName:
                                      description: |-
                                        claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                      type: string
                                    readOnly:
                                      description: |-
                                        readOnly Will force the ReadOnly setting in VolumeMounts.
                                        Default false.
                                      type: boolean
                                  required:
                                  - claimName
                                  type: object
                                photonPersistentDisk:
                                  description: |-
                                    photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine.
                                    Deprecated: PhotonPersistentDisk is deprecated and the in-tree photonPersistentDisk type is no longer supported.
                                  properties:
                                    fsType:
                                      description: |-
                                        fsType is the filesystem type to mount.
                                        Must be a filesystem type supported by the host operating system.
                                        Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                      type: string
                                    pdID:
                                      description: pdID is the ID that identifies
                                        Photon Controller persistent disk
                                      type: string
                                  required:
                                  - pdID
                                  type: object
                                portworxVolume:
                                  description: |-
                                    portworxVolume represents a portworx volume attached and mounted on kubelets host machine.
                                    Deprecated: PortworxVolume is deprecated. All operations for the in-tree portworxVolume type
                                    are redirected to the pxd.portworx.com CSI driver when the CSIMigrationPortworx feature-gate
                                    is on.
                                  properties:
                                    fsType:
                                      description: |-
                                        fSType represents the filesystem type to mount
                                        Must be a filesystem type supported by the host operating system.
                                        Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
                                      type: string
                                    readOnly:
                                      description: |-
                                        readOnly defaults to false (read/write). ReadOnly here will force
                                        the ReadOnly setting in VolumeMounts.
                                      type: boolean
                                    volumeID:
                                      description: volumeID uniquely identifies a
                                        Portworx volume
                                      type: string
                                  required:
                                  - volumeID
                                  type: object
                                projected:
                                  description: projected items for all in one resources
                                    secrets, configmaps, and downward API
                                  properties:
                                    defaultMode:
                                      description: |-
                                        defaultMode are the mode bits used to set permissions on created files by default.
                                        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                        Directories within the path are not affected by this setting.
                                        This might be in conflict with other options that affect the file
                                        mode, like fsGroup, and the result can be other mode bits set.
                                      format: int32
                                      type: integer
                                    sources:
                                      description: |-
                                        sources is the list of volume projections. Each entry in this list
                                        handles one source.
                                      items:
                                        description: |-
                                          Projection that may be projected along with other supported volume types.
                                          Exactly one of these fields must be set.
                                        properties:
                                          clusterTrustBundle:
                                            description: |-
                                              ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
                                              of ClusterTrustBundle objects in an auto-updating file.

                                              Alpha, gated by the ClusterTrustBundleProjection feature gate.

                                              ClusterTrustBundle objects can either be selected by name, or by the
                                              combination of signer name and a label selector.

                                              Kubelet performs aggressive normalization of the PEM contents written
                                              into the pod filesystem.  Esoteric PEM features such as inter-block
                                              comments and block headers are stripped.  Certificates are deduplicated.
                                              The ordering of certificates within the file is arbitrary, and Kubelet
                                              may change the order over time.
                                            properties:
                                              labelSelector:
                                                description: |-
                                                  Select all ClusterTrustBundles that match this label selector.  Only has
                                                  effect if signerName is set.  Mutually-exclusive with name.  If unset,
                                                  interpreted as "match nothing".  If set but empty, interpreted as "match
                                                  everything".
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              name:
                                                description: |-
                                                  Select a single ClusterTrustBundle by object name.  Mutually-exclusive
                                                  with signerName and labelSelector.
                                                type: string
                                              optional:
                                                description: |-
                                                  If true, don't block pod startup if the referenced ClusterTrustBundle(s)
                                                  aren't available.  If using name, then the named ClusterTrustBundle is
                                                  allowed not to exist.  If using signerName, then the combination of
                                                  signerName and labelSelector is allowed to match zero
                                                  ClusterTrustBundles.
                                                type: boolean
                                              path:
                                                description: Relative path from the
                                                  volume root to write the bundle.
                                                type: string
                                              signerName:
                                                description: |-
                                                  Select all ClusterTrustBundles that match this signer name.
                                                  Mutually-exclusive with name.  The contents of all selected
                                                  ClusterTrustBundles will be unified and deduplicated.
                                                type: string
                                            required:
                                            - path
                                            type: object
                                          configMap:
                                            description: configMap information about
                                              the configMap data to project
                                            properties:
                                              items:
                                                description: |-
                                                  items if unspecified, each key-value pair in the Data field of the referenced
                                                  ConfigMap will be projected into the volume as a file whose name is the
                                                  key and content is the value. If specified, the listed keys will be
                                                  projected into the specified paths, and unlisted keys will not be
                                                  present. If a key is specified which is not present in the ConfigMap,
                                                  the volume setup will error unless it is marked optional. Paths must be
                                                  relative and may not contain the '..' path or start with '..'.
                                                items:
                                                  description: Maps a string key to
                                                    a path within a volume.
                                                  properties:
                                                    key:
                                                      description: key is the key
                                                        to project.
                                                      type: string
                                                    mode:
                                                      description: |-
                                                        mode is Optional: mode bits used to set permissions on this file.
                                                        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                        If not specified, the volume defaultMode will be used.
                                                        This might be in conflict with other options that affect the file
                                                        mode, like fsGroup, and the result can be other mode bits set.
                                                      format: int32
                                                      type: integer
                                                    path:
                                                      description: |-
                                                        path is the relative path of the file to map the key to.
                                                        May not be an absolute path.
                                                        May not contain the path element '..'.
                                                        May not start with the string '..'.
                                                      type: string
                                                  required:
                                                  - key
                                                  - path
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: optional specify whether
                                                  the ConfigMap or its keys must be
                                                  defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          downwardAPI:
                                            description: downwardAPI information about
                                              the downwardAPI data to project
                                            properties:
                                              items:
                                                description: Items is a list of DownwardAPIVolume
                                                  file
                                                items:
                                                  description: DownwardAPIVolumeFile
                                                    represents information to create
                                                    the file containing the pod field
                                                  properties:
                                                    fieldRef:
                                                      description: 'Required: Selects
                                                        a field of the pod: only annotations,
                                                        labels, name, namespace and
                                                        uid are supported.'
                                                      properties:
                                                        apiVersion:
                                                          description: Version of
                                                            the schema the FieldPath
                                                            is written in terms of,
                                                            defaults to "v1".
                                                          type: string
                                                        fieldPath:
                                                          description: Path of the
                                                            field to select in the
                                                            specified API version.
                                                          type: string
                                                      required:
                                                      - fieldPath
                                                      type: object
                                                      x-kubernetes-map-type: atomic
                                                    mode:
                                                      description: |-
                                                        Optional: mode bits used to set permissions on this file, must be an octal value
                                                        between 0000 and 0777 or a decimal value between 0 and 511.
                                                        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                        If not specified, the volume defaultMode will be used.
                                                        This might be in conflict with other options that affect the file
                                                        mode, like fsGroup, and the result can be other mode bits set.
                                                      format: int32
                                                      type: integer
                                                    path:
                                                      description: 'Required: Path
                                                        is  the relative path name
                                                        of the file to be created.
                                                        Must not be absolute or contain
                                                        the ''..'' path. Must be utf-8
                                                        encoded. The first item of
                                                        the relative path must not
                                                        start with ''..'''
                                                      type: string
                                                    resourceFieldRef:
                                                      description: |-
                                                        Selects a resource of the container: only resources limits and requests
                                                        (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                                      properties:
                                                        containerName:
                                                          description: 'Container
                                                            name: required for volumes,
                                                            optional for env vars'
                                                          type: string
                                                        divisor:
                                                          anyOf:
                                                          - type: integer
                                                          - type: string
                                                          description: Specifies the
                                                            output format of the exposed
                                                            resources, defaults to
                                                            "1"
                                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                          x-kubernetes-int-or-string: true
                                                        resource:
                                                          description: 'Required:
                                                            resource to select'
                                                          type: string
                                                      required:
                                                      - resource
                                                      type: object
                                                      x-kubernetes-map-type: atomic
                                                  required:
                                                  - path
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            type: object
                                          secret:
                                            description: secret information about
                                              the secret data to project
                                            properties:
                                              items:
                                                description: |-
                                                  items if unspecified, each key-value pair in the Data field of the referenced
                                                  Secret will be projected into the volume as a file whose name is the
                                                  key and content is the value. If specified, the listed keys will be
                                                  projected into the specified paths, and unlisted keys will not be
                                                  present. If a key is specified which is not present in the Secret,
                                                  the volume setup will error unless it is marked optional. Paths must be
                                                  relative and may not contain the '..' path or start with '..'.
                                                items:
                                                  description: Maps a string key to
                                                    a path within a volume.
                                                  properties:
                                                    key:
                                                      description: key is the key
                                                        to project.
                                                      type: string
                                                    mode:
                                                      description: |-
                                                        mode is Optional: mode bits used to set permissions on this file.
                                                        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                        If not specified, the volume defaultMode will be used.
                                                        This might be in conflict with other options that affect the file
                                                        mode, like fsGroup, and the result can be other mode bits set.
                                                      format: int32
                                                      type: integer
                                                    path:
                                                      description: |-
                                                        path is the relative path of the file to map the key to.
                                                        May not be an absolute path.
                                                        May not contain the path element '..'.
                                                        May not start with the string '..'.
                                                      type: string
                                                  required:
                                                  - key
                                                  - path
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: optional field specify
                                                  whether the Secret or its key must
                                                  be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          serviceAccountToken:
                                            description: serviceAccountToken is information
                                              about the serviceAccountToken data to
                                              project
                                            properties:
                                              audience:
                                                description: |-
                                                  audience is the intended audience of the token. A recipient of a token
                                                  must identify itself with an identifier specified in the audience of the
                                                  token, and otherwise should reject the token. The audience defaults to the
                                                  identifier of the apiserver.
                                                type: string
                                              expirationSeconds:
                                                description: |-
                                                  expirationSeconds is the requested duration of validity of the service
                                                  account token. As the token approaches expiration, the kubelet volume
                                                  plugin will proactively rotate the service account token. The kubelet will
                                                  start trying to rotate the token if the token is older than 80 percent of
                                                  its time to live or if the token is older than 24 hours.Defaults to 1 hour
                                                  and must be at least 10 minutes.
                                                format: int64
                                                type: integer
                                              path:
                                                description: |-
                                                  path is the path relative to the mount point of the file to project the
                                                  token into.
                                                type: string
                                            required:
                                            - path
                                            type: object
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  type: object
                                quobyte:
                                  description: |-
                                    quobyte represents a Quobyte mount on the host that shares a pod's lifetime.
                                    Deprecated: Quobyte is deprecated and the in-tree quobyte type is no longer supported.
                                  properties:
                                    group:
                                      description: |-
                                        group to map volume access to
                                        Default is no group
                                      type: string
                                    readOnly:
                                      description: |-
                                        readOnly here will force the Quobyte volume to be mounted with read-only permissions.
                                        Defaults to false.
                                      type: boolean
                                    registry:
                                      description: |-
                                        registry represents a single or multiple Quobyte Registry services
                                        specified as a string as host:port pair (multiple entries are separated with commas)
                                        which acts as the central registry for volumes
                                      type: string
                                    tenant:
                                      description: |-
                                        tenant owning the given Quobyte volume in the Backend
                                        Used with dynamically provisioned Quobyte volumes, value is set by the plugin
                                      type: string
                                    user:
                                      description: |-
                                        user to map volume access to
                                        Defaults to serivceaccount user
                                      type: string
                                    volume:
                                      description: volume is a string that references
                                        an already created Quobyte volume by name.
                                      type: string
                                  required:
                                  - registry
                                  - volume
                                  type: object
                                rbd:
                                  description: |-
                                    rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.
                                    Deprecated: RBD is deprecated and the in-tree rbd type is no longer supported.
                                    More info: https://examples.k8s.io/volumes/rbd/README.md
                                  properties:
                                    fsType:
                                      description: |-
                                        fsType is the filesystem type of the volume that you want to mount.
                                        Tip: Ensure that the filesystem type is supported by the host operating system.
                                        Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                      type: string
                                    image:
                                      description: |-
                                        image is the rados image name.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                      type: string
                                    keyring:
                                      default: /etc/ceph/keyring
                                      description: |-
                                        keyring is the path to key ring for RBDUser.
                                        Default is /etc/ceph/keyring.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                      type: string
                                    monitors:
                                      description: |-
                                        monitors is a collection of Ceph monitors.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    pool:
                                      default: rbd
                                      description: |-
                                        pool is the rados pool name.
                                        Default is rbd.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                      type: string
                                    readOnly:
                                      description: |-
                                        readOnly here will force the ReadOnly setting in VolumeMounts.
                                        Defaults to false.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                      type: boolean
                                    secretRef:
                                      description: |-
                                        secretRef is name of the authentication secret for RBDUser. If provided
                                        overrides keyring.
                                        Default is nil.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                      properties:
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    user:
                                      default: admin
                                      description: |-
                                        user is the rados user name.
                                        Default is admin.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                      type: string
                                  required:
                                  - image
                                  - monitors
                                  type: object
                                scaleIO:
                                  description: |-
                                    scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
                                    Deprecated: ScaleIO is deprecated and the in-tree scaleIO type is no longer supported.
                                  properties:
                                    fsType:
                                      default: xfs
                                      description: |-
                                        fsType is the filesystem type to mount.
                                        Must be a filesystem type supported by the host operating system.
                                        Ex. "ext4", "xfs", "ntfs".
                                        Default is "xfs".
                                      type: string
                                    gateway:
                                      description: gateway is the host address of
                                        the ScaleIO API Gateway.
                                      type: string
                                    protectionDomain:
                                      description: protectionDomain is the name of
                                        the ScaleIO Protection Domain for the configured
                                        storage.
                                      type: string
                                    readOnly:
                                      description: |-
                                        readOnly Defaults to false (read/write). ReadOnly here will force
                                        the ReadOnly setting in VolumeMounts.
                                      type: boolean
                                    secretRef:
                                      description: |-
                                        secretRef references to the secret for ScaleIO user and other
                                        sensitive information. If this is not provided, Login operation will fail.
                                      properties:
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    sslEnabled:
                                      description: sslEnabled Flag enable/disable
                                        SSL communication with Gateway, default false
                                      type: boolean
                                    storageMode:
                                      default: ThinProvisioned
                                      description: |-
                                        storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
                                        Default is ThinProvisioned.
                                      type: string
                                    storagePool:
                                      description: storagePool is the ScaleIO Storage
                                        Pool associated with the protection domain.
                                      type: string
                                    system:
                                      description: system is the name of the storage
                                        system as configured in ScaleIO.
                                      type: string
                                    volumeName:
                                      description: |-
                                        volumeName is the name of a volume already created in the ScaleIO system
                                        that is associated with this volume source.
                                      type: string
                                  required:
                                  - gateway
                                  - secretRef
                                  - system
                                  type: object
                                secret:
                                  description: |-
                                    secret represents a secret that should populate this volume.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                                  properties:
                                    defaultMode:
                                      description: |-
                                        defaultMode is Optional: mode bits used to set permissions on created files by default.
                                        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                        YAML accepts both octal and decimal values, JSON requires decimal values
                                        for mode bits. Defaults to 0644.
                                        Directories within the path are not affected by this setting.
                                        This might be in conflict with other options that affect the file
                                        mode, like fsGroup, and the result can be other mode bits set.
                                      format: int32
                                      type: integer
                                    items:
                                      description: |-
                                        items If unspecified, each key-value pair in the Data field of the referenced
                                        Secret will be projected into the volume as a file whose name is the
                                        key and content is the value. If specified, the listed keys will be
                                        projected into the specified paths, and unlisted keys will not be
                                        present. If a key is specified which is not present in the Secret,
                                        the volume setup will error unless it is marked optional. Paths must be
                                        relative and may not contain the '..' path or start with '..'.
                                      items:
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: |-
                                              mode is Optional: mode bits used to set permissions on this file.
                                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                              If not specified, the volume defaultMode will be used.
                                              This might be in conflict with other options that affect the file
                                              mode, like fsGroup, and the result can be other mode bits set.
                                            format: int32
                                            type: integer
                                          path:
                                            description: |-
                                              path is the relative path of the file to map the key to.
                                              May not be an absolute path.
                                              May not contain the path element '..'.
                                              May not start with the string '..'.
                                            type: string
                                        required:
                                        - key
                                        - path
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    optional:
                                      description: optional field specify whether
                                        the Secret or its keys must be defined
                                      type: boolean
                                    secretName:
                                      description: |-
                                        secretName is the name of the secret in the pod's namespace to use.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                                      type: string
                                  type: object
                                storageos:
                                  description: |-
                                    storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
                                    Deprecated: StorageOS is deprecated and the in-tree storageos type is no longer supported.
                                  properties:
                                    fsType:
                                      description: |-
                                        fsType is the filesystem type to mount.
                                        Must be a filesystem type supported by the host operating system.
                                        Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                      type: string
                                    readOnly:
                                      description: |-
                                        readOnly defaults to false (read/write). ReadOnly here will force
                                        the ReadOnly setting in VolumeMounts.
                                      type: boolean
                                    secretRef:
                                      description: |-
                                        secretRef specifies the secret to use for obtaining the StorageOS API
                                        credentials.  If not specified, default values will be attempted.
                                      properties:
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    volumeName:
                                      description: |-
                                        volumeName is the human-readable name of the StorageOS volume.  Volume
                                        names are only unique within a namespace.
                                      type: string
                                    volumeNamespace:
                                      description: |-
                                        volumeNamespace specifies the scope of the volume within StorageOS.  If no
                                        namespace is specified then the Pod's namespace will be used.  This allows the
                                        Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
                                        Set VolumeName to any name to override the default behaviour.
                                        Set to "default" if you are not using namespaces within StorageOS.
                                        Namespaces that do not pre-exist within StorageOS will be created.
                                      type: string
                                  type: object
                                vsphereVolume:
                                  description: |-
                                    vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine.
                                    Deprecated: VsphereVolume is deprecated. All operations for the in-tree vsphereVolume type
                                    are redirected to the csi.vsphere.vmware.com CSI driver.
                                  properties:
                                    fsType:
                                      description: |-
                                        fsType is filesystem type to mount.
                                        Must be a filesystem type supported by the host operating system.
                                        Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                      type: string
                                    storagePolicyID:
                                      description: storagePolicyID is the storage
                                        Policy Based Management (SPBM) profile ID
                                        associated with the StoragePolicyName.
                                      type: string
                                    storagePolicyName:
                                      description: storagePolicyName is the storage
                                        Policy Based Management (SPBM) profile name.
                                      type: string
                                    volumePath:
                                      description: volumePath is the path that identifies
                                        vSphere volume vmdk
                                      type: string
                                  required:
                                  - volumePath
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                        required:
                        - containers
                        type: object
                    type: object
                  replicas:
                    default: 1
                    description: |-
                      Replicas describes the number of desired pods.
                      This is a pointer to distinguish between explicit zero and not specified.
                      This only affects the DataPlane deployments for now, for more details on
                      ControlPlane scaling please see https://github.com/Kong/gateway-operator/issues/736.
                    format: int32
                    type: integer
                type: object
              extensions:
                description: |-
                  Extensions provide additional or replacement features for the ControlPlane
                  resources to influence or enhance functionality.
                items:
                  description: |-
                    ExtensionRef corresponds to another resource in the Kubernetes cluster which
                    defines extended behavior for a resource (e.g. ControlPlane).
                  properties:
                    group:
                      default: gateway-operator.konghq.com
                      description: Group is the group of the extension resource.
                      type: string
                    kind:
                      description: Kind is kind of the extension resource.
                      type: string
                    name:
                      description: Name is the name of the referred resource.
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace is the namespace of the referred resource.

                        For namespace-scoped resources if no Namespace is provided then the
                        namespace of the parent object MUST be used.

                        This field MUST not be set when referring to cluster-scoped resources.
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                maxItems: 2
                minItems: 0
                type: array
              gatewayClass:
                description: |-
                  GatewayClass indicates the Gateway resources which this ControlPlane
                  should be responsible for configuring routes for (e.g. HTTPRoute,
                  TCPRoute, UDPRoute, TLSRoute, e.t.c.).

                  Required for the ControlPlane to have any effect: at least one Gateway
                  must be present for configuration to be pushed to the data-plane and
                  only Gateway resources can be used to identify data-plane entities.
                maxLength: 253
                minLength: 1
                type: string
              ingressClass:
                description: |-
                  IngressClass enables support for the older Ingress resource and indicates
                  which Ingress resources this ControlPlane should be responsible for.

                  Routing configured this way will be applied to the Gateway resources
                  indicated by GatewayClass.

                  If omitted, Ingress resources will not be supported by the ControlPlane.
                type: string
            type: object
            x-kubernetes-validations:
            - message: Extension not allowed for ControlPlane
              rule: 'has(self.extensions) ? self.extensions.all(e, (e.group == ''konnect.konghq.com''
                && e.kind == ''KonnectExtension'') || (e.group == ''gateway-operator.konghq.com''
                && e.kind == ''DataPlaneMetricsExtension'')) : true'
          status:
            description: ControlPlaneStatus defines the observed state of ControlPlane
            properties:
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: NotReconciled
                  status: Unknown
                  type: Scheduled
                description: Conditions describe the current conditions of the Gateway.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
        x-kubernetes-validations:
        - message: ControlPlane requires an image to be set on controller container
          rule: has(self.spec.deployment.podTemplateSpec) && has(self.spec.deployment.podTemplateSpec.spec.containers)
            && self.spec.deployment.podTemplateSpec.spec.containers.exists(c, c.name
            == 'controller' && has(c.image))
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: dataplanemetricsextensions.gateway-operator.konghq.com
spec:
  group: gateway-operator.konghq.com
  names:
    categories:
    - kong
    - all
    kind: DataPlaneMetricsExtension
    listKind: DataPlaneMetricsExtensionList
    plural: dataplanemetricsextensions
    singular: dataplanemetricsextension
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          DataPlaneMetricsExtension holds the configuration for the DataPlane metrics extension.
          It can be attached to a ControlPlane using its spec.extensions.
          When attached it will make the ControlPlane configure its DataPlane with
          the specified metrics configuration.
          Additionally, it will also make the operator expose DataPlane's metrics
          enriched with metadata required for in-cluster Kubernetes autoscaling.

          NOTE: This is an enterprise feature. In order to use it you need to use
          the EE version of Kong Gateway Operator with a valid license.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DataPlaneMetricsExtensionSpec defines the spec for the DataPlaneMetricsExtension.
            properties:
              config:
                description: Config holds the configuration for the DataPlane metrics.
                properties:
                  bandwidth:
                    default: false
                    description: |-
                      Bandwidth indicates whether bandwidth metrics are enabled for the DataPlane.
                      This translates into deployed instances having `bandwidth_metrics` option set
                      on the Prometheus plugin.
                    type: boolean
                  latency:
                    default: false
                    description: |-
                      Latency indicates whether latency metrics are enabled for the DataPlane.
                      This translates into deployed instances having `latency_metrics` option set
                      on the Prometheus plugin.
                    type: boolean
                  statusCode:
                    default: false
                    description: |-
                      StatusCode indicates whether status code metrics are enabled for the DataPlane.
                      This translates into deployed instances having `status_code_metrics` option set
                      on the Prometheus plugin.
                    type: boolean
                  upstreamHealth:
                    default: false
                    description: |-
                      UpstreamHealth indicates whether upstream health metrics are enabled for the DataPlane.
                      This translates into deployed instances having `upstream_health_metrics` option set
                      on the Prometheus plugin.
                    type: boolean
                required:
                - bandwidth
                - latency
                - statusCode
                - upstreamHealth
                type: object
              serviceSelector:
                description: |-
                  ServiceSelector holds the service selector specifying the services
                  for which metrics should be collected.
                properties:
                  matchNames:
                    description: MatchNames holds the list of Services names to match.
                    items:
                      description: ServiceSelectorEntry holds the name of a service
                        to match.
                      properties:
                        name:
                          description: Name is the name of the service to match.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                required:
                - matchNames
                type: object
            required:
            - serviceSelector
            type: object
          status:
            description: DataPlaneMetricsExtensionStatus defines the status of the
              DataPlaneMetricsExtension.
            properties:
              controlPlaneRef:
                description: |-
                  ControlPlaneRef is a reference to the ControlPlane that this is associated with.
                  This field is set by the operator when this extension is associated with
                  a ControlPlane through its extensions spec.
                  There can only be one ControlPlane associated with a given DataPlaneMetricsExtension.
                  When this is unset it means that the association has been removed.
                properties:
                  name:
                    description: Name is the name of the referred resource.
                    maxLength: 253
                    minLength: 1
                    type: string
                  namespace:
                    description: |-
                      Namespace is the namespace of the referred resource.

                      For namespace-scoped resources if no Namespace is provided then the
                      namespace of the parent object MUST be used.

                      This field MUST not be set when referring to cluster-scoped resources.
                    type: string
                required:
                - name
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: dataplanes.gateway-operator.konghq.com
spec:
  group: gateway-operator.konghq.com
  names:
    categories:
    - kong
    - all
    kind: DataPlane
    listKind: DataPlaneList
    plural: dataplanes
    shortNames:
    - kodp
    singular: dataplane
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The Resource is ready
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: DataPlane is the Schema for the dataplanes API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DataPlaneSpec defines the desired state of DataPlane
            properties:
              deployment:
                description: |-
                  DataPlaneDeploymentOptions specifies options for the Deployments (as in the Kubernetes
                  resource "Deployment") which are created and managed for the DataPlane resource.
                properties:
                  podTemplateSpec:
                    description: |-
                      PodTemplateSpec defines PodTemplateSpec for Deployment's pods.
                      It's being applied on top of the generated Deployments using
                      [StrategicMergePatch](https://pkg.go.dev/k8s.io/apimachinery/pkg/util/strategicpatch#StrategicMergePatch).
                    properties:
                      metadata:
                        description: |-
                          Standard object's metadata.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            type: object
                          finalizers:
                            items:
                              type: string
                            type: array
                          labels:
                            additionalProperties:
                              type: string
                            type: object
                          name:
                            type: string
                          namespace:
                            type: string
                        type: object
                      spec:
                        description: |-
                          Specification of the desired behavior of the pod.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
                        properties:
                          activeDeadlineSeconds:
                            description: |-
                              Optional duration in seconds the pod may be active on the node relative to
                              StartTime before the system will actively try to mark it failed and kill associated containers.
                              Value must be a positive integer.
                            format: int64
                            type: integer
                          affinity:
                            description: If specified, the pod's scheduling constraints
                            properties:
                              nodeAffinity:
                                description: Describes node affinity scheduling rules
                                  for the pod.
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: |-
                                      The scheduler will prefer to schedule pods to nodes that satisfy
                                      the affinity expressions specified by this field, but it may choose
                                      a node that violates one or more of the expressions. The node that is
                                      most preferred is the one with the greatest sum of weights, i.e.
                                      for each node that meets all of the scheduling requirements (resource
                                      request, requiredDuringScheduling affinity expressions, etc.),
                                      compute a sum by iterating through the elements of this field and adding
                                      "weight" to the sum if the node matches the corresponding matchExpressions; the
                                      node(s) with the highest sum are the most preferred.
                                    items:
                                      description: |-
                                        An empty preferred scheduling term matches all objects with implicit weight 0
                                        (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                      properties:
                                        preference:
                                          description: A node selector term, associated
                                            with the corresponding weight.
                                          properties:
                                            matchExpressions:
                                              description: A list of node selector
                                                requirements by node's labels.
                                              items:
                                                description: |-
                                                  A node selector requirement is a selector that contains values, a key, and an operator
                                                  that relates the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      Represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      An array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. If the operator is Gt or Lt, the values
                                                      array must have a single element, which will be interpreted as an integer.
                                                      This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchFields:
                                              description: A list of node selector
                                                requirements by node's fields.
                                              items:
                                                description: |-
                                                  A node selector requirement is a selector that contains values, a key, and an operator
                                                  that relates the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      Represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      An array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. If the operator is Gt or Lt, the values
                                                      array must have a single element, which will be interpreted as an integer.
                                                      This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        weight:
                                          description: Weight associated with matching
                                            the corresponding nodeSelectorTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - preference
                                      - weight
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: |-
                                      If the affinity requirements specified by this field are not met at
                                      scheduling time, the pod will not be scheduled onto the node.
                                      If the affinity requirements specified by this field cease to be met
                                      at some point during pod execution (e.g. due to an update), the system
                                      may or may not try to eventually evict the pod from its node.
                                    properties:
                                      nodeSelectorTerms:
                                        description: Required. A list of node selector
                                          terms. The terms are ORed.
                                        items:
                                          description: |-
                                            A null or empty node selector term matches no objects. The requirements of
                                            them are ANDed.
                                            The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                          properties:
                                            matchExpressions:
                                              description: A list of node selector
                                                requirements by node's labels.
                                              items:
                                                description: |-
                                                  A node selector requirement is a selector that contains values, a key, and an operator
                                                  that relates the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      Represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      An array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. If the operator is Gt or Lt, the values
                                                      array must have a single element, which will be interpreted as an integer.
                                                      This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchFields:
                                              description: A list of node selector
                                                requirements by node's fields.
                                              items:
                                                description: |-
                                                  A node selector requirement is a selector that contains values, a key, and an operator
                                                  that relates the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      Represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      An array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. If the operator is Gt or Lt, the values
                                                      array must have a single element, which will be interpreted as an integer.
                                                      This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - nodeSelectorTerms
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              podAffinity:
                                description: Describes pod affinity scheduling rules
                                  (e.g. co-locate this pod in the same node, zone,
                                  etc. as some other pod(s)).
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: |-
                                      The scheduler will prefer to schedule pods to nodes that satisfy
                                      the affinity expressions specified by this field, but it may choose
                                      a node that violates one or more of the expressions. The node that is
                                      most preferred is the one with the greatest sum of weights, i.e.
                                      for each node that meets all of the scheduling requirements (resource
                                      request, requiredDuringScheduling affinity expressions, etc.),
                                      compute a sum by iterating through the elements of this field and adding
                                      "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                      node(s) with the highest sum are the most preferred.
                                    items:
                                      description: The weights of all of the matched
                                        WeightedPodAffinityTerm fields are added per-node
                                        to find the most preferred node(s)
                                      properties:
                                        podAffinityTerm:
                                          description: Required. A pod affinity term,
                                            associated with the corresponding weight.
                                          properties:
                                            labelSelector:
                                              description: |-
                                                A label query over a set of resources, in this case pods.
                                                If it's null, this PodAffinityTerm matches with no Pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            matchLabelKeys:
                                              description: |-
                                                MatchLabelKeys is a set of pod label keys to select which pods will
                                                be taken into consideration. The keys are used to lookup values from the
                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                to select the group of existing pods which pods will be taken into consideration
                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                pod labels will be ignored. The default value is empty.
                                                The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            mismatchLabelKeys:
                                              description: |-
                                                MismatchLabelKeys is a set of pod label keys to select which pods will
                                                be taken into consideration. The keys are used to lookup values from the
                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                to select the group of existing pods which pods will be taken into consideration
                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                pod labels will be ignored. The default value is empty.
                                                The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            namespaceSelector:
                                              description: |-
                                                A label query over the set of namespaces that the term applies to.
                                                The term is applied to the union of the namespaces selected by this field
                                                and the ones listed in the namespaces field.
                                                null selector and null or empty namespaces list means "this pod's namespace".
                                                An empty selector ({}) matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaces:
                                              description: |-
                                                namespaces specifies a static list of namespace names that the term applies to.
                                                The term is applied to the union of the namespaces listed in this field
                                                and the ones selected by namespaceSelector.
                                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            topologyKey:
                                              description: |-
                                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                whose value of the label with key topologyKey matches that of any node on which any of the
                                                selected pods is running.
                                                Empty topologyKey is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        weight:
                                          description: |-
                                            weight associated with matching the corresponding podAffinityTerm,
                                            in the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - podAffinityTerm
                                      - weight
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: |-
                                      If the affinity requirements specified by this field are not met at
                                      scheduling time, the pod will not be scheduled onto the node.
                                      If the affinity requirements specified by this field cease to be met
                                      at some point during pod execution (e.g. due to a pod label update), the
                                      system may or may not try to eventually evict the pod from its node.
                                      When there are multiple elements, the lists of nodes corresponding to each
                                      podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                    items:
                                      description: |-
                                        Defines a set of pods (namely those matching the labelSelector
                                        relative to the given namespace(s)) that this pod should be
                                        co-located (affinity) or not co-located (anti-affinity) with,
                                        where co-located is defined as running on a node whose value of
                                        the label with key <topologyKey> matches that of any node on which
                                        a pod of the set of pods is running
                                      properties:
                                        labelSelector:
                                          description: |-
                                            A label query over a set of resources, in this case pods.
                                            If it's null, this PodAffinityTerm matches with no Pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: |-
                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                  relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      operator represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      values is an array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. This array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        matchLabelKeys:
                                          description: |-
                                            MatchLabelKeys is a set of pod label keys to select which pods will
                                            be taken into consideration. The keys are used to lookup values from the
                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                            to select the group of existing pods which pods will be taken into consideration
                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                            pod labels will be ignored. The default value is empty.
                                            The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                            Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                            This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        mismatchLabelKeys:
                                          description: |-
                                            MismatchLabelKeys is a set of pod label keys to select which pods will
                                            be taken into consideration. The keys are used to lookup values from the
                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                            to select the group of existing pods which pods will be taken into consideration
                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                            pod labels will be ignored. The default value is empty.
                                            The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                            Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                            This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        namespaceSelector:
                                          description: |-
                                            A label query over the set of namespaces that the term applies to.
                                            The term is applied to the union of the namespaces selected by this field
                                            and the ones listed in the namespaces field.
                                            null selector and null or empty namespaces list means "this pod's namespace".
                                            An empty selector ({}) matches all namespaces.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: |-
                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                  relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      operator represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      values is an array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. This array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: |-
                                            namespaces specifies a static list of namespace names that the term applies to.
                                            The term is applied to the union of the namespaces listed in this field
                                            and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        topologyKey:
                                          description: |-
                                            This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                            the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                            whose value of the label with key topologyKey matches that of any node on which any of the
                                            selected pods is running.
                                            Empty topologyKey is not allowed.
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                              podAntiAffinity:
                                description: Describes pod anti-affinity scheduling
                                  rules (e.g. avoid putting this pod in the same node,
                                  zone, etc. as some other pod(s)).
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: |-
                                      The scheduler will prefer to schedule pods to nodes that satisfy
                                      the anti-affinity expressions specified by this field, but it may choose
                                      a node that violates one or more of the expressions. The node that is
                                      most preferred is the one with the greatest sum of weights, i.e.
                                      for each node that meets all of the scheduling requirements (resource
                                      request, requiredDuringScheduling anti-affinity expressions, etc.),
                                      compute a sum by iterating through the elements of this field and adding
                                      "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                      node(s) with the highest sum are the most preferred.
                                    items:
                                      description: The weights of all of the matched
                                        WeightedPodAffinityTerm fields are added per-node
                                        to find the most preferred node(s)
                                      properties:
                                        podAffinityTerm:
                                          description: Required. A pod affinity term,
                                            associated with the corresponding weight.
                                          properties:
                                            labelSelector:
                                              description: |-
                                                A label query over a set of resources, in this case pods.
                                                If it's null, this PodAffinityTerm matches with no Pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            matchLabelKeys:
                                              description: |-
                                                MatchLabelKeys is a set of pod label keys to select which pods will
                                                be taken into consideration. The keys are used to lookup values from the
                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                to select the group of existing pods which pods will be taken into consideration
                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                pod labels will be ignored. The default value is empty.
                                                The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            mismatchLabelKeys:
                                              description: |-
                                                MismatchLabelKeys is a set of pod label keys to select which pods will
                                                be taken into consideration. The keys are used to lookup values from the
                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                to select the group of existing pods which pods will be taken into consideration
                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                pod labels will be ignored. The default value is empty.
                                                The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            namespaceSelector:
                                              description: |-
                                                A label query over the set of namespaces that the term applies to.
                                                The term is applied to the union of the namespaces selected by this field
                                                and the ones listed in the namespaces field.
                                                null selector and null or empty namespaces list means "this pod's namespace".
                                                An empty selector ({}) matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaces:
                                              description: |-
                                                namespaces specifies a static list of namespace names that the term applies to.
                                                The term is applied to the union of the namespaces listed in this field
                                                and the ones selected by namespaceSelector.
                                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            topologyKey:
                                              description: |-
                                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                whose value of the label with key topologyKey matches that of any node on which any of the
                                                selected pods is running.
                                                Empty topologyKey is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        weight:
                                          description: |-
                                            weight associated with matching the corresponding podAffinityTerm,
                                            in the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - podAffinityTerm
                                      - weight
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: |-
                                      If the anti-affinity requirements specified by this field are not met at
                                      scheduling time, the pod will not be scheduled onto the node.
                                      If the anti-affinity requirements specified by this field cease to be met
                                      at some point during pod execution (e.g. due to a pod label update), the
                                      system may or may not try to eventually evict the pod from its node.
                                      When there are multiple elements, the lists of nodes corresponding to each
                                      podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                    items:
                                      description: |-
                                        Defines a set of pods (namely those matching the labelSelector
                                        relative to the given namespace(s)) that this pod should be
                                        co-located (affinity) or not co-located (anti-affinity) with,
                                        where co-located is defined as running on a node whose value of
                                        the label with key <topologyKey> matches that of any node on which
                                        a pod of the set of pods is running
                                      properties:
                                        labelSelector:
                                          description: |-
                                            A label query over a set of resources, in this case pods.
                                            If it's null, this PodAffinityTerm matches with no Pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: |-
                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                  relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      operator represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      values is an array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. This array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        matchLabelKeys:
                                          description: |-
                                            MatchLabelKeys is a set of pod label keys to select which pods will
                                            be taken into consideration. The keys are used to lookup values from the
                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                            to select the group of existing pods which pods will be taken into consideration
                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                            pod labels will be ignored. The default value is empty.
                                            The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                            Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                            This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        mismatchLabelKeys:
                                          description: |-
                                            MismatchLabelKeys is a set of pod label keys to select which pods will
                                            be taken into consideration. The keys are used to lookup values from the
                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                            to select the group of existing pods which pods will be taken into consideration
                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                            pod labels will be ignored. The default value is empty.
                                            The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                            Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                            This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        namespaceSelector:
                                          description: |-
                                            A label query over the set of namespaces that the term applies to.
                                            The term is applied to the union of the namespaces selected by this field
                                            and the ones listed in the namespaces field.
                                            null selector and null or empty namespaces list means "this pod's namespace".
                                            An empty selector ({}) matches all namespaces.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: |-
                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                  relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      operator represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      values is an array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. This array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: |-
                                            namespaces specifies a static list of namespace names that the term applies to.
                                            The term is applied to the union of the namespaces listed in this field
                                            and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        topologyKey:
                                          description: |-
                                            This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                            the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                            whose value of the label with key topologyKey matches that of any node on which any of the
                                            selected pods is running.
                                            Empty topologyKey is not allowed.
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                            type: object
                          automountServiceAccountToken:
                            description: AutomountServiceAccountToken indicates whether
                              a service account token should be automatically mounted.
                            type: boolean
                          containers:
                            description: |-
                              List of containers belonging to the pod.
                              Containers cannot currently be added or removed.
                              There must be at least one container in a Pod.
                              Cannot be updated.
                            items:
                              description: A single application container that you
                                want to run within a pod.
                              properties:
                                args:
                                  description: |-
                                    Arguments to the entrypoint.
                                    The container image's CMD is used if this is not provided.
                                    Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                    cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                    to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                    produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Cannot be updated.
                                    More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                command:
                                  description: |-
                                    Entrypoint array. Not executed within a shell.
                                    The container image's ENTRYPOINT is used if this is not provided.
                                    Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                    cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                    to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                    produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Cannot be updated.
                                    More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                env:
                                  description: |-
                                    List of environment variables to set in the container.
                                    Cannot be updated.
                                  items:
                                    description: EnvVar represents an environment
                                      variable present in a Container.
                                    properties:
                                      name:
                                        description: Name of the environment variable.
                                          Must be a C_IDENTIFIER.
                                        type: string
                                      value:
                                        description: |-
                                          Variable references $(VAR_NAME) are expanded
                                          using the previously defined environment variables in the container and
                                          any service environment variables. If a variable cannot be resolved,
                                          the reference in the input string will be unchanged. Double $$ are reduced
                                          to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                          "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                          Escaped references will never be expanded, regardless of whether the variable
                                          exists or not.
                                          Defaults to "".
                                        type: string
                                      valueFrom:
                                        description: Source for the environment variable's
                                          value. Cannot be used if value is not empty.
                                        properties:
                                          configMapKeyRef:
                                            description: Selects a key of a ConfigMap.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          fieldRef:
                                            description: |-
                                              Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                              spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                            properties:
                                              apiVersion:
                                                description: Version of the schema
                                                  the FieldPath is written in terms
                                                  of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to
                                                  select in the specified API version.
                                                type: string
                                            required:
                                            - fieldPath
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          resourceFieldRef:
                                            description: |-
                                              Selects a resource of the container: only resources limits and requests
                                              (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                            properties:
                                              containerName:
                                                description: 'Container name: required
                                                  for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                description: Specifies the output
                                                  format of the exposed resources,
                                                  defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to
                                                  select'
                                                type: string
                                            required:
                                            - resource
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          secretKeyRef:
                                            description: Selects a key of a secret
                                              in the pod's namespace
                                            properties:
                                              key:
                                                description: The key of the secret
                                                  to select from.  Must be a valid
                                                  secret key.
                                                type: string
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        type: object
                                    required:
                                    - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - name
                                  x-kubernetes-list-type: map
                                envFrom:
                                  description: |-
                                    List of sources to populate environment variables in the container.
                                    The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                                    will be reported as an event when the container is starting. When a key exists in multiple
                                    sources, the value associated with the last source will take precedence.
                                    Values defined by an Env with a duplicate key will take precedence.
                                    Cannot be updated.
                                  items:
                                    description: EnvFromSource represents the source
                                      of a set of ConfigMaps
                                    properties:
                                      configMapRef:
                                        description: The ConfigMap to select from
                                        properties:
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              must be defined
                                            type: boolean
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      prefix:
                                        description: An optional identifier to prepend
                                          to each key in the ConfigMap. Must be a
                                          C_IDENTIFIER.
                                        type: string
                                      secretRef:
                                        description: The Secret to select from
                                        properties:
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              must be defined
                                            type: boolean
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                image:
                                  description: |-
                                    Container image name.
                                    More info: https://kubernetes.io/docs/concepts/containers/images
                                    This field is optional to allow higher level config management to default or override
                                    container images in workload controllers like Deployments and StatefulSets.
                                  type: string
                                imagePullPolicy:
                                  description: |-
                                    Image pull policy.
                                    One of Always, Never, IfNotPresent.
                                    Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                                    Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                                  type: string
                                lifecycle:
                                  description: |-
                                    Actions that the management system should take in response to container lifecycle events.
                                    Cannot be updated.
                                  properties:
                                    postStart:
                                      description: |-
                                        PostStart is called immediately after a container is created. If the handler fails,
                                        the container is terminated and restarted according to its restart policy.
                                        Other management of the container blocks until the hook completes.
                                        More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                      properties:
                                        exec:
                                          description: Exec specifies a command to
                                            execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        sleep:
                                          description: Sleep represents a duration
                                            that the container should sleep.
                                          properties:
                                            seconds:
                                              description: Seconds is the number of
                                                seconds to sleep.
                                              format: int64
                                              type: integer
                                          required:
                                          - seconds
                                          type: object
                                        tcpSocket:
                                          description: |-
                                            Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                            for backward compatibility. There is no validation of this field and
                                            lifecycle hooks will fail at runtime when it is specified.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                      type: object
                                    preStop:
                                      description: |-
                                        PreStop is called immediately before a container is terminated due to an
                                        API request or management event such as liveness/startup probe failure,
                                        preemption, resource contention, etc. The handler is not called if the
                                        container crashes or exits. The Pod's termination grace period countdown begins before the
                                        PreStop hook is executed. Regardless of the outcome of the handler, the
                                        container will eventually terminate within the Pod's termination grace
                                        period (unless delayed by finalizers). Other management of the container blocks until the hook completes
                                        or until the termination grace period is reached.
                                        More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                      properties:
                                        exec:
                                          description: Exec specifies a command to
                                            execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        sleep:
                                          description: Sleep represents a duration
                                            that the container should sleep.
                                          properties:
                                            seconds:
                                              description: Seconds is the number of
                                                seconds to sleep.
                                              format: int64
                                              type: integer
                                          required:
                                          - seconds
                                          type: object
                                        tcpSocket:
                                          description: |-
                                            Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                            for backward compatibility. There is no validation of this field and
                                            lifecycle hooks will fail at runtime when it is specified.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                      type: object
                                  type: object
                                livenessProbe:
                                  description: |-
                                    Periodic probe of container liveness.
                                    Container will be restarted if the probe fails.
                                    Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                  properties:
                                    exec:
                                      description: Exec specifies a command to execute
                                        in the container.
                                      properties:
                                        command:
                                          description: |-
                                            Command is the command line to execute inside the container, the working directory for the
                                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                            a shell, you need to explicitly call out to that shell.
                                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    failureThreshold:
                                      description: |-
                                        Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                        Defaults to 3. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies a GRPC HealthCheckRequest.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          default: ""
                                          description: |-
                                            Service is the name of the service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                            If this is not specified, the default behavior is defined by gRPC.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies an HTTP GET request
                                        to perform.
                                      properties:
                                        host:
                                          description: |-
                                            Host name to connect to, defaults to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: |-
                                                  The header field name.
                                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Name or number of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: |-
                                            Scheme to use for connecting to the host.
                                            Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: |-
                                        Number of seconds after the container has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: |-
                                        How often (in seconds) to perform the probe.
                                        Default to 10 seconds. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: |-
                                        Minimum consecutive successes for the probe to be considered successful after having failed.
                                        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies a connection
                                        to a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Number or name of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: |-
                                        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                        The grace period is the duration in seconds after the processes running in the pod are sent
                                        a termination signal and the time when the processes are forcibly halted with a kill signal.
                                        Set this value longer than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                        value overrides the value provided by the pod spec.
                                        Value must be non-negative integer. The value zero indicates stop immediately via
                                        the kill signal (no opportunity to shut down).
                                        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: |-
                                        Number of seconds after which the probe times out.
                                        Defaults to 1 second. Minimum value is 1.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                  type: object
                                name:
                                  description: |-
                                    Name of the container specified as a DNS_LABEL.
                                    Each container in a pod must have a unique name (DNS_LABEL).
                                    Cannot be updated.
                                  type: string
                                ports:
                                  description: |-
                                    List of ports to expose from the container. Not specifying a port here
                                    DOES NOT prevent that port from being exposed. Any port which is
                                    listening on the default "0.0.0.0" address inside a container will be
                                    accessible from the network.
                                    Modifying this array with strategic merge patch may corrupt the data.
                                    For more information See https://github.com/kubernetes/kubernetes/issues/108255.
                                    Cannot be updated.
                                  items:
                                    description: ContainerPort represents a network
                                      port in a single container.
                                    properties:
                                      containerPort:
                                        description: |-
                                          Number of port to expose on the pod's IP address.
                                          This must be a valid port number, 0 < x < 65536.
                                        format: int32
                                        type: integer
                                      hostIP:
                                        description: What host IP to bind the external
                                          port to.
                                        type: string
                                      hostPort:
                                        description: |-
                                          Number of port to expose on the host.
                                          If specified, this must be a valid port number, 0 < x < 65536.
                                          If HostNetwork is specified, this must match ContainerPort.
                                          Most containers do not need this.
                                        format: int32
                                        type: integer
                                      name:
                                        description: |-
                                          If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                                          named port in a pod must have a unique name. Name for the port that can be
                                          referred to by services.
                                        type: string
                                      protocol:
                                        default: TCP
                                        description: |-
                                          Protocol for port. Must be UDP, TCP, or SCTP.
                                          Defaults to "TCP".
                                        type: string
                                    required:
                                    - containerPort
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - containerPort
                                  - protocol
                                  x-kubernetes-list-type: map
                                readinessProbe:
                                  description: |-
                                    Periodic probe of container service readiness.
                                    Container will be removed from service endpoints if the probe fails.
                                    Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                  properties:
                                    exec:
                                      description: Exec specifies a command to execute
                                        in the container.
                                      properties:
                                        command:
                                          description: |-
                                            Command is the command line to execute inside the container, the working directory for the
                                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                            a shell, you need to explicitly call out to that shell.
                                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    failureThreshold:
                                      description: |-
                                        Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                        Defaults to 3. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies a GRPC HealthCheckRequest.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          default: ""
                                          description: |-
                                            Service is the name of the service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                            If this is not specified, the default behavior is defined by gRPC.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies an HTTP GET request
                                        to perform.
                                      properties:
                                        host:
                                          description: |-
                                            Host name to connect to, defaults to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: |-
                                                  The header field name.
                                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Name or number of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: |-
                                            Scheme to use for connecting to the host.
                                            Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: |-
                                        Number of seconds after the container has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: |-
                                        How often (in seconds) to perform the probe.
                                        Default to 10 seconds. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: |-
                                        Minimum consecutive successes for the probe to be considered successful after having failed.
                                        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies a connection
                                        to a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Number or name of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: |-
                                        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                        The grace period is the duration in seconds after the processes running in the pod are sent
                                        a termination signal and the time when the processes are forcibly halted with a kill signal.
                                        Set this value longer than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                        value overrides the value provided by the pod spec.
                                        Value must be non-negative integer. The value zero indicates stop immediately via
                                        the kill signal (no opportunity to shut down).
                                        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: |-
                                        Number of seconds after which the probe times out.
                                        Defaults to 1 second. Minimum value is 1.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                  type: object
                                resizePolicy:
                                  description: Resources resize policy for the container.
                                  items:
                                    description: ContainerResizePolicy represents
                                      resource resize policy for the container.
                                    properties:
                                      resourceName:
                                        description: |-
                                          Name of the resource to which this resource resize policy applies.
                                          Supported values: cpu, memory.
                                        type: string
                                      restartPolicy:
                                        description: |-
                                          Restart policy to apply when specified resource is resized.
                                          If not specified, it defaults to NotRequired.
                                        type: string
                                    required:
                                    - resourceName
                                    - restartPolicy
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                resources:
                                  description: |-
                                    Compute Resources required by this container.
                                    Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                  properties:
                                    claims:
                                      description: |-
                                        Claims lists the names of resources, defined in spec.resourceClaims,
                                        that are used by this container.

                                        This is an alpha field and requires enabling the
                                        DynamicResourceAllocation feature gate.

                                        This field is immutable. It can only be set for containers.
                                      items:
                                        description: ResourceClaim references one
                                          entry in PodSpec.ResourceClaims.
                                        properties:
                                          name:
                                            description: |-
                                              Name must match the name of one entry in pod.spec.resourceClaims of
                                              the Pod where this field is used. It makes that resource available
                                              inside a container.
                                            type: string
                                          request:
                                            description: |-
                                              Request is the name chosen for a request in the referenced claim.
                                              If empty, everything from the claim is made available, otherwise
                                              only the result of this request.
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    limits:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: |-
                                        Limits describes the maximum amount of compute resources allowed.
                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                      type: object
                                    requests:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: |-
                                        Requests describes the minimum amount of compute resources required.
                                        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                        otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                      type: object
                                  type: object
                                restartPolicy:
                                  description: |-
                                    RestartPolicy defines the restart behavior of individual containers in a pod.
                                    This field may only be set for init containers, and the only allowed value is "Always".
                                    For non-init containers or when this field is not specified,
                                    the restart behavior is defined by the Pod's restart policy and the container type.
                                    Setting the RestartPolicy as "Always" for the init container will have the following effect:
                                    this init container will be continually restarted on
                                    exit until all regular containers have terminated. Once all regular
                                    containers have completed, all init containers with restartPolicy "Always"
                                    will be shut down. This lifecycle differs from normal init containers and
                                    is often referred to as a "sidecar" container. Although this init
                                    container still starts in the init container sequence, it does not wait
                                    for the container to complete before proceeding to the next init
                                    container. Instead, the next init container starts immediately after this
                                    init container is started, or after any startupProbe has successfully
                                    completed.
                                  type: string
                                securityContext:
                                  description: |-
                                    SecurityContext defines the security options the container should be run with.
                                    If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
                                    More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
                                  properties:
                                    allowPrivilegeEscalation:
                                      description: |-
                                        AllowPrivilegeEscalation controls whether a process can gain more
                                        privileges than its parent process. This bool directly controls if
                                        the no_new_privs flag will be set on the container process.
                                        AllowPrivilegeEscalation is true always when the container is:
                                        1) run as Privileged
                                        2) has CAP_SYS_ADMIN
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: boolean
                                    appArmorProfile:
                                      description: |-
                                        appArmorProfile is the AppArmor options to use by this container. If set, this profile
                                        overrides the pod's appArmorProfile.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        localhostProfile:
                                          description: |-
                                            localhostProfile indicates a profile loaded on the node that should be used.
                                            The profile must be preconfigured on the node to work.
                                            Must match the loaded name of the profile.
                                            Must be set if and only if type is "Localhost".
                                          type: string
                                        type:
                                          description: |-
                                            type indicates which kind of AppArmor profile will be applied.
                                            Valid options are:
                                              Localhost - a profile pre-loaded on the node.
                                              RuntimeDefault - the container runtime's default profile.
                                              Unconfined - no AppArmor enforcement.
                                          type: string
                                      required:
                                      - type
                                      type: object
                                    capabilities:
                                      description: |-
                                        The capabilities to add/drop when running containers.
                                        Defaults to the default set of capabilities granted by the container runtime.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        add:
                                          description: Added capabilities
                                          items:
                                            description: Capability represent POSIX
                                              capabilities type
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        drop:
                                          description: Removed capabilities
                                          items:
                                            description: Capability represent POSIX
                                              capabilities type
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    privileged:
                                      description: |-
                                        Run container in privileged mode.
                                        Processes in privileged containers are essentially equivalent to root on the host.
                                        Defaults to false.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: boolean
                                    procMount:
                                      description: |-
                                        procMount denotes the type of proc mount to use for the containers.
                                        The default value is Default which uses the container runtime defaults for
                                        readonly paths and masked paths.
                                        This requires the ProcMountType feature flag to be enabled.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: string
                                    readOnlyRootFilesystem:
                                      description: |-
                                        Whether this container has a read-only root filesystem.
                                        Default is false.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: boolean
                                    runAsGroup:
                                      description: |-
                                        The GID to run the entrypoint of the container process.
                                        Uses runtime default if unset.
                                        May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      format: int64
                                      type: integer
                                    runAsNonRoot:
                                      description: |-
                                        Indicates that the container must run as a non-root user.
                                        If true, the Kubelet will validate the image at runtime to ensure that it
                                        does not run as UID 0 (root) and fail to start the container if it does.
                                        If unset or false, no such validation will be performed.
                                        May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                      type: boolean
                                    runAsUser:
                                      description: |-
                                        The UID to run the entrypoint of the container process.
                                        Defaults to user specified in image metadata if unspecified.
                                        May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      format: int64
                                      type: integer
                                    seLinuxOptions:
                                      description: |-
                                        The SELinux context to be applied to the container.
                                        If unspecified, the container runtime will allocate a random SELinux context for each
                                        container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        level:
                                          description: Level is SELinux level label
                                            that applies to the container.
                                          type: string
                                        role:
                                          description: Role is a SELinux role label
                                            that applies to the container.
                                          type: string
                                        type:
                                          description: Type is a SELinux type label
                                            that applies to the container.
                                          type: string
                                        user:
                                          description: User is a SELinux user label
                                            that applies to the container.
                                          type: string
                                      type: object
                                    seccompProfile:
                                      description: |-
                                        The seccomp options to use by this container. If seccomp options are
                                        provided at both the pod & container level, the container options
                                        override the pod options.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        localhostProfile:
                                          description: |-
                                            localhostProfile indicates a profile defined in a file on the node should be used.
                                            The profile must be preconfigured on the node to work.
                                            Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                            Must be set if type is "Localhost". Must NOT be set for any other type.
                                          type: string
                                        type:
                                          description: |-
                                            type indicates which kind of seccomp profile will be applied.
                                            Valid options are:

                                            Localhost - a profile defined in a file on the node should be used.
                                            RuntimeDefault - the container runtime default profile should be used.
                                            Unconfined - no profile should be applied.
                                          type: string
                                      required:
                                      - type
                                      type: object
                                    windowsOptions:
                                      description: |-
                                        The Windows specific settings applied to all containers.
                                        If unspecified, the options from the PodSecurityContext will be used.
                                        If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is linux.
                                      properties:
                                        gmsaCredentialSpec:
                                          description: |-
                                            GMSACredentialSpec is where the GMSA admission webhook
                                            (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                            GMSA credential spec named by the GMSACredentialSpecName field.
                                          type: string
                                        gmsaCredentialSpecName:
                                          description: GMSACredentialSpecName is the
                                            name of the GMSA credential spec to use.
                                          type: string
                                        hostProcess:
                                          description: |-
                                            HostProcess determines if a container should be run as a 'Host Process' container.
                                            All of a Pod's containers must have the same effective HostProcess value
                                            (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                            In addition, if HostProcess is true then HostNetwork must also be set to true.
                                          type: boolean
                                        runAsUserName:
                                          description: |-
                                            The UserName in Windows to run the entrypoint of the container process.
                                            Defaults to the user specified in image metadata if unspecified.
                                            May also be set in PodSecurityContext. If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                          type: string
                                      type: object
                                  type: object
                                startupProbe:
                                  description: |-
                                    StartupProbe indicates that the Pod has successfully initialized.
                                    If specified, no other probes are executed until this completes successfully.
                                    If this probe fails, the Pod will be restarted, just as if the livenessProbe failed.
                                    This can be used to provide different probe parameters at the beginning of a Pod's lifecycle,
                                    when it might take a long time to load data or warm a cache, than during steady-state operation.
                                    This cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                  properties:
                                    exec:
                                      description: Exec specifies a command to execute
                                        in the container.
                                      properties:
                                        command:
                                          description: |-
                                            Command is the command line to execute inside the container, the working directory for the
                                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                            a shell, you need to explicitly call out to that shell.
                                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    failureThreshold:
                                      description: |-
                                        Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                        Defaults to 3. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies a GRPC HealthCheckRequest.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          default: ""
                                          description: |-
                                            Service is the name of the service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                            If this is not specified, the default behavior is defined by gRPC.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies an HTTP GET request
                                        to perform.
                                      properties:
                                        host:
                                          description: |-
                                            Host name to connect to, defaults to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: |-
                                                  The header field name.
                                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Name or number of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: |-
                                            Scheme to use for connecting to the host.
                                            Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: |-
                                        Number of seconds after the container has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: |-
                                        How often (in seconds) to perform the probe.
                                        Default to 10 seconds. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: |-
                                        Minimum consecutive successes for the probe to be considered successful after having failed.
                                        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies a connection
                                        to a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Number or name of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: |-
                                        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                        The grace period is the duration in seconds after the processes running in the pod are sent
                                        a termination signal and the time when the processes are forcibly halted with a kill signal.
                                        Set this value longer than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                        value overrides the value provided by the pod spec.
                                        Value must be non-negative integer. The value zero indicates stop immediately via
                                        the kill signal (no opportunity to shut down).
                                        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: |-
                                        Number of seconds after which the probe times out.
                                        Defaults to 1 second. Minimum value is 1.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                  type: object
                                stdin:
                                  description: |-
                                    Whether this container should allocate a buffer for stdin in the container runtime. If this
                                    is not set, reads from stdin in the container will always result in EOF.
                                    Default is false.
                                  type: boolean
                                stdinOnce:
                                  description: |-
                                    Whether the container runtime should close the stdin channel after it has been opened by
                                    a single attach. When stdin is true the stdin stream will remain open across multiple attach
                                    sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
                                    first client attaches to stdin, and then remains open and accepts data until the client disconnects,
                                    at which time stdin is closed and remains closed until the container is restarted. If this
                                    flag is false, a container processes that reads from stdin will never receive an EOF.
                                    Default is false
                                  type: boolean
                                terminationMessagePath:
                                  description: |-
                                    Optional: Path at which the file to which the container's termination message
                                    will be written is mounted into the container's filesystem.
                                    Message written is intended to be brief final status, such as an assertion failure message.
                                    Will be truncated by the node if greater than 4096 bytes. The total message length across
                                    all containers will be limited to 12kb.
                                    Defaults to /dev/termination-log.
                                    Cannot be updated.
                                  type: string
                                terminationMessagePolicy:
                                  description: |-
                                    Indicate how the termination message should be populated. File will use the contents of
                                    terminationMessagePath to populate the container status message on both success and failure.
                                    FallbackToLogsOnError will use the last chunk of container log output if the termination
                                    message file is empty and the container exited with an error.
                                    The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
                                    Defaults to File.
                                    Cannot be updated.
                                  type: string
                                tty:
                                  description: |-
                                    Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
                                    Default is false.
                                  type: boolean
                                volumeDevices:
                                  description: volumeDevices is the list of block
                                    devices to be used by the container.
                                  items:
                                    description: volumeDevice describes a mapping
                                      of a raw block device within a container.
                                    properties:
                                      devicePath:
                                        description: devicePath is the path inside
                                          of the container that the device will be
                                          mapped to.
                                        type: string
                                      name:
                                        description: name must match the name of a
                                          persistentVolumeClaim in the pod
                                        type: string
                                    required:
                                    - devicePath
                                    - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - devicePath
                                  x-kubernetes-list-type: map
                                volumeMounts:
                                  description: |-
                                    Pod volumes to mount into the container's filesystem.
                                    Cannot be updated.
                                  items:
                                    description: VolumeMount describes a mounting
                                      of a Volume within a container.
                                    properties:
                                      mountPath:
                                        description: |-
                                          Path within the container at which the volume should be mounted.  Must
                                          not contain ':'.
                                        type: string
                                      mountPropagation:
                                        description: |-
                                          mountPropagation determines how mounts are propagated from the host
                                          to container and the other way around.
                                          When not set, MountPropagationNone is used.
                                          This field is beta in 1.10.
                                          When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                                          (which defaults to None).
                                        type: string
                                      name:
                                        description: This must match the Name of a
                                          Volume.
                                        type: string
                                      readOnly:
                                        description: |-
                                          Mounted read-only if true, read-write otherwise (false or unspecified).
                                          Defaults to false.
                                        type: boolean
                                      recursiveReadOnly:
                                        description: |-
                                          RecursiveReadOnly specifies whether read-only mounts should be handled
                                          recursively.

                                          If ReadOnly is false, this field has no meaning and must be unspecified.

                                          If ReadOnly is true, and this field is set to Disabled, the mount is not made
                                          recursively read-only.  If this field is set to IfPossible, the mount is made
                                          recursively read-only, if it is supported by the container runtime.  If this
                                          field is set to Enabled, the mount is made recursively read-only if it is
                                          supported by the container runtime, otherwise the pod will not be started and
                                          an error will be generated to indicate the reason.

                                          If this field is set to IfPossible or Enabled, MountPropagation must be set to
                                          None (or be unspecified, which defaults to None).

                                          If this field is not specified, it is treated as an equivalent of Disabled.
                                        type: string
                                      subPath:
                                        description: |-
                                          Path within the volume from which the container's volume should be mounted.
                                          Defaults to "" (volume's root).
                                        type: string
                                      subPathExpr:
                                        description: |-
                                          Expanded path within the volume from which the container's volume should be mounted.
                                          Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                          Defaults to "" (volume's root).
                                          SubPathExpr and SubPath are mutually exclusive.
                                        type: string
                                    required:
                                    - mountPath
                                    - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - mountPath
                                  x-kubernetes-list-type: map
                                workingDir:
                                  description: |-
                                    Container's working directory.
                                    If not specified, the container runtime's default will be used, which
                                    might be configured in the container image.
                                    Cannot be updated.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          dnsConfig:
                            description: |-
                              Specifies the DNS parameters of a pod.
                              Parameters specified here will be merged to the generated DNS
                              configuration based on DNSPolicy.
                            properties:
                              nameservers:
                                description: |-
                                  A list of DNS name server IP addresses.
                                  This will be appended to the base nameservers generated from DNSPolicy.
                                  Duplicated nameservers will be removed.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                              options:
                                description: |-
                                  A list of DNS resolver options.
                                  This will be merged with the base options generated from DNSPolicy.
                                  Duplicated entries will be removed. Resolution options given in Options
                                  will override those that appear in the base DNSPolicy.
                                items:
                                  description: PodDNSConfigOption defines DNS resolver
                                    options of a pod.
                                  properties:
                                    name:
                                      description: |-
                                        Name is this DNS resolver option's name.
                                        Required.
                                      type: string
                                    value:
                                      description: Value is this DNS resolver option's
                                        value.
                                      type: string
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              searches:
                                description: |-
                                  A list of DNS search domains for host-name lookup.
                                  This will be appended to the base search paths generated from DNSPolicy.
                                  Duplicated search paths will be removed.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                          dnsPolicy:
                            description: |-
                              Set DNS policy for the pod.
                              Defaults to "ClusterFirst".
                              Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'.
                              DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.
                              To have DNS options set along with hostNetwork, you have to specify DNS policy
                              explicitly to 'ClusterFirstWithHostNet'.
                            type: string
                          enableServiceLinks:
                            description: |-
                              EnableServiceLinks indicates whether information about services should be injected into pod's
                              environment variables, matching the syntax of Docker links.
                              Optional: Defaults to true.
                            type: boolean
                          ephemeralContainers:
                            description: |-
                              List of ephemeral containers run in this pod. Ephemeral containers may be run in an existing
                              pod to perform user-initiated actions such as debugging. This list cannot be specified when
                              creating a pod, and it cannot be modified by updating the pod spec. In order to add an
                              ephemeral container to an existing pod, use the pod's ephemeralcontainers subresource.
                            items:
                              description: |-
                                An EphemeralContainer is a temporary container that you may add to an existing Pod for
                                user-initiated activities such as debugging. Ephemeral containers have no resource or
                                scheduling guarantees, and they will not be restarted when they exit or when a Pod is
                                removed or restarted. The kubelet may evict a Pod if an ephemeral container causes the
                                Pod to exceed its resource allocation.

                                To add an ephemeral container, use the ephemeralcontainers subresource of an existing
                                Pod. Ephemeral containers may not be removed or restarted.
                              properties:
                                args:
                                  description: |-
                                    Arguments to the entrypoint.
                                    The image's CMD is used if this is not provided.
                                    Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                    cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                    to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                    produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Cannot be updated.
                                    More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                command:
                                  description: |-
                                    Entrypoint array. Not executed within a shell.
                                    The image's ENTRYPOINT is used if this is not provided.
                                    Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                    cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                    to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                    produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Cannot be updated.
                                    More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                env:
                                  description: |-
                                    List of environment variables to set in the container.
                                    Cannot be updated.
                                  items:
                                    description: EnvVar represents an environment
                                      variable present in a Container.
                                    properties:
                                      name:
                                        description: Name of the environment variable.
                                          Must be a C_IDENTIFIER.
                                        type: string
                                      value:
                                        description: |-
                                          Variable references $(VAR_NAME) are expanded
                                          using the previously defined environment variables in the container and
                                          any service environment variables. If a variable cannot be resolved,
                                          the reference in the input string will be unchanged. Double $$ are reduced
                                          to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                          "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                          Escaped references will never be expanded, regardless of whether the variable
                                          exists or not.
                                          Defaults to "".
                                        type: string
                                      valueFrom:
                                        description: Source for the environment variable's
                                          value. Cannot be used if value is not empty.
                                        properties:
                                          configMapKeyRef:
                                            description: Selects a key of a ConfigMap.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          fieldRef:
                                            description: |-
                                              Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                              spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                            properties:
                                              apiVersion:
                                                description: Version of the schema
                                                  the FieldPath is written in terms
                                                  of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to
                                                  select in the specified API version.
                                                type: string
                                            required:
                                            - fieldPath
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          resourceFieldRef:
                                            description: |-
                                              Selects a resource of the container: only resources limits and requests
                                              (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                            properties:
                                              containerName:
                                                description: 'Container name: required
                                                  for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                description: Specifies the output
                                                  format of the exposed resources,
                                                  defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to
                                                  select'
                                                type: string
                                            required:
                                            - resource
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          secretKeyRef:
                                            description: Selects a key of a secret
                                              in the pod's namespace
                                            properties:
                                              key:
                                                description: The key of the secret
                                                  to select from.  Must be a valid
                                                  secret key.
                                                type: string
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        type: object
                                    required:
                                    - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - name
                                  x-kubernetes-list-type: map
                                envFrom:
                                  description: |-
                                    List of sources to populate environment variables in the container.
                                    The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                                    will be reported as an event when the container is starting. When a key exists in multiple
                                    sources, the value associated with the last source will take precedence.
                                    Values defined by an Env with a duplicate key will take precedence.
                                    Cannot be updated.
                                  items:
                                    description: EnvFromSource represents the source
                                      of a set of ConfigMaps
                                    properties:
                                      configMapRef:
                                        description: The ConfigMap to select from
                                        properties:
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              must be defined
                                            type: boolean
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      prefix:
                                        description: An optional identifier to prepend
                                          to each key in the ConfigMap. Must be a
                                          C_IDENTIFIER.
                                        type: string
                                      secretRef:
                                        description: The Secret to select from
                                        properties:
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              must be defined
                                            type: boolean
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                image:
                                  description: |-
                                    Container image name.
                                    More info: https://kubernetes.io/docs/concepts/containers/images
                                  type: string
                                imagePullPolicy:
                                  description: |-
                                    Image pull policy.
                                    One of Always, Never, IfNotPresent.
                                    Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                                    Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                                  type: string
                                lifecycle:
                                  description: Lifecycle is not allowed for ephemeral
                                    containers.
                                  properties:
                                    postStart:
                                      description: |-
                                        PostStart is called immediately after a container is created. If the handler fails,
                                        the container is terminated and restarted according to its restart policy.
                                        Other management of the container blocks until the hook completes.
                                        More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                      properties:
                                        exec:
                                          description: Exec specifies a command to
                                            execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        sleep:
                                          description: Sleep represents a duration
                                            that the container should sleep.
                                          properties:
                                            seconds:
                                              description: Seconds is the number of
                                                seconds to sleep.
                                              format: int64
                                              type: integer
                                          required:
                                          - seconds
                                          type: object
                                        tcpSocket:
                                          description: |-
                                            Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                            for backward compatibility. There is no validation of this field and
                                            lifecycle hooks will fail at runtime when it is specified.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                      type: object
                                    preStop:
                                      description: |-
                                        PreStop is called immediately before a container is terminated due to an
                                        API request or management event such as liveness/startup probe failure,
                                        preemption, resource contention, etc. The handler is not called if the
                                        container crashes or exits. The Pod's termination grace period countdown begins before the
                                        PreStop hook is executed. Regardless of the outcome of the handler, the
                                        container will eventually terminate within the Pod's termination grace
                                        period (unless delayed by finalizers). Other management of the container blocks until the hook completes
                                        or until the termination grace period is reached.
                                        More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                      properties:
                                        exec:
                                          description: Exec specifies a command to
                                            execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        sleep:
                                          description: Sleep represents a duration
                                            that the container should sleep.
                                          properties:
                                            seconds:
                                              description: Seconds is the number of
                                                seconds to sleep.
                                              format: int64
                                              type: integer
                                          required:
                                          - seconds
                                          type: object
                                        tcpSocket:
                                          description: |-
                                            Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                            for backward compatibility. There is no validation of this field and
                                            lifecycle hooks will fail at runtime when it is specified.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                      type: object
                                  type: object
                                livenessProbe:
                                  description: Probes are not allowed for ephemeral
                                    containers.
                                  properties:
                                    exec:
                                      description: Exec specifies a command to execute
                                        in the container.
                                      properties:
                                        command:
                                          description: |-
                                            Command is the command line to execute inside the container, the working directory for the
                                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                            a shell, you need to explicitly call out to that shell.
                                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    failureThreshold:
                                      description: |-
                                        Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                        Defaults to 3. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies a GRPC HealthCheckRequest.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          default: ""
                                          description: |-
                                            Service is the name of the service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                            If this is not specified, the default behavior is defined by gRPC.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies an HTTP GET request
                                        to perform.
                                      properties:
                                        host:
                                          description: |-
                                            Host name to connect to, defaults to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: |-
                                                  The header field name.
                                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Name or number of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: |-
                                            Scheme to use for connecting to the host.
                                            Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: |-
                                        Number of seconds after the container has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: |-
                                        How often (in seconds) to perform the probe.
                                        Default to 10 seconds. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: |-
                                        Minimum consecutive successes for the probe to be considered successful after having failed.
                                        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies a connection
                                        to a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Number or name of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: |-
                                        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                        The grace period is the duration in seconds after the processes running in the pod are sent
                                        a termination signal and the time when the processes are forcibly halted with a kill signal.
                                        Set this value longer than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                        value overrides the value provided by the pod spec.
                                        Value must be non-negative integer. The value zero indicates stop immediately via
                                        the kill signal (no opportunity to shut down).
                                        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: |-
                                        Number of seconds after which the probe times out.
                                        Defaults to 1 second. Minimum value is 1.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                  type: object
                                name:
                                  description: |-
                                    Name of the ephemeral container specified as a DNS_LABEL.
                                    This name must be unique among all containers, init containers and ephemeral containers.
                                  type: string
                                ports:
                                  description: Ports are not allowed for ephemeral
                                    containers.
                                  items:
                                    description: ContainerPort represents a network
                                      port in a single container.
                                    properties:
                                      containerPort:
                                        description: |-
                                          Number of port to expose on the pod's IP address.
                                          This must be a valid port number, 0 < x < 65536.
                                        format: int32
                                        type: integer
                                      hostIP:
                                        description: What host IP to bind the external
                                          port to.
                                        type: string
                                      hostPort:
                                        description: |-
                                          Number of port to expose on the host.
                                          If specified, this must be a valid port number, 0 < x < 65536.
                                          If HostNetwork is specified, this must match ContainerPort.
                                          Most containers do not need this.
                                        format: int32
                                        type: integer
                                      name:
                                        description: |-
                                          If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                                          named port in a pod must have a unique name. Name for the port that can be
                                          referred to by services.
                                        type: string
                                      protocol:
                                        default: TCP
                                        description: |-
                                          Protocol for port. Must be UDP, TCP, or SCTP.
                                          Defaults to "TCP".
                                        type: string
                                    required:
                                    - containerPort
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - containerPort
                                  - protocol
                                  x-kubernetes-list-type: map
                                readinessProbe:
                                  description: Probes are not allowed for ephemeral
                                    containers.
                                  properties:
                                    exec:
                                      description: Exec specifies a command to execute
                                        in the container.
                                      properties:
                                        command:
                                          description: |-
                                            Command is the command line to execute inside the container, the working directory for the
                                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                            a shell, you need to explicitly call out to that shell.
                                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    failureThreshold:
                                      description: |-
                                        Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                        Defaults to 3. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies a GRPC HealthCheckRequest.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          default: ""
                                          description: |-
                                            Service is the name of the service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                            If this is not specified, the default behavior is defined by gRPC.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies an HTTP GET request
                                        to perform.
                                      properties:
                                        host:
                                          description: |-
                                            Host name to connect to, defaults to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: |-
                                                  The header field name.
                                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Name or number of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: |-
                                            Scheme to use for connecting to the host.
                                            Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: |-
                                        Number of seconds after the container has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: |-
                                        How often (in seconds) to perform the probe.
                                        Default to 10 seconds. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: |-
                                        Minimum consecutive successes for the probe to be considered successful after having failed.
                                        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies a connection
                                        to a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Number or name of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: |-
                                        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                        The grace period is the duration in seconds after the processes running in the pod are sent
                                        a termination signal and the time when the processes are forcibly halted with a kill signal.
                                        Set this value longer than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                        value overrides the value provided by the pod spec.
                                        Value must be non-negative integer. The value zero indicates stop immediately via
                                        the kill signal (no opportunity to shut down).
                                        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: |-
                                        Number of seconds after which the probe times out.
                                        Defaults to 1 second. Minimum value is 1.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                  type: object
                                resizePolicy:
                                  description: Resources resize policy for the container.
                                  items:
                                    description: ContainerResizePolicy represents
                                      resource resize policy for the container.
                                    properties:
                                      resourceName:
                                        description: |-
                                          Name of the resource to which this resource resize policy applies.
                                          Supported values: cpu, memory.
                                        type: string
                                      restartPolicy:
                                        description: |-
                                          Restart policy to apply when specified resource is resized.
                                          If not specified, it defaults to NotRequired.
                                        type: string
                                    required:
                                    - resourceName
                                    - restartPolicy
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                resources:
                                  description: |-
                                    Resources are not allowed for ephemeral containers. Ephemeral containers use spare resources
                                    already allocated to the pod.
                                  properties:
                                    claims:
                                      description: |-
                                        Claims lists the names of resources, defined in spec.resourceClaims,
                                        that are used by this container.

                                        This is an alpha field and requires enabling the
                                        DynamicResourceAllocation feature gate.

                                        This field is immutable. It can only be set for containers.
                                      items:
                                        description: ResourceClaim references one
                                          entry in PodSpec.ResourceClaims.
                                        properties:
                                          name:
                                            description: |-
                                              Name must match the name of one entry in pod.spec.resourceClaims of
                                              the Pod where this field is used. It makes that resource available
                                              inside a container.
                                            type: string
                                          request:
                                            description: |-
                                              Request is the name chosen for a request in the referenced claim.
                                              If empty, everything from the claim is made available, otherwise
                                              only the result of this request.
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    limits:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: |-
                                        Limits describes the maximum amount of compute resources allowed.
                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                      type: object
                                    requests:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: |-
                                        Requests describes the minimum amount of compute resources required.
                                        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                        otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                      type: object
                                  type: object
                                restartPolicy:
                                  description: |-
                                    Restart policy for the container to manage the restart behavior of each
                                    container within a pod.
                                    This may only be set for init containers. You cannot set this field on
                                    ephemeral containers.
                                  type: string
                                securityContext:
                                  description: |-
                                    Optional: SecurityContext defines the security options the ephemeral container should be run with.
                                    If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
                                  properties:
                                    allowPrivilegeEscalation:
                                      description: |-
                                        AllowPrivilegeEscalation controls whether a process can gain more
                                        privileges than its parent process. This bool directly controls if
                                        the no_new_privs flag will be set on the container process.
                                        AllowPrivilegeEscalation is true always when the container is:
                                        1) run as Privileged
                                        2) has CAP_SYS_ADMIN
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: boolean
                                    appArmorProfile:
                                      description: |-
                                        appArmorProfile is the AppArmor options to use by this container. If set, this profile
                                        overrides the pod's appArmorProfile.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        localhostProfile:
                                          description: |-
                                            localhostProfile indicates a profile loaded on the node that should be used.
                                            The profile must be preconfigured on the node to work.
                                            Must match the loaded name of the profile.
                                            Must be set if and only if type is "Localhost".
                                          type: string
                                        type:
                                          description: |-
                                            type indicates which kind of AppArmor profile will be applied.
                                            Valid options are:
                                              Localhost - a profile pre-loaded on the node.
                                              RuntimeDefault - the container runtime's default profile.
                                              Unconfined - no AppArmor enforcement.
                                          type: string
                                      required:
                                      - type
                                      type: object
                                    capabilities:
                                      description: |-
                                        The capabilities to add/drop when running containers.
                                        Defaults to the default set of capabilities granted by the container runtime.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        add:
                                          description: Added capabilities
                                          items:
                                            description: Capability represent POSIX
                                              capabilities type
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        drop:
                                          description: Removed capabilities
                                          items:
                                            description: Capability represent POSIX
                                              capabilities type
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    privileged:
                                      description: |-
                                        Run container in privileged mode.
                                        Processes in privileged containers are essentially equivalent to root on the host.
                                        Defaults to false.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: boolean
                                    procMount:
                                      description: |-
                                        procMount denotes the type of proc mount to use for the containers.
                                        The default value is Default which uses the container runtime defaults for
                                        readonly paths and masked paths.
                                        This requires the ProcMountType feature flag to be enabled.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: string
                                    readOnlyRootFilesystem:
                                      description: |-
                                        Whether this container has a read-only root filesystem.
                                        Default is false.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: boolean
                                    runAsGroup:
                                      description: |-
                                        The GID to run the entrypoint of the container process.
                                        Uses runtime default if unset.
                                        May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      format: int64
                                      type: integer
                                    runAsNonRoot:
                                      description: |-
                                        Indicates that the container must run as a non-root user.
                                        If true, the Kubelet will validate the image at runtime to ensure that it
                                        does not run as UID 0 (root) and fail to start the container if it does.
                                        If unset or false, no such validation will be performed.
                                        May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                      type: boolean
                                    runAsUser:
                                      description: |-
                                        The UID to run the entrypoint of the container process.
                                        Defaults to user specified in image metadata if unspecified.
                                        May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      format: int64
                                      type: integer
                                    seLinuxOptions:
                                      description: |-
                                        The SELinux context to be applied to the container.
                                        If unspecified, the container runtime will allocate a random SELinux context for each
                                        container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        level:
                                          description: Level is SELinux level label
                                            that applies to the container.
                                          type: string
                                        role:
                                          description: Role is a SELinux role label
                                            that applies to the container.
                                          type: string
                                        type:
                                          description: Type is a SELinux type label
                                            that applies to the container.
                                          type: string
                                        user:
                                          description: User is a SELinux user label
                                            that applies to the container.
                                          type: string
                                      type: object
                                    seccompProfile:
                                      description: |-
                                        The seccomp options to use by this container. If seccomp options are
                                        provided at both the pod & container level, the container options
                                        override the pod options.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        localhostProfile:
                                          description: |-
                                            localhostProfile indicates a profile defined in a file on the node should be used.
                                            The profile must be preconfigured on the node to work.
                                            Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                            Must be set if type is "Localhost". Must NOT be set for any other type.
                                          type: string
                                        type:
                                          description: |-
                                            type indicates which kind of seccomp profile will be applied.
                                            Valid options are:

                                            Localhost - a profile defined in a file on the node should be used.
                                            RuntimeDefault - the container runtime default profile should be used.
                                            Unconfined - no profile should be applied.
                                          type: string
                                      required:
                                      - type
                                      type: object
                                    windowsOptions:
                                      description: |-
                                        The Windows specific settings applied to all containers.
                                        If unspecified, the options from the PodSecurityContext will be used.
                                        If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is linux.
                                      properties:
                                        gmsaCredentialSpec:
                                          description: |-
                                            GMSACredentialSpec is where the GMSA admission webhook
                                            (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                            GMSA credential spec named by the GMSACredentialSpecName field.
                                          type: string
                                        gmsaCredentialSpecName:
                                          description: GMSACredentialSpecName is the
                                            name of the GMSA credential spec to use.
                                          type: string
                                        hostProcess:
                                          description: |-
                                            HostProcess determines if a container should be run as a 'Host Process' container.
                                            All of a Pod's containers must have the same effective HostProcess value
                                            (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                            In addition, if HostProcess is true then HostNetwork must also be set to true.
                                          type: boolean
                                        runAsUserName:
                                          description: |-
                                            The UserName in Windows to run the entrypoint of the container process.
                                            Defaults to the user specified in image metadata if unspecified.
                                            May also be set in PodSecurityContext. If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                          type: string
                                      type: object
                                  type: object
                                startupProbe:
                                  description: Probes are not allowed for ephemeral
                                    containers.
                                  properties:
                                    exec:
                                      description: Exec specifies a command to execute
                                        in the container.
                                      properties:
                                        command:
                                          description: |-
                                            Command is the command line to execute inside the container, the working directory for the
                                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                            a shell, you need to explicitly call out to that shell.
                                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    failureThreshold:
                                      description: |-
                                        Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                        Defaults to 3. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies a GRPC HealthCheckRequest.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          default: ""
                                          description: |-
                                            Service is the name of the service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                            If this is not specified, the default behavior is defined by gRPC.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies an HTTP GET request
                                        to perform.
                                      properties:
                                        host:
                                          description: |-
                                            Host name to connect to, defaults to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: |-
                                                  The header field name.
                                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Name or number of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: |-
                                            Scheme to use for connecting to the host.
                                            Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: |-
                                        Number of seconds after the container has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: |-
                                        How often (in seconds) to perform the probe.
                                        Default to 10 seconds. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: |-
                                        Minimum consecutive successes for the probe to be considered successful after having failed.
                                        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies a connection
                                        to a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Number or name of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: |-
                                        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                        The grace period is the duration in seconds after the processes running in the pod are sent
                                        a termination signal and the time when the processes are forcibly halted with a kill signal.
                                        Set this value longer than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                        value overrides the value provided by the pod spec.
                                        Value must be non-negative integer. The value zero indicates stop immediately via
                                        the kill signal (no opportunity to shut down).
                                        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: |-
                                        Number of seconds after which the probe times out.
                                        Defaults to 1 second. Minimum value is 1.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                  type: object
                                stdin:
                                  description: |-
                                    Whether this container should allocate a buffer for stdin in the container runtime. If this
                                    is not set, reads from stdin in the container will always result in EOF.
                                    Default is false.
                                  type: boolean
                                stdinOnce:
                                  description: |-
                                    Whether the container runtime should close the stdin channel after it has been opened by
                                    a single attach. When stdin is true the stdin stream will remain open across multiple attach
                                    sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
                                    first client attaches to stdin, and then remains open and accepts data until the client disconnects,
                                    at which time stdin is closed and remains closed until the container is restarted. If this
                                    flag is false, a container processes that reads from stdin will never receive an EOF.
                                    Default is false
                                  type: boolean
                                targetContainerName:
                                  description: |-
                                    If set, the name of the container from PodSpec that this ephemeral container targets.
                                    The ephemeral container will be run in the namespaces (IPC, PID, etc) of this container.
                                    If not set then the ephemeral container uses the namespaces configured in the Pod spec.

                                    The container runtime must implement support for this feature. If the runtime does not
                                    support namespace targeting then the result of setting this field is undefined.
                                  type: string
                                terminationMessagePath:
                                  description: |-
                                    Optional: Path at which the file to which the container's termination message
                                    will be written is mounted into the container's filesystem.
                                    Message written is intended to be brief final status, such as an assertion failure message.
                                    Will be truncated by the node if greater than 4096 bytes. The total message length across
                                    all containers will be limited to 12kb.
                                    Defaults to /dev/termination-log.
                                    Cannot be updated.
                                  type: string
                                terminationMessagePolicy:
                                  description: |-
                                    Indicate how the termination message should be populated. File will use the contents of
                                    terminationMessagePath to populate the container status message on both success and failure.
                                    FallbackToLogsOnError will use the last chunk of container log output if the termination
                                    message file is empty and the container exited with an error.
                                    The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
                                    Defaults to File.
                                    Cannot be updated.
                                  type: string
                                tty:
                                  description: |-
                                    Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
                                    Default is false.
                                  type: boolean
                                volumeDevices:
                                  description: volumeDevices is the list of block
                                    devices to be used by the container.
                                  items:
                                    description: volumeDevice describes a mapping
                                      of a raw block device within a container.
                                    properties:
                                      devicePath:
                                        description: devicePath is the path inside
                                          of the container that the device will be
                                          mapped to.
                                        type: string
                                      name:
                                        description: name must match the name of a
                                          persistentVolumeClaim in the pod
                                        type: string
                                    required:
                                    - devicePath
                                    - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - devicePath
                                  x-kubernetes-list-type: map
                                volumeMounts:
                                  description: |-
                                    Pod volumes to mount into the container's filesystem. Subpath mounts are not allowed for ephemeral containers.
                                    Cannot be updated.
                                  items:
                                    description: VolumeMount describes a mounting
                                      of a Volume within a container.
                                    properties:
                                      mountPath:
                                        description: |-
                                          Path within the container at which the volume should be mounted.  Must
                                          not contain ':'.
                                        type: string
                                      mountPropagation:
                                        description: |-
                                          mountPropagation determines how mounts are propagated from the host
                                          to container and the other way around.
                                          When not set, MountPropagationNone is used.
                                          This field is beta in 1.10.
                                          When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                                          (which defaults to None).
                                        type: string
                                      name:
                                        description: This must match the Name of a
                                          Volume.
                                        type: string
                                      readOnly:
                                        description: |-
                                          Mounted read-only if true, read-write otherwise (false or unspecified).
                                          Defaults to false.
                                        type: boolean
                                      recursiveReadOnly:
                                        description: |-
                                          RecursiveReadOnly specifies whether read-only mounts should be handled
                                          recursively.

                                          If ReadOnly is false, this field has no meaning and must be unspecified.

                                          If ReadOnly is true, and this field is set to Disabled, the mount is not made
                                          recursively read-only.  If this field is set to IfPossible, the mount is made
                                          recursively read-only, if it is supported by the container runtime.  If this
                                          field is set to Enabled, the mount is made recursively read-only if it is
                                          supported by the container runtime, otherwise the pod will not be started and
                                          an error will be generated to indicate the reason.

                                          If this field is set to IfPossible or Enabled, MountPropagation must be set to
                                          None (or be unspecified, which defaults to None).

                                          If this field is not specified, it is treated as an equivalent of Disabled.
                                        type: string
                                      subPath:
                                        description: |-
                                          Path within the volume from which the container's volume should be mounted.
                                          Defaults to "" (volume's root).
                                        type: string
                                      subPathExpr:
                                        description: |-
                                          Expanded path within the volume from which the container's volume should be mounted.
                                          Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                          Defaults to "" (volume's root).
                                          SubPathExpr and SubPath are mutually exclusive.
                                        type: string
                                    required:
                                    - mountPath
                                    - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - mountPath
                                  x-kubernetes-list-type: map
                                workingDir:
                                  description: |-
                                    Container's working directory.
                                    If not specified, the container runtime's default will be used, which
                                    might be configured in the container image.
                                    Cannot be updated.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          hostAliases:
                            description: |-
                              HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts
                              file if specified.
                            items:
                              description: |-
                                HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                                pod's hosts file.
                              properties:
                                hostnames:
                                  description: Hostnames for the above IP address.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                ip:
                                  description: IP address of the host file entry.
                                  type: string
                              required:
                              - ip
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - ip
                            x-kubernetes-list-type: map
                          hostIPC:
                            description: |-
                              Use the host's ipc namespace.
                              Optional: Default to false.
                            type: boolean
                          hostNetwork:
                            description: |-
                              Host networking requested for this pod. Use the host's network namespace.
                              If this option is set, the ports that will be used must be specified.
                              Default to false.
                            type: boolean
                          hostPID:
                            description: |-
                              Use the host's pid namespace.
                              Optional: Default to false.
                            type: boolean
                          hostUsers:
                            description: |-
                              Use the host's user namespace.
                              Optional: Default to true.
                              If set to true or not present, the pod will be run in the host user namespace, useful
                              for when the pod needs a feature only available to the host user namespace, such as
                              loading a kernel module with CAP_SYS_MODULE.
                              When set to false, a new userns is created for the pod. Setting false is useful for
                              mitigating container breakout vulnerabilities even allowing users to run their
                              containers as root without actually having root privileges on the host.
                              This field is alpha-level and is only honored by servers that enable the UserNamespacesSupport feature.
                            type: boolean
                          hostname:
                            description: |-
                              Specifies the hostname of the Pod
                              If not specified, the pod's hostname will be set to a system-defined value.
                            type: string
                          imagePullSecrets:
                            description: |-
                              ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.
                              If specified, these secrets will be passed to individual puller implementations for them to use.
                              More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod
                            items:
                              description: |-
                                LocalObjectReference contains enough information to let you locate the
                                referenced object inside the same namespace.
                              properties:
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          initContainers:
                            description: |-
                              List of initialization containers belonging to the pod.
                              Init containers are executed in order prior to containers being started. If any
                              init container fails, the pod is considered to have failed and is handled according
                              to its restartPolicy. The name for an init container or normal container must be
                              unique among all containers.
                              Init containers may not have Lifecycle actions, Readiness probes, Liveness probes, or Startup probes.
                              The resourceRequirements of an init container are taken into account during scheduling
                              by finding the highest request/limit for each resource type, and then using the max of
                              of that value or the sum of the normal containers. Limits are applied to init containers
                              in a similar fashion.
                              Init containers cannot currently be added or removed.
                              Cannot be updated.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
                            items:
                              description: A single application container that you
                                want to run within a pod.
                              properties:
                                args:
                                  description: |-
                                    Arguments to the entrypoint.
                                    The container image's CMD is used if this is not provided.
                                    Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                    cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                    to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                    produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Cannot be updated.
                                    More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                command:
                                  description: |-
                                    Entrypoint array. Not executed within a shell.
                                    The container image's ENTRYPOINT is used if this is not provided.
                                    Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                    cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                    to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                    produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Cannot be updated.
                                    More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                env:
                                  description: |-
                                    List of environment variables to set in the container.
                                    Cannot be updated.
                                  items:
                                    description: EnvVar represents an environment
                                      variable present in a Container.
                                    properties:
                                      name:
                                        description: Name of the environment variable.
                                          Must be a C_IDENTIFIER.
                                        type: string
                                      value:
                                        description: |-
                                          Variable references $(VAR_NAME) are expanded
                                          using the previously defined environment variables in the container and
                                          any service environment variables. If a variable cannot be resolved,
                                          the reference in the input string will be unchanged. Double $$ are reduced
                                          to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                          "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                          Escaped references will never be expanded, regardless of whether the variable
                                          exists or not.
                                          Defaults to "".
                                        type: string
                                      valueFrom:
                                        description: Source for the environment variable's
                                          value. Cannot be used if value is not empty.
                                        properties:
                                          configMapKeyRef:
                                            description: Selects a key of a ConfigMap.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          fieldRef:
                                            description: |-
                                              Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                              spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                            properties:
                                              apiVersion:
                                                description: Version of the schema
                                                  the FieldPath is written in terms
                                                  of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to
                                                  select in the specified API version.
                                                type: string
                                            required:
                                            - fieldPath
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          resourceFieldRef:
                                            description: |-
                                              Selects a resource of the container: only resources limits and requests
                                              (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                            properties:
                                              containerName:
                                                description: 'Container name: required
                                                  for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                description: Specifies the output
                                                  format of the exposed resources,
                                                  defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to
                                                  select'
                                                type: string
                                            required:
                                            - resource
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          secretKeyRef:
                                            description: Selects a key of a secret
                                              in the pod's namespace
                                            properties:
                                              key:
                                                description: The key of the secret
                                                  to select from.  Must be a valid
                                                  secret key.
                                                type: string
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        type: object
                                    required:
                                    - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - name
                                  x-kubernetes-list-type: map
                                envFrom:
                                  description: |-
                                    List of sources to populate environment variables in the container.
                                    The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                                    will be reported as an event when the container is starting. When a key exists in multiple
                                    sources, the value associated with the last source will take precedence.
                                    Values defined by an Env with a duplicate key will take precedence.
                                    Cannot be updated.
                                  items:
                                    description: EnvFromSource represents the source
                                      of a set of ConfigMaps
                                    properties:
                                      configMapRef:
                                        description: The ConfigMap to select from
                                        properties:
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              must be defined
                                            type: boolean
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      prefix:
                                        description: An optional identifier to prepend
                                          to each key in the ConfigMap. Must be a
                                          C_IDENTIFIER.
                                        type: string
                                      secretRef:
                                        description: The Secret to select from
                                        properties:
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              must be defined
                                            type: boolean
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                image:
                                  description: |-
                                    Container image name.
                                    More info: https://kubernetes.io/docs/concepts/containers/images
                                    This field is optional to allow higher level config management to default or override
                                    container images in workload controllers like Deployments and StatefulSets.
                                  type: string
                                imagePullPolicy:
                                  description: |-
                                    Image pull policy.
                                    One of Always, Never, IfNotPresent.
                                    Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                                    Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                                  type: string
                                lifecycle:
                                  description: |-
                                    Actions that the management system should take in response to container lifecycle events.
                                    Cannot be updated.
                                  properties:
                                    postStart:
                                      description: |-
                                        PostStart is called immediately after a container is created. If the handler fails,
                                        the container is terminated and restarted according to its restart policy.
                                        Other management of the container blocks until the hook completes.
                                        More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                      properties:
                                        exec:
                                          description: Exec specifies a command to
                                            execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        sleep:
                                          description: Sleep represents a duration
                                            that the container should sleep.
                                          properties:
                                            seconds:
                                              description: Seconds is the number of
                                                seconds to sleep.
                                              format: int64
                                              type: integer
                                          required:
                                          - seconds
                                          type: object
                                        tcpSocket:
                                          description: |-
                                            Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                            for backward compatibility. There is no validation of this field and
                                            lifecycle hooks will fail at runtime when it is specified.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                      type: object
                                    preStop:
                                      description: |-
                                        PreStop is called immediately before a container is terminated due to an
                                        API request or management event such as liveness/startup probe failure,
                                        preemption, resource contention, etc. The handler is not called if the
                                        container crashes or exits. The Pod's termination grace period countdown begins before the
                                        PreStop hook is executed. Regardless of the outcome of the handler, the
                                        container will eventually terminate within the Pod's termination grace
                                        period (unless delayed by finalizers). Other management of the container blocks until the hook completes
                                        or until the termination grace period is reached.
                                        More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                      properties:
                                        exec:
                                          description: Exec specifies a command to
                                            execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        sleep:
                                          description: Sleep represents a duration
                                            that the container should sleep.
                                          properties:
                                            seconds:
                                              description: Seconds is the number of
                                                seconds to sleep.
                                              format: int64
                                              type: integer
                                          required:
                                          - seconds
                                          type: object
                                        tcpSocket:
                                          description: |-
                                            Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                            for backward compatibility. There is no validation of this field and
                                            lifecycle hooks will fail at runtime when it is specified.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                      type: object
                                  type: object
                                livenessProbe:
                                  description: |-
                                    Periodic probe of container liveness.
                                    Container will be restarted if the probe fails.
                                    Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                  properties:
                                    exec:
                                      description: Exec specifies a command to execute
                                        in the container.
                                      properties:
                                        command:
                                          description: |-
                                            Command is the command line to execute inside the container, the working directory for the
                                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                            a shell, you need to explicitly call out to that shell.
                                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    failureThreshold:
                                      description: |-
                                        Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                        Defaults to 3. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies a GRPC HealthCheckRequest.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          default: ""
                                          description: |-
                                            Service is the name of the service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                            If this is not specified, the default behavior is defined by gRPC.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies an HTTP GET request
                                        to perform.
                                      properties:
                                        host:
                                          description: |-
                                            Host name to connect to, defaults to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: |-
                                                  The header field name.
                                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Name or number of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: |-
                                            Scheme to use for connecting to the host.
                                            Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: |-
                                        Number of seconds after the container has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: |-
                                        How often (in seconds) to perform the probe.
                                        Default to 10 seconds. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: |-
                                        Minimum consecutive successes for the probe to be considered successful after having failed.
                                        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies a connection
                                        to a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Number or name of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: |-
                                        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                        The grace period is the duration in seconds after the processes running in the pod are sent
                                        a termination signal and the time when the processes are forcibly halted with a kill signal.
                                        Set this value longer than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                        value overrides the value provided by the pod spec.
                                        Value must be non-negative integer. The value zero indicates stop immediately via
                                        the kill signal (no opportunity to shut down).
                                        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: |-
                                        Number of seconds after which the probe times out.
                                        Defaults to 1 second. Minimum value is 1.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                  type: object
                                name:
                                  description: |-
                                    Name of the container specified as a DNS_LABEL.
                                    Each container in a pod must have a unique name (DNS_LABEL).
                                    Cannot be updated.
                                  type: string
                                ports:
                                  description: |-
                                    List of ports to expose from the container. Not specifying a port here
                                    DOES NOT prevent that port from being exposed. Any port which is
                                    listening on the default "0.0.0.0" address inside a container will be
                                    accessible from the network.
                                    Modifying this array with strategic merge patch may corrupt the data.
                                    For more information See https://github.com/kubernetes/kubernetes/issues/108255.
                                    Cannot be updated.
                                  items:
                                    description: ContainerPort represents a network
                                      port in a single container.
                                    properties:
                                      containerPort:
                                        description: |-
                                          Number of port to expose on the pod's IP address.
                                          This must be a valid port number, 0 < x < 65536.
                                        format: int32
                                        type: integer
                                      hostIP:
                                        description: What host IP to bind the external
                                          port to.
                                        type: string
                                      hostPort:
                                        description: |-
                                          Number of port to expose on the host.
                                          If specified, this must be a valid port number, 0 < x < 65536.
                                          If HostNetwork is specified, this must match ContainerPort.
                                          Most containers do not need this.
                                        format: int32
                                        type: integer
                                      name:
                                        description: |-
                                          If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                                          named port in a pod must have a unique name. Name for the port that can be
                                          referred to by services.
                                        type: string
                                      protocol:
                                        default: TCP
                                        description: |-
                                          Protocol for port. Must be UDP, TCP, or SCTP.
                                          Defaults to "TCP".
                                        type: string
                                    required:
                                    - containerPort
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - containerPort
                                  - protocol
                                  x-kubernetes-list-type: map
                                readinessProbe:
                                  description: |-
                                    Periodic probe of container service readiness.
                                    Container will be removed from service endpoints if the probe fails.
                                    Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                  properties:
                                    exec:
                                      description: Exec specifies a command to execute
                                        in the container.
                                      properties:
                                        command:
                                          description: |-
                                            Command is the command line to execute inside the container, the working directory for the
                                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                            a shell, you need to explicitly call out to that shell.
                                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    failureThreshold:
                                      description: |-
                                        Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                        Defaults to 3. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies a GRPC HealthCheckRequest.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          default: ""
                                          description: |-
                                            Service is the name of the service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                            If this is not specified, the default behavior is defined by gRPC.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies an HTTP GET request
                                        to perform.
                                      properties:
                                        host:
                                          description: |-
                                            Host name to connect to, defaults to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: |-
                                                  The header field name.
                                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Name or number of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: |-
                                            Scheme to use for connecting to the host.
                                            Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: |-
                                        Number of seconds after the container has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: |-
                                        How often (in seconds) to perform the probe.
                                        Default to 10 seconds. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: |-
                                        Minimum consecutive successes for the probe to be considered successful after having failed.
                                        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies a connection
                                        to a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Number or name of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: |-
                                        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                        The grace period is the duration in seconds after the processes running in the pod are sent
                                        a termination signal and the time when the processes are forcibly halted with a kill signal.
                                        Set this value longer than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                        value overrides the value provided by the pod spec.
                                        Value must be non-negative integer. The value zero indicates stop immediately via
                                        the kill signal (no opportunity to shut down).
                                        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: |-
                                        Number of seconds after which the probe times out.
                                        Defaults to 1 second. Minimum value is 1.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                  type: object
                                resizePolicy:
                                  description: Resources resize policy for the container.
                                  items:
                                    description: ContainerResizePolicy represents
                                      resource resize policy for the container.
                                    properties:
                                      resourceName:
                                        description: |-
                                          Name of the resource to which this resource resize policy applies.
                                          Supported values: cpu, memory.
                                        type: string
                                      restartPolicy:
                                        description: |-
                                          Restart policy to apply when specified resource is resized.
                                          If not specified, it defaults to NotRequired.
                                        type: string
                                    required:
                                    - resourceName
                                    - restartPolicy
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                resources:
                                  description: |-
                                    Compute Resources required by this container.
                                    Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                  properties:
                                    claims:
                                      description: |-
                                        Claims lists the names of resources, defined in spec.resourceClaims,
                                        that are used by this container.

                                        This is an alpha field and requires enabling the
                                        DynamicResourceAllocation feature gate.

                                        This field is immutable. It can only be set for containers.
                                      items:
                                        description: ResourceClaim references one
                                          entry in PodSpec.ResourceClaims.
                                        properties:
                                          name:
                                            description: |-
                                              Name must match the name of one entry in pod.spec.resourceClaims of
                                              the Pod where this field is used. It makes that resource available
                                              inside a container.
                                            type: string
                                          request:
                                            description: |-
                                              Request is the name chosen for a request in the referenced claim.
                                              If empty, everything from the claim is made available, otherwise
                                              only the result of this request.
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    limits:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: |-
                                        Limits describes the maximum amount of compute resources allowed.
                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                      type: object
                                    requests:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: |-
                                        Requests describes the minimum amount of compute resources required.
                                        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                        otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                      type: object
                                  type: object
                                restartPolicy:
                                  description: |-
                                    RestartPolicy defines the restart behavior of individual containers in a pod.
                                    This field may only be set for init containers, and the only allowed value is "Always".
                                    For non-init containers or when this field is not specified,
                                    the restart behavior is defined by the Pod's restart policy and the container type.
                                    Setting the RestartPolicy as "Always" for the init container will have the following effect:
                                    this init container will be continually restarted on
                                    exit until all regular containers have terminated. Once all regular
                                    containers have completed, all init containers with restartPolicy "Always"
                                    will be shut down. This lifecycle differs from normal init containers and
                                    is often referred to as a "sidecar" container. Although this init
                                    container still starts in the init container sequence, it does not wait
                                    for the container to complete before proceeding to the next init
                                    container. Instead, the next init container starts immediately after this
                                    init container is started, or after any startupProbe has successfully
                                    completed.
                                  type: string
                                securityContext:
                                  description: |-
                                    SecurityContext defines the security options the container should be run with.
                                    If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
                                    More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
                                  properties:
                                    allowPrivilegeEscalation:
                                      description: |-
                                        AllowPrivilegeEscalation controls whether a process can gain more
                                        privileges than its parent process. This bool directly controls if
                                        the no_new_privs flag will be set on the container process.
                                        AllowPrivilegeEscalation is true always when the container is:
                                        1) run as Privileged
                                        2) has CAP_SYS_ADMIN
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: boolean
                                    appArmorProfile:
                                      description: |-
                                        appArmorProfile is the AppArmor options to use by this container. If set, this profile
                                        overrides the pod's appArmorProfile.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        localhostProfile:
                                          description: |-
                                            localhostProfile indicates a profile loaded on the node that should be used.
                                            The profile must be preconfigured on the node to work.
                                            Must match the loaded name of the profile.
                                            Must be set if and only if type is "Localhost".
                                          type: string
                                        type:
                                          description: |-
                                            type indicates which kind of AppArmor profile will be applied.
                                            Valid options are:
                                              Localhost - a profile pre-loaded on the node.
                                              RuntimeDefault - the container runtime's default profile.
                                              Unconfined - no AppArmor enforcement.
                                          type: string
                                      required:
                                      - type
                                      type: object
                                    capabilities:
                                      description: |-
                                        The capabilities to add/drop when running containers.
                                        Defaults to the default set of capabilities granted by the container runtime.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        add:
                                          description: Added capabilities
                                          items:
                                            description: Capability represent POSIX
                                              capabilities type
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        drop:
                                          description: Removed capabilities
                                          items:
                                            description: Capability represent POSIX
                                              capabilities type
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    privileged:
                                      description: |-
                                        Run container in privileged mode.
                                        Processes in privileged containers are essentially equivalent to root on the host.
                                        Defaults to false.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: boolean
                                    procMount:
                                      description: |-
                                        procMount denotes the type of proc mount to use for the containers.
                                        The default value is Default which uses the container runtime defaults for
                                        readonly paths and masked paths.
                                        This requires the ProcMountType feature flag to be enabled.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: string
                                    readOnlyRootFilesystem:
                                      description: |-
                                        Whether this container has a read-only root filesystem.
                                        Default is false.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: boolean
                                    runAsGroup:
                                      description: |-
                                        The GID to run the entrypoint of the container process.
                                        Uses runtime default if unset.
                                        May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      format: int64
                                      type: integer
                                    runAsNonRoot:
                                      description: |-
                                        Indicates that the container must run as a non-root user.
                                        If true, the Kubelet will validate the image at runtime to ensure that it
                                        does not run as UID 0 (root) and fail to start the container if it does.
                                        If unset or false, no such validation will be performed.
                                        May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                      type: boolean
                                    runAsUser:
                                      description: |-
                                        The UID to run the entrypoint of the container process.
                                        Defaults to user specified in image metadata if unspecified.
                                        May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      format: int64
                                      type: integer
                                    seLinuxOptions:
                                      description: |-
                                        The SELinux context to be applied to the container.
                                        If unspecified, the container runtime will allocate a random SELinux context for each
                                        container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        level:
                                          description: Level is SELinux level label
                                            that applies to the container.
                                          type: string
                                        role:
                                          description: Role is a SELinux role label
                                            that applies to the container.
                                          type: string
                                        type:
                                          description: Type is a SELinux type label
                                            that applies to the container.
                                          type: string
                                        user:
                                          description: User is a SELinux user label
                                            that applies to the container.
                                          type: string
                                      type: object
                                    seccompProfile:
                                      description: |-
                                        The seccomp options to use by this container. If seccomp options are
                                        provided at both the pod & container level, the container options
                                        override the pod options.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        localhostProfile:
                                          description: |-
                                            localhostProfile indicates a profile defined in a file on the node should be used.
                                            The profile must be preconfigured on the node to work.
                                            Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                            Must be set if type is "Localhost". Must NOT be set for any other type.
                                          type: string
                                        type:
                                          description: |-
                                            type indicates which kind of seccomp profile will be applied.
                                            Valid options are:

                                            Localhost - a profile defined in a file on the node should be used.
                                            RuntimeDefault - the container runtime default profile should be used.
                                            Unconfined - no profile should be applied.
                                          type: string
                                      required:
                                      - type
                                      type: object
                                    windowsOptions:
                                      description: |-
                                        The Windows specific settings applied to all containers.
                                        If unspecified, the options from the PodSecurityContext will be used.
                                        If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is linux.
                                      properties:
                                        gmsaCredentialSpec:
                                          description: |-
                                            GMSACredentialSpec is where the GMSA admission webhook
                                            (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                            GMSA credential spec named by the GMSACredentialSpecName field.
                                          type: string
                                        gmsaCredentialSpecName:
                                          description: GMSACredentialSpecName is the
                                            name of the GMSA credential spec to use.
                                          type: string
                                        hostProcess:
                                          description: |-
                                            HostProcess determines if a container should be run as a 'Host Process' container.
                                            All of a Pod's containers must have the same effective HostProcess value
                                            (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                            In addition, if HostProcess is true then HostNetwork must also be set to true.
                                          type: boolean
                                        runAsUserName:
                                          description: |-
                                            The UserName in Windows to run the entrypoint of the container process.
                                            Defaults to the user specified in image metadata if unspecified.
                                            May also be set in PodSecurityContext. If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                          type: string
                                      type: object
                                  type: object
                                startupProbe:
                                  description: |-
                                    StartupProbe indicates that the Pod has successfully initialized.
                                    If specified, no other probes are executed until this completes successfully.
                                    If this probe fails, the Pod will be restarted, just as if the livenessProbe failed.
                                    This can be used to provide different probe parameters at the beginning of a Pod's lifecycle,
                                    when it might take a long time to load data or warm a cache, than during steady-state operation.
                                    This cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                  properties:
                                    exec:
                                      description: Exec specifies a command to execute
                                        in the container.
                                      properties:
                                        command:
                                          description: |-
                                            Command is the command line to execute inside the container, the working directory for the
                                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                            a shell, you need to explicitly call out to that shell.
                                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    failureThreshold:
                                      description: |-
                                        Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                        Defaults to 3. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies a GRPC HealthCheckRequest.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          default: ""
                                          description: |-
                                            Service is the name of the service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                            If this is not specified, the default behavior is defined by gRPC.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies an HTTP GET request
                                        to perform.
                                      properties:
                                        host:
                                          description: |-
                                            Host name to connect to, defaults to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: |-
                                                  The header field name.
                                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Name or number of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: |-
                                            Scheme to use for connecting to the host.
                                            Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: |-
                                        Number of seconds after the container has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: |-
                                        How often (in seconds) to perform the probe.
                                        Default to 10 seconds. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: |-
                                        Minimum consecutive successes for the probe to be considered successful after having failed.
                                        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies a connection
                                        to a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            Number or name of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: |-
                                        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                        The grace period is the duration in seconds after the processes running in the pod are sent
                                        a termination signal and the time when the processes are forcibly halted with a kill signal.
                                        Set this value longer than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                        value overrides the value provided by the pod spec.
                                        Value must be non-negative integer. The value zero indicates stop immediately via
                                        the kill signal (no opportunity to shut down).
                                        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: |-
                                        Number of seconds after which the probe times out.
                                        Defaults to 1 second. Minimum value is 1.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                  type: object
                                stdin:
                                  description: |-
                                    Whether this container should allocate a buffer for stdin in the container runtime. If this
                                    is not set, reads from stdin in the container will always result in EOF.
                                    Default is false.
                                  type: boolean
                                stdinOnce:
                                  description: |-
                                    Whether the container runtime should close the stdin channel after it has been opened by
                                    a single attach. When stdin is true the stdin stream will remain open across multiple attach
                                    sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
                                    first client attaches to stdin, and then remains open and accepts data until the client disconnects,
                                    at which time stdin is closed and remains closed until the container is restarted. If this
                                    flag is false, a container processes that reads from stdin will never receive an EOF.
                                    Default is false
                                  type: boolean
                                terminationMessagePath:
                                  description: |-
                                    Optional: Path at which the file to which the container's termination message
                                    will be written is mounted into the container's filesystem.
                                    Message written is intended to be brief final status, such as an assertion failure message.
                                    Will be truncated by the node if greater than 4096 bytes. The total message length across
                                    all containers will be limited to 12kb.
                                    Defaults to /dev/termination-log.
                                    Cannot be updated.
                                  type: string
                                terminationMessagePolicy:
                                  description: |-
                                    Indicate how the termination message should be populated. File will use the contents of
                                    terminationMessagePath to populate the container status message on both success and failure.
                                    FallbackToLogsOnError will use the last chunk of container log output if the termination
                                    message file is empty and the container exited with an error.
                                    The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
                                    Defaults to File.
                                    Cannot be updated.
                                  type: string
                                tty:
                                  description: |-
                                    Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
                                    Default is false.
                                  type: boolean
                                volumeDevices:
                                  description: volumeDevices is the list of block
                                    devices to be used by the container.
                                  items:
                                    description: volumeDevice describes a mapping
                                      of a raw block device within a container.
                                    properties:
                                      devicePath:
                                        description: devicePath is the path inside
                                          of the container that the device will be
                                          mapped to.
                                        type: string
                                      name:
                                        description: name must match the name of a
                                          persistentVolumeClaim in the pod
                                        type: string
                                    required:
                                    - devicePath
                                    - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - devicePath
                                  x-kubernetes-list-type: map
                                volumeMounts:
                                  description: |-
                                    Pod volumes to mount into the container's filesystem.
                                    Cannot be updated.
                                  items:
                                    description: VolumeMount describes a mounting
                                      of a Volume within a container.
                                    properties:
                                      mountPath:
                                        description: |-
                                          Path within the container at which the volume should be mounted.  Must
                                          not contain ':'.
                                        type: string
                                      mountPropagation:
                                        description: |-
                                          mountPropagation determines how mounts are propagated from the host
                                          to container and the other way around.
                                          When not set, MountPropagationNone is used.
                                          This field is beta in 1.10.
                                          When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                                          (which defaults to None).
                                        type: string
                                      name:
                                        description: This must match the Name of a
                                          Volume.
                                        type: string
                                      readOnly:
                                        description: |-
                                          Mounted read-only if true, read-write otherwise (false or unspecified).
                                          Defaults to false.
                                        type: boolean
                                      recursiveReadOnly:
                                        description: |-
                                          RecursiveReadOnly specifies whether read-only mounts should be handled
                                          recursively.

                                          If ReadOnly is false, this field has no meaning and must be unspecified.

                                          If ReadOnly is true, and this field is set to Disabled, the mount is not made
                                          recursively read-only.  If this field is set to IfPossible, the mount is made
                                          recursively read-only, if it is supported by the container runtime.  If this
                                          field is set to Enabled, the mount is made recursively read-only if it is
                                          supported by the container runtime, otherwise the pod will not be started and
                                          an error will be generated to indicate the reason.

                                          If this field is set to IfPossible or Enabled, MountPropagation must be set to
                                          None (or be unspecified, which defaults to None).

                                          If this field is not specified, it is treated as an equivalent of Disabled.
                                        type: string
                                      subPath:
                                        description: |-
                                          Path within the volume from which the container's volume should be mounted.
                                          Defaults to "" (volume's root).
                                        type: string
                                      subPathExpr:
                                        description: |-
                                          Expanded path within the volume from which the container's volume should be mounted.
                                          Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                          Defaults to "" (volume's root).
                                          SubPathExpr and SubPath are mutually exclusive.
                                        type: string
                                    required:
                                    - mountPath
                                    - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - mountPath
                                  x-kubernetes-list-type: map
                                workingDir:
                                  description: |-
                                    Container's working directory.
                                    If not specified, the container runtime's default will be used, which
                                    might be configured in the container image.
                                    Cannot be updated.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          nodeName:
                            description: |-
                              NodeName indicates in which node this pod is scheduled.
                              If empty, this pod is a candidate for scheduling by the scheduler defined in schedulerName.
                              Once this field is set, the kubelet for this node becomes responsible for the lifecycle of this pod.
                              This field should not be used to express a desire for the pod to be scheduled on a specific node.
                              https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodename
                            type: string
                          nodeSelector:
                            additionalProperties:
                              type: string
                            description: |-
                              NodeSelector is a selector which must be true for the pod to fit on a node.
                              Selector which must match a node's labels for the pod to be scheduled on that node.
                              More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                            type: object
                            x-kubernetes-map-type: atomic
                          os:
                            description: |-
                              Specifies the OS of the containers in the pod.
                              Some pod and container fields are restricted if this is set.

                              If the OS field is set to linux, the following fields must be unset:
                              -securityContext.windowsOptions

                              If the OS field is set to windows, following fields must be unset:
                              - spec.hostPID
                              - spec.hostIPC
                              - spec.hostUsers
                              - spec.securityContext.appArmorProfile
                              - spec.securityContext.seLinuxOptions
                              - spec.securityContext.seccompProfile
                              - spec.securityContext.fsGroup
                              - spec.securityContext.fsGroupChangePolicy
                              - spec.securityContext.sysctls
                              - spec.shareProcessNamespace
                              - spec.securityContext.runAsUser
                              - spec.securityContext.runAsGroup
                              - spec.securityContext.supplementalGroups
                              - spec.securityContext.supplementalGroupsPolicy
                              - spec.containers[*].securityContext.appArmorProfile
                              - spec.containers[*].securityContext.seLinuxOptions
                              - spec.containers[*].securityContext.seccompProfile
                              - spec.containers[*].securityContext.capabilities
                              - spec.containers[*].securityContext.readOnlyRootFilesystem
                              - spec.containers[*].securityContext.privileged
                              - spec.containers[*].securityContext.allowPrivilegeEscalation
                              - spec.containers[*].securityContext.procMount
                              - spec.containers[*].securityContext.runAsUser
                              - spec.containers[*].securityContext.runAsGroup
                            properties:
                              name:
                                description: |-
                                  Name is the name of the operating system. The currently supported values are linux and windows.
                                  Additional value may be defined in future and can be one of:
                                  https://github.com/opencontainers/runtime-spec/blob/master/config.md#platform-specific-configuration
                                  Clients should expect to handle additional values and treat unrecognized values in this field as os: null
                                type: string
                            required:
                            - name
                            type: object
                          overhead:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Overhead represents the resource overhead associated with running a pod for a given RuntimeClass.
                              This field will be autopopulated at admission time by the RuntimeClass admission controller. If
                              the RuntimeClass admission controller is enabled, overhead must not be set in Pod create requests.
                              The RuntimeClass admission controller will reject Pod create requests which have the overhead already
                              set. If RuntimeClass is configured and selected in the PodSpec, Overhead will be set to the value
                              defined in the corresponding RuntimeClass, otherwise it will remain unset and treated as zero.
                              More info: https://git.k8s.io/enhancements/keps/sig-node/688-pod-overhead/README.md
                            type: object
                          preemptionPolicy:
                            description: |-
                              PreemptionPolicy is the Policy for preempting pods with lower priority.
                              One of Never, PreemptLowerPriority.
                              Defaults to PreemptLowerPriority if unset.
                            type: string
                          priority:
                            description: |-
                              The priority value. Various system components use this field to find the
                              priority of the pod. When Priority Admission Controller is enabled, it
                              prevents users from setting this field. The admission controller populates
                              this field from PriorityClassName.
                              The higher the value, the higher the priority.
                            format: int32
                            type: integer
                          priorityClassName:
                            description: |-
                              If specified, indicates the pod's priority. "system-node-critical" and
                              "system-cluster-critical" are two special keywords which indicate the
                              highest priorities with the former being the highest priority. Any other
                              name must be defined by creating a PriorityClass object with that name.
                              If not specified, the pod priority will be default or zero if there is no
                              default.
                            type: string
                          readinessGates:
                            description: |-
                              If specified, all readiness gates will be evaluated for pod readiness.
                              A pod is ready when all its containers are ready AND
                              all conditions specified in the readiness gates have status equal to "True"
                              More info: https://git.k8s.io/enhancements/keps/sig-network/580-pod-readiness-gates
                            items:
                              description: PodReadinessGate contains the reference
                                to a pod condition
                              properties:
                                conditionType:
                                  description: ConditionType refers to a condition
                                    in the pod's condition list with matching type.
                                  type: string
                              required:
                              - conditionType
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          resourceClaims:
                            description: |-
                              ResourceClaims defines which ResourceClaims must be allocated
                              and reserved before the Pod is allowed to start. The resources
                              will be made available to those containers which consume them
                              by name.

                              This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate.

                              This field is immutable.
                            items:
                              description: |-
                                PodResourceClaim references exactly one ResourceClaim, either directly
                                or by naming a ResourceClaimTemplate which is then turned into a ResourceClaim
                                for the pod.

                                It adds a name to it that uniquely identifies the ResourceClaim inside the Pod.
                                Containers that need access to the ResourceClaim reference it with this name.
                              properties:
                                name:
                                  description: |-
                                    Name uniquely identifies this resource claim inside the pod.
                                    This must be a DNS_LABEL.
                                  type: string
                                resourceClaimName:
                                  description: |-
                                    ResourceClaimName is the name of a ResourceClaim object in the same
                                    namespace as this pod.

                                    Exactly one of ResourceClaimName and ResourceClaimTemplateName must
                                    be set.
                                  type: string
                                resourceClaimTemplateName:
                                  description: |-
                                    ResourceClaimTemplateName is the name of a ResourceClaimTemplate
                                    object in the same namespace as this pod.

                                    The template will be used to create a new ResourceClaim, which will
                                    be bound to this pod. When this pod is deleted, the ResourceClaim
                                    will also be deleted. The pod name and resource name, along with a
                                    generated component, will be used to form a unique name for the
                                    ResourceClaim, which will be recorded in pod.status.resourceClaimStatuses.

                                    This field is immutable and no changes will be made to the
                                    corresponding ResourceClaim by the control plane after creating the
                                    ResourceClaim.

                                    Exactly one of ResourceClaimName and ResourceClaimTemplateName must
                                    be set.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          resources:
                            description: |-
                              Resources is the total amount of CPU and Memory resources required by all
                              containers in the pod. It supports specifying Requests and Limits for
                              "cpu" and "memory" resource names only. ResourceClaims are not supported.

                              This field enables fine-grained control over resource allocation for the
                              entire pod, allowing resource sharing among containers in a pod.

                              This is an alpha field and requires enabling the PodLevelResources feature
                              gate.
                            properties:
                              claims:
                                description: |-
                                  Claims lists the names of resources, defined in spec.resourceClaims,
                                  that are used by this container.

                                  This is an alpha field and requires enabling the
                                  DynamicResourceAllocation feature gate.

                                  This field is immutable. It can only be set for containers.
                                items:
                                  description: ResourceClaim references one entry
                                    in PodSpec.ResourceClaims.
                                  properties:
                                    name:
                                      description: |-
                                        Name must match the name of one entry in pod.spec.resourceClaims of
                                        the Pod where this field is used. It makes that resource available
                                        inside a container.
                                      type: string
                                    request:
                                      description: |-
                                        Request is the name chosen for a request in the referenced claim.
                                        If empty, everything from the claim is made available, otherwise
                                        only the result of this request.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Limits describes the maximum amount of compute resources allowed.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Requests describes the minimum amount of compute resources required.
                                  If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                  otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                            type: object
                          restartPolicy:
                            description: |-
                              Restart policy for all containers within the pod.
                              One of Always, OnFailure, Never. In some contexts, only a subset of those values may be permitted.
                              Default to Always.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy
                            type: string
                          runtimeClassName:
                            description: |-
                              RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used
                              to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run.
                              If unset or empty, the "legacy" RuntimeClass will be used, which is an implicit class with an
                              empty definition that uses the default runtime handler.
                              More info: https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class
                            type: string
                          schedulerName:
                            description: |-
                              If specified, the pod will be dispatched by specified scheduler.
                              If not specified, the pod will be dispatched by default scheduler.
                            type: string
                          schedulingGates:
                            description: |-
                              SchedulingGates is an opaque list of values that if specified will block scheduling the pod.
                              If schedulingGates is not empty, the pod will stay in the SchedulingGated state and the
                              scheduler will not attempt to schedule the pod.

                              SchedulingGates can only be set at pod creation time, and be removed only afterwards.
                            items:
                              description: PodSchedulingGate is associated to a Pod
                                to guard its scheduling.
                              properties:
                                name:
                                  description: |-
                                    Name of the scheduling gate.
                                    Each scheduling gate must have a unique name field.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          securityContext:
                            description: |-
                              SecurityContext holds pod-level security attributes and common container settings.
                              Optional: Defaults to empty.  See type description for default values of each field.
                            properties:
                              appArmorProfile:
                                description: |-
                                  appArmorProfile is the AppArmor options to use by the containers in this pod.
                                  Note that this field cannot be set when spec.os.name is windows.
                                properties:
                                  localhostProfile:
                                    description: |-
                                      localhostProfile indicates a profile loaded on the node that should be used.
                                      The profile must be preconfigured on the node to work.
                                      Must match the loaded name of the profile.
                                      Must be set if and only if type is "Localhost".
                                    type: string
                                  type:
                                    description: |-
                                      type indicates which kind of AppArmor profile will be applied.
                                      Valid options are:
                                        Localhost - a profile pre-loaded on the node.
                                        RuntimeDefault - the container runtime's default profile.
                                        Unconfined - no AppArmor enforcement.
                                    type: string
                                required:
                                - type
                                type: object
                              fsGroup:
                                description: |-
                                  A special supplemental group that applies to all containers in a pod.
                                  Some volume types allow the Kubelet to change the ownership of that volume
                                  to be owned by the pod:

                                  1. The owning GID will be the FSGroup
                                  2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                                  3. The permission bits are OR'd with rw-rw----

                                  If unset, the Kubelet will not modify the ownership and permissions of any volume.
                                  Note that this field cannot be set when spec.os.name is windows.
                                format: int64
                                type: integer
                              fsGroupChangePolicy:
                                description: |-
                                  fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                                  before being exposed inside Pod. This field will only apply to
                                  volume types which support fsGroup based ownership(and permissions).
                                  It will have no effect on ephemeral volume types such as: secret, configmaps
                                  and emptydir.
                                  Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: string
                              runAsGroup:
                                description: |-
                                  The GID to run the entrypoint of the container process.
                                  Uses runtime default if unset.
                                  May also be set in SecurityContext.  If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext takes precedence
                                  for that container.
                                  Note that this field cannot be set when spec.os.name is windows.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: |-
                                  Indicates that the container must run as a non-root user.
                                  If true, the Kubelet will validate the image at runtime to ensure that it
                                  does not run as UID 0 (root) and fail to start the container if it does.
                                  If unset or false, no such validation will be performed.
                                  May also be set in SecurityContext.  If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: |-
                                  The UID to run the entrypoint of the container process.
                                  Defaults to user specified in image metadata if unspecified.
                                  May also be set in SecurityContext.  If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext takes precedence
                                  for that container.
                                  Note that this field cannot be set when spec.os.name is windows.
                                format: int64
                                type: integer
                              seLinuxChangePolicy:
                                description: |-
                                  seLinuxChangePolicy defines how the container's SELinux label is applied to all volumes used by the Pod.
                                  It has no effect on nodes that do not support SELinux or to volumes does not support SELinux.
                                  Valid values are "MountOption" and "Recursive".

                                  "Recursive" means relabeling of all files on all Pod volumes by the container runtime.
                                  This may be slow for large volumes, but allows mixing privileged and unprivileged Pods sharing the same volume on the same node.

                                  "MountOption" mounts all eligible Pod volumes with `-o context` mount option.
                                  This requires all Pods that share the same volume to use the same SELinux label.
                                  It is not possible to share the same volume among privileged and unprivileged Pods.
                                  Eligible volumes are in-tree FibreChannel and iSCSI volumes, and all CSI volumes
                                  whose CSI driver announces SELinux support by setting spec.seLinuxMount: true in their
                                  CSIDriver instance. Other volumes are always re-labelled recursively.
                                  "MountOption" value is allowed only when SELinuxMount feature gate is enabled.

                                  If not specified and SELinuxMount feature gate is enabled, "MountOption" is used.
                                  If not specified and SELinuxMount feature gate is disabled, "MountOption" is used for ReadWriteOncePod volumes
                                  and "Recursive" for all other volumes.

                                  This field affects only Pods that have SELinux label set, either in PodSecurityContext or in SecurityContext of all containers.

                                  All Pods that use the same volume should use the same seLinuxChangePolicy, otherwise some pods can get stuck in ContainerCreating state.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: string
                              seLinuxOptions:
                                description: |-
                                  The SELinux context to be applied to all containers.
                                  If unspecified, the container runtime will allocate a random SELinux context for each
                                  container.  May also be set in SecurityContext.  If set in
                                  both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence for that container.
                                  Note that this field cannot be set when spec.os.name is windows.
                                properties:
                                  level:
                                    description: Level is SELinux level label that
                                      applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that
                                      applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that
                                      applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that
                                      applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: |-
                                  The seccomp options to use by the containers in this pod.
                                  Note that this field cannot be set when spec.os.name is windows.
                                properties:
                                  localhostProfile:
                                    description: |-
                                      localhostProfile indicates a profile defined in a file on the node should be used.
                                      The profile must be preconfigured on the node to work.
                                      Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                      Must be set if type is "Localhost". Must NOT be set for any other type.
                                    type: string
                                  type:
                                    description: |-
                                      type indicates which kind of seccomp profile will be applied.
                                      Valid options are:

                                      Localhost - a profile defined in a file on the node should be used.
                                      RuntimeDefault - the container runtime default profile should be used.
                                      Unconfined - no profile should be applied.
                                    type: string
                                required:
                                - type
                                type: object
                              supplementalGroups:
                                description: |-
                                  A list of groups applied to the first process run in each container, in
                                  addition to the container's primary GID and fsGroup (if specified).  If
                                  the SupplementalGroupsPolicy feature is enabled, the
                                  supplementalGroupsPolicy field determines whether these are in addition
                                  to or instead of any group memberships defined in the container image.
                                  If unspecified, no additional groups are added, though group memberships
                                  defined in the container image may still be used, depending on the
                                  supplementalGroupsPolicy field.
                                  Note that this field cannot be set when spec.os.name is windows.
                                items:
                                  format: int64
                                  type: integer
                                type: array
                                x-kubernetes-list-type: atomic
                              supplementalGroupsPolicy:
                                description: |-
                                  Defines how supplemental groups of the first container processes are calculated.
                                  Valid values are "Merge" and "Strict". If not specified, "Merge" is used.
                                  (Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled
                                  and the container runtime must implement support for this feature.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: string
                              sysctls:
                                description: |-
                                  Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                                  sysctls (by the container runtime) might fail to launch.
                                  Note that this field cannot be set when spec.os.name is windows.
                                items:
                                  description: Sysctl defines a kernel parameter to
                                    be set
                                  properties:
                                    name:
                                      description: Name of a property to set
                                      type: string
                                    value:
                                      description: Value of a property to set
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              windowsOptions:
                                description: |-
                                  The Windows specific settings applied to all containers.
                                  If unspecified, the options within a container's SecurityContext will be used.
                                  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                  Note that this field cannot be set when spec.os.name is linux.
                                properties:
                                  gmsaCredentialSpec:
                                    description: |-
                                      GMSACredentialSpec is where the GMSA admission webhook
                                      (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                      GMSA credential spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name
                                      of the GMSA credential spec to use.
                                    type: string
                                  hostProcess:
                                    description: |-
                                      HostProcess determines if a container should be run as a 'Host Process' container.
                                      All of a Pod's containers must have the same effective HostProcess value
                                      (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                      In addition, if HostProcess is true then HostNetwork must also be set to true.
                                    type: boolean
                                  runAsUserName:
                                    description: |-
                                      The UserName in Windows to run the entrypoint of the container process.
                                      Defaults to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set in both SecurityContext and
                                      PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    type: string
                                type: object
                            type: object
                          serviceAccount:
                            description: |-
                              DeprecatedServiceAccount is a deprecated alias for ServiceAccountName.
                              Deprecated: Use serviceAccountName instead.
                            type: string
                          serviceAccountName:
                            description: |-
                              ServiceAccountName is the name of the ServiceAccount to use to run this pod.
                              More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
                            type: string
                          setHostnameAsFQDN:
                            description: |-
                              If true the pod's hostname will be configured as the pod's FQDN, rather than the leaf name (the default).
                              In Linux containers, this means setting the FQDN in the hostname field of the kernel (the nodename field of struct utsname).
                              In Windows containers, this means setting the registry value of hostname for the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters to FQDN.
                              If a pod does not have FQDN, this has no effect.
                              Default to false.
                            type: boolean
                          shareProcessNamespace:
                            description: |-
                              Share a single process namespace between all of the containers in a pod.
                              When this is set containers will be able to view and signal processes from other containers
                              in the same pod, and the first process in each container will not be assigned PID 1.
                              HostPID and ShareProcessNamespace cannot both be set.
                              Optional: Default to false.
                            type: boolean
                          subdomain:
                            description: |-
                              If specified, the fully qualified Pod hostname will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>".
                              If not specified, the pod will not have a domainname at all.
                            type: string
                          terminationGracePeriodSeconds:
                            description: |-
                              Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request.
                              Value must be non-negative integer. The value zero indicates stop immediately via
                              the kill signal (no opportunity to shut down).
                              If this value is nil, the default grace period will be used instead.
                              The grace period is the duration in seconds after the processes running in the pod are sent
                              a termination signal and the time when the processes are forcibly halted with a kill signal.
                              Set this value longer than the expected cleanup time for your process.
                              Defaults to 30 seconds.
                            format: int64
                            type: integer
                          tolerations:
                            description: If specified, the pod's tolerations.
                            items:
                              description: |-
                                The pod this Toleration is attached to tolerates any taint that matches
                                the triple <key,value,effect> using the matching operator <operator>.
                              properties:
                                effect:
                                  description: |-
                                    Effect indicates the taint effect to match. Empty means match all taint effects.
                                    When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                  type: string
                                key:
                                  description: |-
                                    Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                    If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                  type: string
                                operator:
                                  description: |-
                                    Operator represents a key's relationship to the value.
                                    Valid operators are Exists and Equal. Defaults to Equal.
                                    Exists is equivalent to wildcard for value, so that a pod can
                                    tolerate all taints of a particular category.
                                  type: string
                                tolerationSeconds:
                                  description: |-
                                    TolerationSeconds represents the period of time the toleration (which must be
                                    of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                    it is not set, which means tolerate the taint forever (do not evict). Zero and
                                    negative values will be treated as 0 (evict immediately) by the system.
                                  format: int64
                                  type: integer
                                value:
                                  description: |-
                                    Value is the taint value the toleration matches to.
                                    If the operator is Exists, the value should be empty, otherwise just a regular string.
                                  type: string
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          topologySpreadConstraints:
                            description: |-
                              TopologySpreadConstraints describes how a group of pods ought to spread across topology
                              domains. Scheduler will schedule pods in a way which abides by the constraints.
                              All topologySpreadConstraints are ANDed.
                            items:
                              description: TopologySpreadConstraint specifies how
                                to spread matching pods among the given topology.
                              properties:
                                labelSelector:
                                  description: |-
                                    LabelSelector is used to find matching pods.
                                    Pods that match this label selector are counted to determine the number of pods
                                    in their corresponding topology domain.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                matchLabelKeys:
                                  description: |-
                                    MatchLabelKeys is a set of pod label keys to select the pods over which
                                    spreading will be calculated. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are ANDed with labelSelector
                                    to select the group of existing pods over which spreading will be calculated
                                    for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                    MatchLabelKeys cannot be set when LabelSelector isn't set.
                                    Keys that don't exist in the incoming pod labels will
                                    be ignored. A null or empty list means only match against labelSelector.

                                    This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                maxSkew:
                                  description: |-
                                    MaxSkew describes the degree to which pods may be unevenly distributed.
                                    When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference
                                    between the number of matching pods in the target topology and the global minimum.
                                    The global minimum is the minimum number of matching pods in an eligible domain
                                    or zero if the number of eligible domains is less than MinDomains.
                                    For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                                    labelSelector spread as 2/2/1:
                                    In this case, the global minimum is 1.
                                    | zone1 | zone2 | zone3 |
                                    |  P P  |  P P  |   P   |
                                    - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;
                                    scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)
                                    violate MaxSkew(1).
                                    - if MaxSkew is 2, incoming pod can be scheduled onto any zone.
                                    When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence
                                    to topologies that satisfy it.
                                    It's a required field. Default value is 1 and 0 is not allowed.
                                  format: int32
                                  type: integer
                                minDomains:
                                  description: |-
                                    MinDomains indicates a minimum number of eligible domains.
                                    When the number of eligible domains with matching topology keys is less than minDomains,
                                    Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed.
                                    And when the number of eligible domains with matching topology keys equals or greater than minDomains,
                                    this value has no effect on scheduling.
                                    As a result, when the number of eligible domains is less than minDomains,
                                    scheduler won't schedule more than maxSkew Pods to those domains.
                                    If value is nil, the constraint behaves as if MinDomains is equal to 1.
                                    Valid values are integers greater than 0.
                                    When value is not nil, WhenUnsatisfiable must be DoNotSchedule.

                                    For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same
                                    labelSelector spread as 2/2/2:
                                    | zone1 | zone2 | zone3 |
                                    |  P P  |  P P  |  P P  |
                                    The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0.
                                    In this situation, new pod with the same labelSelector cannot be scheduled,
                                    because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,
                                    it will violate MaxSkew.
                                  format: int32
                                  type: integer
                                nodeAffinityPolicy:
                                  description: |-
                                    NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector
                                    when calculating pod topology spread skew. Options are:
                                    - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.
                                    - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.

                                    If this value is nil, the behavior is equivalent to the Honor policy.
                                    This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                                  type: string
                                nodeTaintsPolicy:
                                  description: |-
                                    NodeTaintsPolicy indicates how we will treat node taints when calculating
                                    pod topology spread skew. Options are:
                                    - Honor: nodes without taints, along with tainted nodes for which the incoming pod
                                    has a toleration, are included.
                                    - Ignore: node taints are ignored. All nodes are included.

                                    If this value is nil, the behavior is equivalent to the Ignore policy.
                                    This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                                  type: string
                                topologyKey:
                                  description: |-
                                    TopologyKey is the key of node labels. Nodes that have a label with this key
                                    and identical values are considered to be in the same topology.
                                    We consider each <key, value> as a "bucket", and try to put balanced number
                                    of pods into each bucket.
                                    We define a domain as a particular instance of a topology.
                                    Also, we define an eligible domain as a domain whose nodes meet the requirements of
                                    nodeAffinityPolicy and nodeTaintsPolicy.
                                    e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology.
                                    And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology.
                                    It's a required field.
                                  type: string
                                whenUnsatisfiable:
                                  description: |-
                                    WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy
                                    the spread constraint.
                                    - DoNotSchedule (default) tells the scheduler not to schedule it.
                                    - ScheduleAnyway tells the scheduler to schedule the pod in any location,
                                      but giving higher precedence to topologies that would help reduce the
                                      skew.
                                    A constraint is considered "Unsatisfiable" for an incoming pod
                                    if and only if every possible node assignment for that pod would violate
                                    "MaxSkew" on some topology.
                                    For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                                    labelSelector spread as 3/1/1:
                                    | zone1 | zone2 | zone3 |
                                    | P P P |   P   |   P   |
                                    If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled
                                    to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies
                                    MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler
                                    won't make it *more* imbalanced.
                                    It's a required field.
                                  type: string
                              required:
                              - maxSkew
                              - topologyKey
                              - whenUnsatisfiable
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - topologyKey
                            - whenUnsatisfiable
                            x-kubernetes-list-type: map
                          volumes:
                            description: |-
                              List of volumes that can be mounted by containers belonging to the pod.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes
                            items:
                              description: Volume represents a named volume in a pod
                                that may be accessed by any container in the pod.
                              properties:
                                awsElasticBlockStore:
                                  description: |-
                                    awsElasticBlockStore represents an AWS Disk resource that is attached to a
                                    kubelet's host machine and then exposed to the pod.
                                    Deprecated: AWSElasticBlockStore is deprecated. All operations for the in-tree
                                    awsElasticBlockStore type are redirected to the ebs.csi.aws.com CSI driver.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                  properties:
                                    fsType:
                                      description: |-
                                        fsType is the filesystem type of the volume that you want to mount.
                                        Tip: Ensure that the filesystem type is supported by the host operating system.
                                        Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                      type: string
                                    partition:
                                      description: |-
                                        partition is the partition in the volume that you want to mount.
                                        If omitted, the default is to mount by volume name.
                                        Examples: For volume /dev/sda1, you specify the partition as "1".
                                        Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                                      format: int32
                                      type: integer
                                    readOnly:
                                      description: |-
                                        readOnly value true will force the readOnly setting in VolumeMounts.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                      type: boolean
                                    volumeID:
                                      description: |-
                                        volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                      type: string
                                  required:
                                  - volumeID
                                  type: object
                                azureDisk:
                                  description: |-
                                    azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
                                    Deprecated: AzureDisk is deprecated. All operations for the in-tree azureDisk type
                                    are redirected to the disk.csi.azure.com CSI driver.
                                  properties:
                                    cachingMode:
                                      description: 'cachingMode is the Host Caching
                                        mode: None, Read Only, Read Write.'
                                      type: string
                                    diskName:
                                      description: diskName is the Name of the data
                                        disk in the blob storage
                                      type: string
                                    diskURI:
                                      description: diskURI is the URI of data disk
                                        in the blob storage
                                      type: string
                                    fsType:
                                      default: ext4
                                      description: |-
                                        fsType is Filesystem type to mount.
                                        Must be a filesystem type supported by the host operating system.
                                        Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                      type: string
                                    kind:
                                      description: 'kind expected values are Shared:
                                        multiple blob disks per storage account  Dedicated:
                                        single blob disk per storage account  Managed:
                                        azure managed data disk (only in managed availability
                                        set). defaults to shared'
                                      type: string
                                    readOnly:
                                      default: false
                                      description: |-
                                        readOnly Defaults to false (read/write). ReadOnly here will force
                                        the ReadOnly setting in VolumeMounts.
                                      type: boolean
                                  required:
                                  - diskName
                                  - diskURI
                                  type: object
                                azureFile:
                                  description: |-
                                    azureFile represents an Azure File Service mount on the host and bind mount to the pod.
                                    Deprecated: AzureFile is deprecated. All operations for the in-tree azureFile type
                                    are redirected to the file.csi.azure.com CSI driver.
                                  properties:
                                    readOnly:
                                      description: |-
                                        readOnly defaults to false (read/write). ReadOnly here will force
                                        the ReadOnly setting in VolumeMounts.
                                      type: boolean
                                    secretName:
                                      description: secretName is the  name of secret
                                        that contains Azure Storage Account Name and
                                        Key
                                      type: string
                                    shareName:
                                      description: shareName is the azure share Name
                                      type: string
                                  required:
                                  - secretName
                                  - shareName
                                  type: object
                                cephfs:
                                  description: |-
                                    cephFS represents a Ceph FS mount on the host that shares a pod's lifetime.
                                    Deprecated: CephFS is deprecated and the in-tree cephfs type is no longer supported.
                                  properties:
                                    monitors:
                                      description: |-
                                        monitors is Required: Monitors is a collection of Ceph monitors
                                        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    path:
                                      description: 'path is Optional: Used as the
                                        mounted root, rather than the full Ceph tree,
                                        default is /'
                                      type: string
                                    readOnly:
                                      description: |-
                                        readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
                                        the ReadOnly setting in VolumeMounts.
                                        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                      type: boolean
                                    secretFile:
                                      description: |-
                                        secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
                                        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                      type: string
                                    secretRef:
                                      description: |-
                                        secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.
                                        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                      properties:
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    user:
                                      description: |-
                                        user is optional: User is the rados user name, default is admin
                                        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                      type: string
                                  required:
                                  - monitors
                                  type: object
                                cinder:
                                  description: |-
                                    cinder represents a cinder volume attached and mounted on kubelets host machine.
                                    Deprecated: Cinder is deprecated. All operations for the in-tree cinder type
                                    are redirected to the cinder.csi.openstack.org CSI driver.
                                    More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                  properties:
                                    fsType:
                                      description: |-
                                        fsType is the filesystem type to mount.
                                        Must be a filesystem type supported by the host operating system.
                                        Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                        More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                      type: string
                                    readOnly:
                                      description: |-
                                        readOnly defaults to false (read/write). ReadOnly here will force
                                        the ReadOnly setting in VolumeMounts.
                                        More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                      type: boolean
                                    secretRef:
                                      description: |-
                                        secretRef is optional: points to a secret object containing parameters used to connect
                                        to OpenStack.
                                      properties:
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    volumeID:
                                      description: |-
                                        volumeID used to identify the volume in cinder.
                                        More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                      type: string
                                  required:
                                  - volumeID
                                  type: object
                                configMap:
                                  description: configMap represents a configMap that
                                    should populate this volume
                                  properties:
                                    defaultMode:
                                      description: |-
                                        defaultMode is optional: mode bits used to set permissions on created files by default.
                                        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                        Defaults to 0644.
                                        Directories within the path are not affected by this setting.
                                        This might be in conflict with other options that affect the file
                                        mode, like fsGroup, and the result can be other mode bits set.
                                      format: int32
                                      type: integer
                                    items:
                                      description: |-
                                        items if unspecified, each key-value pair in the Data field of the referenced
                                        ConfigMap will be projected into the volume as a file whose name is the
                                        key and content is the value. If specified, the listed keys will be
                                        projected into the specified paths, and unlisted keys will not be
                                        present. If a key is specified which is not present in the ConfigMap,
                                        the volume setup will error unless it is marked optional. Paths must be
                                        relative and may not contain the '..' path or start with '..'.
                                      items:
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: |-
                                              mode is Optional: mode bits used to set permissions on this file.
                                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                              If not specified, the volume defaultMode will be used.
                                              This might be in conflict with other options that affect the file
                                              mode, like fsGroup, and the result can be other mode bits set.
                                            format: int32
                                            type: integer
                                          path:
                                            description: |-
                                              path is the relative path of the file to map the key to.
                                              May not be an absolute path.
                                              May not contain the path element '..'.
                                              May not start with the string '..'.
                                            type: string
                                        required:
                                        - key
                                        - path
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: optional specify whether the ConfigMap
                                        or its keys must be defined
                                      type: boolean
                                  type: object
                                  x-kubernetes-map-type: atomic
                                csi:
                                  description: csi (Container Storage Interface) represents
                                    ephemeral storage that is handled by certain external
                                    CSI drivers.
                                  properties:
                                    driver:
                                      description: |-
                                        driver is the name of the CSI driver that handles this volume.
                                        Consult with your admin for the correct name as registered in the cluster.
                                      type: string
                                    fsType:
                                      description: |-
                                        fsType to mount. Ex. "ext4", "xfs", "ntfs".
                                        If not provided, the empty value is passed to the associated CSI driver
                                        which will determine the default filesystem to apply.
                                      type: string
                                    nodePublishSecretRef:
                                      description: |-
                                        nodePublishSecretRef is a reference to the secret object containing
                                        sensitive information to pass to the CSI driver to complete the CSI
                                        NodePublishVolume and NodeUnpublishVolume calls.
                                        This field is optional, and  may be empty if no secret is required. If the
                                        secret object contains more than one secret, all secret references are passed.
                                      properties:
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    readOnly:
                                      description: |-
                                        readOnly specifies a read-only configuration for the volume.
                                        Defaults to false (read/write).
                                      type: boolean
                                    volumeAttributes:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        volumeAttributes stores driver-specific properties that are passed to the CSI
                                        driver. Consult your driver's documentation for supported values.
                                      type: object
                                  required:
                                  - driver
                                  type: object
                                downwardAPI:
                                  description: downwardAPI represents downward API
                                    about the pod that should populate this volume
                                  properties:
                                    defaultMode:
                                      description: |-
                                        Optional: mode bits to use on created files by default. Must be a
                                        Optional: mode bits used to set permissions on created files by default.
                                        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                        Defaults to 0644.
                                        Directories within the path are not affected by this setting.
                                        This might be in conflict with other options that affect the file
                                        mode, like fsGroup, and the result can be other mode bits set.
                                      format: int32
                                      type: integer
                                    items:
                                      description: Items is a list of downward API
                                        volume file
                                      items:
                                        description: DownwardAPIVolumeFile represents
                                          information to create the file containing
                                          the pod field
                                        properties:
                                          fieldRef:
                                            description: 'Required: Selects a field
                                              of the pod: only annotations, labels,
                                              name, namespace and uid are supported.'
                                            properties:
                                              apiVersion:
                                                description: Version of the schema
                                                  the FieldPath is written in terms
                                                  of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to
                                                  select in the specified API version.
                                                type: string
                                            required:
                                            - fieldPath
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          mode:
                                            description: |-
                                              Optional: mode bits used to set permissions on this file, must be an octal value
                                              between 0000 and 0777 or a decimal value between 0 and 511.
                                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                              If not specified, the volume defaultMode will be used.
                                              This might be in conflict with other options that affect the file
                                              mode, like fsGroup, and the result can be other mode bits set.
                                            format: int32
                                            type: integer
                                          path:
                                            description: 'Required: Path is  the relative
                                              path name of the file to be created.
                                              Must not be absolute or contain the
                                              ''..'' path. Must be utf-8 encoded.
                                              The first item of the relative path
                                              must not start with ''..'''
                                            type: string
                                          resourceFieldRef:
                                            description: |-
                                              Selects a resource of the container: only resources limits and requests
                                              (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                            properties:
                                              containerName:
                                                description: 'Container name: required
                                                  for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                description: Specifies the output
                                                  format of the exposed resources,
                                                  defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to
                                                  select'
                                                type: string
                                            required:
                                            - resource
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        required:
                                        - path
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  type: object
                                emptyDir:
                                  description: |-
                                    emptyDir represents a temporary directory that shares a pod's lifetime.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                                  properties:
                                    medium:
                                      description: |-
                                        medium represents what type of storage medium should back this directory.
                                        The default is "" which means to use the node's default medium.
                                        Must be an empty string (default) or Memory.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                                      type: string
                                    sizeLimit:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: |-
                                        sizeLimit is the total amount of local storage required for this EmptyDir volume.
                                        The size limit is also applicable for memory medium.
                                        The maximum usage on memory medium EmptyDir would be the minimum value between
                                        the SizeLimit specified here and the sum of memory limits of all containers in a pod.
                                        The default is nil which means that the limit is undefined.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                  type: object
                                ephemeral:
                                  description: |-
                                    ephemeral represents a volume that is handled by a cluster storage driver.
                                    The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
                                    and deleted when the pod is removed.

                                    Use this if:
                                    a) the volume is only needed while the pod runs,
                                    b) features of normal volumes like restoring from snapshot or capacity
                                       tracking are needed,
                                    c) the storage driver is specified through a storage class, and
                                    d) the storage driver supports dynamic volume provisioning through
                                       a PersistentVolumeClaim (see EphemeralVolumeSource for more
                                       information on the connection between this volume type
                                       and PersistentVolumeClaim).

                                    Use PersistentVolumeClaim or one of the vendor-specific
                                    APIs for volumes that persist for longer than the lifecycle
                                    of an individual pod.

                                    Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
                                    be used that way - see the documentation of the driver for
                                    more information.

                                    A pod can use both types of ephemeral volumes and
                                    persistent volumes at the same time.
                                  properties:
                                    volumeClaimTemplate:
                                      description: |-
                                        Will be used to create a stand-alone PVC to provision the volume.
                                        The pod in which this EphemeralVolumeSource is embedded will be the
                                        owner of the PVC, i.e. the PVC will be deleted together with the
                                        pod.  The name of the PVC will be `<pod name>-<volume name>` where
                                        `<volume name>` is the name from the `PodSpec.Volumes` array
                                        entry. Pod validation will reject the pod if the concatenated name
                                        is not valid for a PVC (for example, too long).

                                        An existing PVC with that name that is not owned by the pod
                                        will *not* be used for the pod to avoid using an unrelated
                                        volume by mistake. Starting the pod is then blocked until
                                        the unrelated PVC is removed. If such a pre-created PVC is
                                        meant to be used by the pod, the PVC has to updated with an
                                        owner reference to the pod once the pod exists. Normally
                                        this should not be necessary, but it may be useful when
                                        manually reconstructing a broken cluster.

                                        This field is read-only and no changes will be made by Kubernetes
                                        to the PVC after it has been created.

                                        Required, must not be nil.
                                      properties:
                                        metadata:
                                          description: |-
                                            May contain labels and annotations that will be copied into the PVC
                                            when creating it. No other fields are allowed and will be rejected during
                                            validation.
                                          properties:
                                            annotations:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            finalizers:
                                              items:
                                                type: string
                                              type: array
                                            labels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                          type: object
                                        spec:
                                          description: |-
                                            The specification for the PersistentVolumeClaim. The entire content is
                                            copied unchanged into the PVC that gets created from this
                                            template. The same fields as in a PersistentVolumeClaim
                                            are also valid here.
                                          properties:
                                            accessModes:
                                              description: |-
                                                accessModes contains the desired access modes the volume should have.
                                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            dataSource:
                                              description: |-
                                                dataSource field can be used to specify either:
                                                * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                                * An existing PVC (PersistentVolumeClaim)
                                                If the provisioner or an external controller can support the specified data source,
                                                it will create a new volume based on the contents of the specified data source.
                                                When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
                                                and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
                                                If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                                              properties:
                                                apiGroup:
                                                  description: |-
                                                    APIGroup is the group for the resource being referenced.
                                                    If APIGroup is not specified, the specified Kind must be in the core API group.
                                                    For any other third-party types, APIGroup is required.
                                                  type: string
                                                kind:
                                                  description: Kind is the type of
                                                    resource being referenced
                                                  type: string
                                                name:
                                                  description: Name is the name of
                                                    resource being referenced
                                                  type: string
                                              required:
                                              - kind
                                              - name
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            dataSourceRef:
                                              description: |-
                                                dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
                                                volume is desired. This may be any object from a non-empty API group (non
                                                core object) or a PersistentVolumeClaim object.
                                                When this field is specified, volume binding will only succeed if the type of
                                                the specified object matches some installed volume populator or dynamic
                                                provisioner.
                                                This field will replace the functionality of the dataSource field and as such
                                                if both fields are non-empty, they must have the same value. For backwards
                                                compatibility, when namespace isn't specified in dataSourceRef,
                                                both fields (dataSource and dataSourceRef) will be set to the same
                                                value automatically if one of them is empty and the other is non-empty.
                                                When namespace is specified in dataSourceRef,
                                                dataSource isn't set to the same value and must be empty.
                                                There are three important differences between dataSource and dataSourceRef:
                                                * While dataSource only allows two specific types of objects, dataSourceRef
                                                  allows any non-core object, as well as PersistentVolumeClaim objects.
                                                * While dataSource ignores disallowed values (dropping them), dataSourceRef
                                                  preserves all values, and generates an error if a disallowed value is
                                                  specified.
                                                * While dataSource only allows local objects, dataSourceRef allows objects
                                                  in any namespaces.
                                                (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                                                (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                              properties:
                                                apiGroup:
                                                  description: |-
                                                    APIGroup is the group for the resource being referenced.
                                                    If APIGroup is not specified, the specified Kind must be in the core API group.
                                                    For any other third-party types, APIGroup is required.
                                                  type: string
                                                kind:
                                                  description: Kind is the type of
                                                    resource being referenced
                                                  type: string
                                                name:
                                                  description: Name is the name of
                                                    resource being referenced
                                                  type: string
                                                namespace:
                                                  description: |-
                                                    Namespace is the namespace of resource being referenced
                                                    Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                                                    (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                                  type: string
                                              required:
                                              - kind
                                              - name
                                              type: object
                                            resources:
                                              description: |-
                                                resources represents the minimum resources the volume should have.
                                                If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
                                                that are lower than previous value but must still be higher than capacity recorded in the
                                                status field of the claim.
                                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                                              properties:
                                                limits:
                                                  additionalProperties:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  description: |-
                                                    Limits describes the maximum amount of compute resources allowed.
                                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                                  type: object
                                                requests:
                                                  additionalProperties:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  description: |-
                                                    Requests describes the minimum amount of compute resources required.
                                                    If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                                    otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                                  type: object
                                              type: object
                                            selector:
                                              description: selector is a label query
                                                over volumes to consider for binding.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            storageClassName:
                                              description: |-
                                                storageClassName is the name of the StorageClass required by the claim.
                                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                                              type: string
                                            volumeAttributesClassName:
                                              description: |-
                                                volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
                                                If specified, the CSI driver will create or update the volume with the attributes defined
                                                in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
                                                it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
                                                will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
                                                If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
                                                will be set by the persistentvolume controller if it exists.
                                                If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
                                                set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
                                                exists.
                                                More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
                                                (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).
                                              type: string
                                            volumeMode:
                                              description: |-
                                                volumeMode defines what type of volume is required by the claim.
                                                Value of Filesystem is implied when not included in claim spec.
                                              type: string
                                            volumeName:
                                              description: volumeName is the binding
                                                reference to the PersistentVolume
                                                backing this claim.
                                              type: string
                                          type: object
                                      required:
                                      - spec
                                      type: object
                                  type: object
                                fc:
                                  description: fc represents a Fibre Channel resource
                                    that is attached to a kubelet's host machine and
                                    then exposed to the pod.
                                  properties:
                                    fsType:
                                      description: |-
                                        fsType is the filesystem type to mount.
                                        Must be a filesystem type supported by the host operating system.
                                        Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                      type: string
                                    lun:
                                      description: 'lun is Optional: FC target lun
                                        number'
                                      format: int32
                                      type: integer
                                    readOnly:
                                      description: |-
                                        readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
                                        the ReadOnly setting in VolumeMounts.
                                      type: boolean
                                    targetWWNs:
                                      description: 'targetWWNs is Optional: FC target
                                        worldwide names (WWNs)'
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    wwids:
                                      description: |-
                                        wwids Optional: FC volume world wide identifiers (wwids)
                                        Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  type: object
                                flexVolume:
                                  description: |-
                                    flexVolume represents a generic volume resource that is
                                    provisioned/attached using an exec based plugin.
                                    Deprecated: FlexVolume is deprecated. Consider using a CSIDriver instead.
                                  properties:
                                    driver:
                                      description: driver is the name of the driver
                                        to use for this volume.
                                      type: string
                                    fsType:
                                      description: |-
                                        fsType is the filesystem type to mount.
                                        Must be a filesystem type supported by the host operating system.
                                        Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
                                      type: string
                                    options:
                                      additionalProperties:
                                        type: string
                                      description: 'options is Optional: this field
                                        holds extra command options if any.'
                                      type: object
                                    readOnly:
                                      description: |-
                                        readOnly is Optional: defaults to false (read/write). ReadOnly here will force
                                        the ReadOnly setting in VolumeMounts.
                                      type: boolean
                                    secretRef:
                                      description: |-
                                        secretRef is Optional: secretRef is reference to the secret object containing
                                        sensitive information to pass to the plugin scripts. This may be
                                        empty if no secret object is specified. If the secret object
                                        contains more than one secret, all secrets are passed to the plugin
                                        scripts.
                                      properties:
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  required:
                                  - driver
                                  type: object
                                flocker:
                                  description: |-
                                    flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running.
                                    Deprecated: Flocker is deprecated and the in-tree flocker type is no longer supported.
                                  properties:
                                    datasetName:
                                      description: |-
                                        datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
                                        should be considered as deprecated
                                      type: string
                                    datasetUUID:
                                      description: datasetUUID is the UUID of the
                                        dataset. This is unique identifier of a Flocker
                                        dataset
                                      type: string
                                  type: object
                                gcePersistentDisk:
                                  description: |-
                                    gcePersistentDisk represents a GCE Disk resource that is attached to a
                                    kubelet's host machine and then exposed to the pod.
                                    Deprecated: GCEPersistentDisk is deprecated. All operations for the in-tree
                                    gcePersistentDisk type are redirected to the pd.csi.storage.gke.io CSI driver.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                  properties:
                                    fsType:
                                      description: |-
                                        fsType is filesystem type of the volume that you want to mount.
                                        Tip: Ensure that the filesystem type is supported by the host operating system.
                                        Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                      type: string
                                    partition:
                                      description: |-
                                        partition is the partition in the volume that you want to mount.
                                        If omitted, the default is to mount by volume name.
                                        Examples: For volume /dev/sda1, you specify the partition as "1".
                                        Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                      format: int32
                                      type: integer
                                    pdName:
                                      description: |-
                                        pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                      type: string
                                    readOnly:
                                      description: |-
                                        readOnly here will force the ReadOnly setting in VolumeMounts.
                                        Defaults to false.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                      type: boolean
                                  required:
                                  - pdName
                                  type: object
                                gitRepo:
                                  description: |-
                                    gitRepo represents a git repository at a particular revision.
                                    Deprecated: GitRepo is deprecated. To provision a container with a git repo, mount an
                                    EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
                                    into the Pod's container.
                                  properties:
                                    directory:
                                      description: |-
                                        directory is the target directory name.
                                        Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
                                        git repository.  Otherwise, if specified, the volume will contain the git repository in
                                        the subdirectory with the given name.
                                      type: string
                                    repository:
                                      description: repository is the URL
                                      type: string
                                    revision:
                                      description: revision is the commit hash for
                                        the specified revision.
                                      type: string
                                  required:
                                  - repository
                                  type: object
                                glusterfs:
                                  description: |-
                                    glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
                                    Deprecated: Glusterfs is deprecated and the in-tree glusterfs type is no longer supported.
                                    More info: https://examples.k8s.io/volumes/glusterfs/README.md
                                  properties:
                                    endpoints:
                                      description: |-
                                        endpoints is the endpoint name that details Glusterfs topology.
                                        More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                      type: string
                                    path:
                                      description: |-
                                        path is the Glusterfs volume path.
                                        More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                      type: string
                                    readOnly:
                                      description: |-
                                        readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
                                        Defaults to false.
                                        More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                      type: boolean
                                  required:
                                  - endpoints
                                  - path
                                  type: object
                                hostPath:
                                  description: |-
                                    hostPath represents a pre-existing file or directory on the host
                                    machine that is directly exposed to the container. This is generally
                                    used for system agents or other privileged things that are allowed
                                    to see the host machine. Most containers will NOT need this.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                  properties:
                                    path:
                                      description: |-
                                        path of the directory on the host.
                                        If the path is a symlink, it will follow the link to the real path.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                      type: string
                                    type:
                                      description: |-
                                        type for HostPath Volume
                                        Defaults to ""
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                      type: string
                                  required:
                                  - path
                                  type: object
                                image:
                                  description: |-
                                    image represents an OCI object (a container image or artifact) pulled and mounted on the kubelet's host machine.
                                    The volume is resolved at pod startup depending on which PullPolicy value is provided:

                                    - Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
                                    - Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
                                    - IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.

                                    The volume gets re-resolved if the pod gets deleted and recreated, which means that new remote content will become available on pod recreation.
                                    A failure to resolve or pull the image during pod startup will block containers from starting and may add significant latency. Failures will be retried using normal volume backoff and will be reported on the pod reason and message.
                                    The types of objects that may be mounted by this volume are defined by the container runtime implementation on a host machine and at minimum must include all valid types supported by the container image field.
                                    The OCI object gets mounted in a single directory (spec.containers[*].volumeMounts.mountPath) by merging the manifest layers in the same way as for container images.
                                    The volume will be mounted read-only (ro) and non-executable files (noexec).
                                    Sub path mounts for containers are not supported (spec.containers[*].volumeMounts.subpath).
                                    The field spec.securityContext.fsGroupChangePolicy has no effect on this volume type.
                                  properties:
                                    pullPolicy:
                                      description: |-
                                        Policy for pulling OCI objects. Possible values are:
                                        Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
                                        Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
                                        IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.
                                        Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                                      type: string
                                    reference:
                                      description: |-
                                        Required: Image or artifact reference to be used.
                                        Behaves in the same way as pod.spec.containers[*].image.
                                        Pull secrets will be assembled in the same way as for the container image by looking up node credentials, SA image pull secrets, and pod spec image pull secrets.
                                        More info: https://kubernetes.io/docs/concepts/containers/images
                                        This field is optional to allow higher level config management to default or override
                                        container images in workload controllers like Deployments and StatefulSets.
                                      type: string
                                  type: object
                                iscsi:
                                  description: |-
                                    iscsi represents an ISCSI Disk resource that is attached to a
                                    kubelet's host machine and then exposed to the pod.
                                    More info: https://examples.k8s.io/volumes/iscsi/README.md
                                  properties:
                                    chapAuthDiscovery:
                                      description: chapAuthDiscovery defines whether
                                        support iSCSI Discovery CHAP authentication
                                      type: boolean
                                    chapAuthSession:
                                      description: chapAuthSession defines whether
                                        support iSCSI Session CHAP authentication
                                      type: boolean
                                    fsType:
                                      description: |-
                                        fsType is the filesystem type of the volume that you want to mount.
                                        Tip: Ensure that the filesystem type is supported by the host operating system.
                                        Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                      type: string
                                    initiatorName:
                                      description: |-
                                        initiatorName is the custom iSCSI Initiator Name.
                                        If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
                                        <target portal>:<volume name> will be created for the connection.
                                      type: string
                                    iqn:
                                      description: iqn is the target iSCSI Qualified
                                        Name.
                                      type: string
                                    iscsiInterface:
                                      default: default
                                      description: |-
                                        iscsiInterface is the interface Name that uses an iSCSI transport.
                                        Defaults to 'default' (tcp).
                                      type: string
                                    lun:
                                      description: lun represents iSCSI Target Lun
                                        number.
                                      format: int32
                                      type: integer
                                    portals:
                                      description: |-
                                        portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
                                        is other than default (typically TCP ports 860 and 3260).
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    readOnly:
                                      description: |-
                                        readOnly here will force the ReadOnly setting in VolumeMounts.
                                        Defaults to false.
                                      type: boolean
                                    secretRef:
                                      description: secretRef is the CHAP Secret for
                                        iSCSI target and initiator authentication
                                      properties:
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    targetPortal:
                                      description: |-
                                        targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
                                        is other than default (typically TCP ports 860 and 3260).
                                      type: string
                                  required:
                                  - iqn
                                  - lun
                                  - targetPortal
                                  type: object
                                name:
                                  description: |-
                                    name of the volume.
                                    Must be a DNS_LABEL and unique within the pod.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                nfs:
                                  description: |-
                                    nfs represents an NFS mount on the host that shares a pod's lifetime
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                  properties:
                                    path:
                                      description: |-
                                        path that is exported by the NFS server.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                      type: string
                                    readOnly:
                                      description: |-
                                        readOnly here will force the NFS export to be mounted with read-only permissions.
                                        Defaults to false.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                      type: boolean
                                    server:
                                      description: |-
                                        server is the hostname or IP address of the NFS server.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                      type: string
                                  required:
                                  - path
                                  - server
                                  type: object
                                persistentVolumeClaim:
                                  description: |-
                                    persistentVolumeClaimVolumeSource represents a reference to a
                                    PersistentVolumeClaim in the same namespace.
                                    More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                  properties:
                                    claimName:
                                      description: |-
                                        claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                      type: string
                                    readOnly:
                                      description: |-
                                        readOnly Will force the ReadOnly setting in VolumeMounts.
                                        Default false.
                                      type: boolean
                                  required:
                                  - claimName
                                  type: object
                                photonPersistentDisk:
                                  description: |-
                                    photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine.
                                    Deprecated: PhotonPersistentDisk is deprecated and the in-tree photonPersistentDisk type is no longer supported.
                                  properties:
                                    fsType:
                                      description: |-
                                        fsType is the filesystem type to mount.
                                        Must be a filesystem type supported by the host operating system.
                                        Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                      type: string
                                    pdID:
                                      description: pdID is the ID that identifies
                                        Photon Controller persistent disk
                                      type: string
                                  required:
                                  - pdID
                                  type: object
                                portworxVolume:
                                  description: |-
                                    portworxVolume represents a portworx volume attached and mounted on kubelets host machine.
                                    Deprecated: PortworxVolume is deprecated. All operations for the in-tree portworxVolume type
                                    are redirected to the pxd.portworx.com CSI driver when the CSIMigrationPortworx feature-gate
                                    is on.
                                  properties:
                                    fsType:
                                      description: |-
                                        fSType represents the filesystem type to mount
                                        Must be a filesystem type supported by the host operating system.
                                        Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
                                      type: string
                                    readOnly:
                                      description: |-
                                        readOnly defaults to false (read/write). ReadOnly here will force
                                        the ReadOnly setting in VolumeMounts.
                                      type: boolean
                                    volumeID:
                                      description: volumeID uniquely identifies a
                                        Portworx volume
                                      type: string
                                  required:
                                  - volumeID
                                  type: object
                                projected:
                                  description: projected items for all in one resources
                                    secrets, configmaps, and downward API
                                  properties:
                                    defaultMode:
                                      description: |-
                                        defaultMode are the mode bits used to set permissions on created files by default.
                                        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                        Directories within the path are not affected by this setting.
                                        This might be in conflict with other options that affect the file
                                        mode, like fsGroup, and the result can be other mode bits set.
                                      format: int32
                                      type: integer
                                    sources:
                                      description: |-
                                        sources is the list of volume projections. Each entry in this list
                                        handles one source.
                                      items:
                                        description: |-
                                          Projection that may be projected along with other supported volume types.
                                          Exactly one of these fields must be set.
                                        properties:
                                          clusterTrustBundle:
                                            description: |-
                                              ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
                                              of ClusterTrustBundle objects in an auto-updating file.

                                              Alpha, gated by the ClusterTrustBundleProjection feature gate.

                                              ClusterTrustBundle objects can either be selected by name, or by the
                                              combination of signer name and a label selector.

                                              Kubelet performs aggressive normalization of the PEM contents written
                                              into the pod filesystem.  Esoteric PEM features such as inter-block
                                              comments and block headers are stripped.  Certificates are deduplicated.
                                              The ordering of certificates within the file is arbitrary, and Kubelet
                                              may change the order over time.
                                            properties:
                                              labelSelector:
                                                description: |-
                                                  Select all ClusterTrustBundles that match this label selector.  Only has
                                                  effect if signerName is set.  Mutually-exclusive with name.  If unset,
                                                  interpreted as "match nothing".  If set but empty, interpreted as "match
                                                  everything".
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              name:
                                                description: |-
                                                  Select a single ClusterTrustBundle by object name.  Mutually-exclusive
                                                  with signerName and labelSelector.
                                                type: string
                                              optional:
                                                description: |-
                                                  If true, don't block pod startup if the referenced ClusterTrustBundle(s)
                                                  aren't available.  If using name, then the named ClusterTrustBundle is
                                                  allowed not to exist.  If using signerName, then the combination of
                                                  signerName and labelSelector is allowed to match zero
                                                  ClusterTrustBundles.
                                                type: boolean
                                              path:
                                                description: Relative path from the
                                                  volume root to write the bundle.
                                                type: string
                                              signerName:
                                                description: |-
                                                  Select all ClusterTrustBundles that match this signer name.
                                                  Mutually-exclusive with name.  The contents of all selected
                                                  ClusterTrustBundles will be unified and deduplicated.
                                                type: string
                                            required:
                                            - path
                                            type: object
                                          configMap:
                                            description: configMap information about
                                              the configMap data to project
                                            properties:
                                              items:
                                                description: |-
                                                  items if unspecified, each key-value pair in the Data field of the referenced
                                                  ConfigMap will be projected into the volume as a file whose name is the
                                                  key and content is the value. If specified, the listed keys will be
                                                  projected into the specified paths, and unlisted keys will not be
                                                  present. If a key is specified which is not present in the ConfigMap,
                                                  the volume setup will error unless it is marked optional. Paths must be
                                                  relative and may not contain the '..' path or start with '..'.
                                                items:
                                                  description: Maps a string key to
                                                    a path within a volume.
                                                  properties:
                                                    key:
                                                      description: key is the key
                                                        to project.
                                                      type: string
                                                    mode:
                                                      description: |-
                                                        mode is Optional: mode bits used to set permissions on this file.
                                                        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                        If not specified, the volume defaultMode will be used.
                                                        This might be in conflict with other options that affect the file
                                                        mode, like fsGroup, and the result can be other mode bits set.
                                                      format: int32
                                                      type: integer
                                                    path:
                                                      description: |-
                                                        path is the relative path of the file to map the key to.
                                                        May not be an absolute path.
                                                        May not contain the path element '..'.
                                                        May not start with the string '..'.
                                                      type: string
                                                  required:
                                                  - key
                                                  - path
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: optional specify whether
                                                  the ConfigMap or its keys must be
                                                  defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          downwardAPI:
                                            description: downwardAPI information about
                                              the downwardAPI data to project
                                            properties:
                                              items:
                                                description: Items is a list of DownwardAPIVolume
                                                  file
                                                items:
                                                  description: DownwardAPIVolumeFile
                                                    represents information to create
                                                    the file containing the pod field
                                                  properties:
                                                    fieldRef:
                                                      description: 'Required: Selects
                                                        a field of the pod: only annotations,
                                                        labels, name, namespace and
                                                        uid are supported.'
                                                      properties:
                                                        apiVersion:
                                                          description: Version of
                                                            the schema the FieldPath
                                                            is written in terms of,
                                                            defaults to "v1".
                                                          type: string
                                                        fieldPath:
                                                          description: Path of the
                                                            field to select in the
                                                            specified API version.
                                                          type: string
                                                      required:
                                                      - fieldPath
                                                      type: object
                                                      x-kubernetes-map-type: atomic
                                                    mode:
                                                      description: |-
                                                        Optional: mode bits used to set permissions on this file, must be an octal value
                                                        between 0000 and 0777 or a decimal value between 0 and 511.
                                                        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                        If not specified, the volume defaultMode will be used.
                                                        This might be in conflict with other options that affect the file
                                                        mode, like fsGroup, and the result can be other mode bits set.
                                                      format: int32
                                                      type: integer
                                                    path:
                                                      description: 'Required: Path
                                                        is  the relative path name
                                                        of the file to be created.
                                                        Must not be absolute or contain
                                                        the ''..'' path. Must be utf-8
                                                        encoded. The first item of
                                                        the relative path must not
                                                        start with ''..'''
                                                      type: string
                                                    resourceFieldRef:
                                                      description: |-
                                                        Selects a resource of the container: only resources limits and requests
                                                        (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                                      properties:
                                                        containerName:
                                                          description: 'Container
                                                            name: required for volumes,
                                                            optional for env vars'
                                                          type: string
                                                        divisor:
                                                          anyOf:
                                                          - type: integer
                                                          - type: string
                                                          description: Specifies the
                                                            output format of the exposed
                                                            resources, defaults to
                                                            "1"
                                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                          x-kubernetes-int-or-string: true
                                                        resource:
                                                          description: 'Required:
                                                            resource to select'
                                                          type: string
                                                      required:
                                                      - resource
                                                      type: object
                                                      x-kubernetes-map-type: atomic
                                                  required:
                                                  - path
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            type: object
                                          secret:
                                            description: secret information about
                                              the secret data to project
                                            properties:
                                              items:
                                                description: |-
                                                  items if unspecified, each key-value pair in the Data field of the referenced
                                                  Secret will be projected into the volume as a file whose name is the
                                                  key and content is the value. If specified, the listed keys will be
                                                  projected into the specified paths, and unlisted keys will not be
                                                  present. If a key is specified which is not present in the Secret,
                                                  the volume setup will error unless it is marked optional. Paths must be
                                                  relative and may not contain the '..' path or start with '..'.
                                                items:
                                                  description: Maps a string key to
                                                    a path within a volume.
                                                  properties:
                                                    key:
                                                      description: key is the key
                                                        to project.
                                                      type: string
                                                    mode:
                                                      description: |-
                                                        mode is Optional: mode bits used to set permissions on this file.
                                                        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                        If not specified, the volume defaultMode will be used.
                                                        This might be in conflict with other options that affect the file
                                                        mode, like fsGroup, and the result can be other mode bits set.
                                                      format: int32
                                                      type: integer
                                                    path:
                                                      description: |-
                                                        path is the relative path of the file to map the key to.
                                                        May not be an absolute path.
                                                        May not contain the path element '..'.
                                                        May not start with the string '..'.
                                                      type: string
                                                  required:
                                                  - key
                                                  - path
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: optional field specify
                                                  whether the Secret or its key must
                                                  be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          serviceAccountToken:
                                            description: serviceAccountToken is information
                                              about the serviceAccountToken data to
                                              project
                                            properties:
                                              audience:
                                                description: |-
                                                  audience is the intended audience of the token. A recipient of a token
                                                  must identify itself with an identifier specified in the audience of the
                                                  token, and otherwise should reject the token. The audience defaults to the
                                                  identifier of the apiserver.
                                                type: string
                                              expirationSeconds:
                                                description: |-
                                                  expirationSeconds is the requested duration of validity of the service
                                                  account token. As the token approaches expiration, the kubelet volume
                                                  plugin will proactively rotate the service account token. The kubelet will
                                                  start trying to rotate the token if the token is older than 80 percent of
                                                  its time to live or if the token is older than 24 hours.Defaults to 1 hour
                                                  and must be at least 10 minutes.
                                                format: int64
                                                type: integer
                                              path:
                                                description: |-
                                                  path is the path relative to the mount point of the file to project the
                                                  token into.
                                                type: string
                                            required:
                                            - path
                                            type: object
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  type: object
                                quobyte:
                                  description: |-
                                    quobyte represents a Quobyte mount on the host that shares a pod's lifetime.
                                    Deprecated: Quobyte is deprecated and the in-tree quobyte type is no longer supported.
                                  properties:
                                    group:
                                      description: |-
                                        group to map volume access to
                                        Default is no group
                                      type: string
                                    readOnly:
                                      description: |-
                                        readOnly here will force the Quobyte volume to be mounted with read-only permissions.
                                        Defaults to false.
                                      type: boolean
                                    registry:
                                      description: |-
                                        registry represents a single or multiple Quobyte Registry services
                                        specified as a string as host:port pair (multiple entries are separated with commas)
                                        which acts as the central registry for volumes
                                      type: string
                                    tenant:
                                      description: |-
                                        tenant owning the given Quobyte volume in the Backend
                                        Used with dynamically provisioned Quobyte volumes, value is set by the plugin
                                      type: string
                                    user:
                                      description: |-
                                        user to map volume access to
                                        Defaults to serivceaccount user
                                      type: string
                                    volume:
                                      description: volume is a string that references
                                        an already created Quobyte volume by name.
                                      type: string
                                  required:
                                  - registry
                                  - volume
                                  type: object
                                rbd:
                                  description: |-
                                    rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.
                                    Deprecated: RBD is deprecated and the in-tree rbd type is no longer supported.
                                    More info: https://examples.k8s.io/volumes/rbd/README.md
                                  properties:
                                    fsType:
                                      description: |-
                                        fsType is the filesystem type of the volume that you want to mount.
                                        Tip: Ensure that the filesystem type is supported by the host operating system.
                                        Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                      type: string
                                    image:
                                      description: |-
                                        image is the rados image name.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                      type: string
                                    keyring:
                                      default: /etc/ceph/keyring
                                      description: |-
                                        keyring is the path to key ring for RBDUser.
                                        Default is /etc/ceph/keyring.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                      type: string
                                    monitors:
                                      description: |-
                                        monitors is a collection of Ceph monitors.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    pool:
                                      default: rbd
                                      description: |-
                                        pool is the rados pool name.
                                        Default is rbd.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                      type: string
                                    readOnly:
                                      description: |-
                                        readOnly here will force the ReadOnly setting in VolumeMounts.
                                        Defaults to false.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                      type: boolean
                                    secretRef:
                                      description: |-
                                        secretRef is name of the authentication secret for RBDUser. If provided
                                        overrides keyring.
                                        Default is nil.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                      properties:
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    user:
                                      default: admin
                                      description: |-
                                        user is the rados user name.
                                        Default is admin.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                      type: string
                                  required:
                                  - image
                                  - monitors
                                  type: object
                                scaleIO:
                                  description: |-
                                    scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
                                    Deprecated: ScaleIO is deprecated and the in-tree scaleIO type is no longer supported.
                                  properties:
                                    fsType:
                                      default: xfs
                                      description: |-
                                        fsType is the filesystem type to mount.
                                        Must be a filesystem type supported by the host operating system.
                                        Ex. "ext4", "xfs", "ntfs".
                                        Default is "xfs".
                                      type: string
                                    gateway:
                                      description: gateway is the host address of
                                        the ScaleIO API Gateway.
                                      type: string
                                    protectionDomain:
                                      description: protectionDomain is the name of
                                        the ScaleIO Protection Domain for the configured
                                        storage.
                                      type: string
                                    readOnly:
                                      description: |-
                                        readOnly Defaults to false (read/write). ReadOnly here will force
                                        the ReadOnly setting in VolumeMounts.
                                      type: boolean
                                    secretRef:
                                      description: |-
                                        secretRef references to the secret for ScaleIO user and other
                                        sensitive information. If this is not provided, Login operation will fail.
                                      properties:
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    sslEnabled:
                                      description: sslEnabled Flag enable/disable
                                        SSL communication with Gateway, default false
                                      type: boolean
                                    storageMode:
                                      default: ThinProvisioned
                                      description: |-
                                        storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
                                        Default is ThinProvisioned.
                                      type: string
                                    storagePool:
                                      description: storagePool is the ScaleIO Storage
                                        Pool associated with the protection domain.
                                      type: string
                                    system:
                                      description: system is the name of the storage
                                        system as configured in ScaleIO.
                                      type: string
                                    volumeName:
                                      description: |-
                                        volumeName is the name of a volume already created in the ScaleIO system
                                        that is associated with this volume source.
                                      type: string
                                  required:
                                  - gateway
                                  - secretRef
                                  - system
                                  type: object
                                secret:
                                  description: |-
                                    secret represents a secret that should populate this volume.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                                  properties:
                                    defaultMode:
                                      description: |-
                                        defaultMode is Optional: mode bits used to set permissions on created files by default.
                                        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                        YAML accepts both octal and decimal values, JSON requires decimal values
                                        for mode bits. Defaults to 0644.
                                        Directories within the path are not affected by this setting.
                                        This might be in conflict with other options that affect the file
                                        mode, like fsGroup, and the result can be other mode bits set.
                                      format: int32
                                      type: integer
                                    items:
                                      description: |-
                                        items If unspecified, each key-value pair in the Data field of the referenced
                                        Secret will be projected into the volume as a file whose name is the
                                        key and content is the value. If specified, the listed keys will be
                                        projected into the specified paths, and unlisted keys will not be
                                        present. If a key is specified which is not present in the Secret,
                                        the volume setup will error unless it is marked optional. Paths must be
                                        relative and may not contain the '..' path or start with '..'.
                                      items:
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: |-
                                              mode is Optional: mode bits used to set permissions on this file.
                                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                              If not specified, the volume defaultMode will be used.
                                              This might be in conflict with other options that affect the file
                                              mode, like fsGroup, and the result can be other mode bits set.
                                            format: int32
                                            type: integer
                                          path:
                                            description: |-
                                              path is the relative path of the file to map the key to.
                                              May not be an absolute path.
                                              May not contain the path element '..'.
                                              May not start with the string '..'.
                                            type: string
                                        required:
                                        - key
                                        - path
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    optional:
                                      description: optional field specify whether
                                        the Secret or its keys must be defined
                                      type: boolean
                                    secretName:
                                      description: |-
                                        secretName is the name of the secret in the pod's namespace to use.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                                      type: string
                                  type: object
                                storageos:
                                  description: |-
                                    storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
                                    Deprecated: StorageOS is deprecated and the in-tree storageos type is no longer supported.
                                  properties:
                                    fsType:
                                      description: |-
                                        fsType is the filesystem type to mount.
                                        Must be a filesystem type supported by the host operating system.
                                        Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                      type: string
                                    readOnly:
                                      description: |-
                                        readOnly defaults to false (read/write). ReadOnly here will force
                                        the ReadOnly setting in VolumeMounts.
                                      type: boolean
                                    secretRef:
                                      description: |-
                                        secretRef specifies the secret to use for obtaining the StorageOS API
                                        credentials.  If not specified, default values will be attempted.
                                      properties:
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    volumeName:
                                      description: |-
                                        volumeName is the human-readable name of the StorageOS volume.  Volume
                                        names are only unique within a namespace.
                                      type: string
                                    volumeNamespace:
                                      description: |-
                                        volumeNamespace specifies the scope of the volume within StorageOS.  If no
                                        namespace is specified then the Pod's namespace will be used.  This allows the
                                        Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
                                        Set VolumeName to any name to override the default behaviour.
                                        Set to "default" if you are not using namespaces within StorageOS.
                                        Namespaces that do not pre-exist within StorageOS will be created.
                                      type: string
                                  type: object
                                vsphereVolume:
                                  description: |-
                                    vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine.
                                    Deprecated: VsphereVolume is deprecated. All operations for the in-tree vsphereVolume type
                                    are redirected to the csi.vsphere.vmware.com CSI driver.
                                  properties:
                                    fsType:
                                      description: |-
                                        fsType is filesystem type to mount.
                                        Must be a filesystem type supported by the host operating system.
                                        Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                      type: string
                                    storagePolicyID:
                                      description: storagePolicyID is the storage
                                        Policy Based Management (SPBM) profile ID
                                        associated with the StoragePolicyName.
                                      type: string
                                    storagePolicyName:
                                      description: storagePolicyName is the storage
                                        Policy Based Management (SPBM) profile name.
                                      type: string
                                    volumePath:
                                      description: volumePath is the path that identifies
                                        vSphere volume vmdk
                                      type: string
                                  required:
                                  - volumePath
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                        required:
                        - containers
                        type: object
                    type: object
                  replicas:
                    description: |-
                      Replicas describes the number of desired pods.
                      This is a pointer to distinguish between explicit zero and not specified.
                      This is effectively shorthand for setting a scaling minimum and maximum
                      to the same value. This field and the scaling field are mutually exclusive:
                      You can only configure one or the other.
                    format: int32
                    type: integer
                  rollout:
                    description: Rollout describes a custom rollout strategy.
                    properties:
                      strategy:
                        description: Strategy contains the deployment strategy for
                          rollout.
                        properties:
                          blueGreen:
                            description: BlueGreen holds the options specific for
                              Blue Green Deployments.
                            properties:
                              promotion:
                                description: Promotion defines how the operator handles
                                  promotion of resources.
                                properties:
                                  strategy:
                                    default: BreakBeforePromotion
                                    description: |-
                                      Strategy indicates how you want the operator to handle the promotion of
                                      the preview (green) resources (Deployments and Services) after all workflows
                                      and tests succeed, OR if you even want it to break before performing
                                      the promotion to allow manual inspection.
                                    enum:
                                    - BreakBeforePromotion
                                    type: string
                                required:
                                - strategy
                                type: object
                              resources:
                                default:
                                  plan:
                                    deployment: ScaleDownOnPromotionScaleUpOnRollout
                                description: |-
                                  Resources controls what happens to operator managed resources during or
                                  after a rollout.
                                properties:
                                  plan:
                                    default:
                                      deployment: ScaleDownOnPromotionScaleUpOnRollout
                                    description: Plan defines the resource plan for
                                      managing resources during and after a rollout.
                                    properties:
                                      deployment:
                                        default: ScaleDownOnPromotionScaleUpOnRollout
                                        description: Deployment describes how the
                                          operator manages Deployments during and
                                          after a rollout.
                                        enum:
                                        - ScaleDownOnPromotionScaleUpOnRollout
                                        type: string
                                    type: object
                                type: object
                            required:
                            - promotion
                            type: object
                        type: object
                    required:
                    - strategy
                    type: object
                  scaling:
                    description: Scaling defines the scaling options for the deployment.
                    properties:
                      horizontal:
                        description: HorizontalScaling defines horizontal scaling
                          options for the deployment.
                        properties:
                          behavior:
                            description: |-
                              behavior configures the scaling behavior of the target
                              in both Up and Down directions (scaleUp and scaleDown fields respectively).
                              If not set, the default HPAScalingRules for scale up and scale down are used.
                            properties:
                              scaleDown:
                                description: |-
                                  scaleDown is scaling policy for scaling Down.
                                  If not set, the default value is to allow to scale down to minReplicas pods, with a
                                  300 second stabilization window (i.e., the highest recommendation for
                                  the last 300sec is used).
                                properties:
                                  policies:
                                    description: |-
                                      policies is a list of potential scaling polices which can be used during scaling.
                                      At least one policy must be specified, otherwise the HPAScalingRules will be discarded as invalid
                                    items:
                                      description: HPAScalingPolicy is a single policy
                                        which must hold true for a specified past
                                        interval.
                                      properties:
                                        periodSeconds:
                                          description: |-
                                            periodSeconds specifies the window of time for which the policy should hold true.
                                            PeriodSeconds must be greater than zero and less than or equal to 1800 (30 min).
                                          format: int32
                                          type: integer
                                        type:
                                          description: type is used to specify the
                                            scaling policy.
                                          type: string
                                        value:
                                          description: |-
                                            value contains the amount of change which is permitted by the policy.
                                            It must be greater than zero
                                          format: int32
                                          type: integer
                                      required:
                                      - periodSeconds
                                      - type
                                      - value
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  selectPolicy:
                                    description: |-
                                      selectPolicy is used to specify which policy should be used.
                                      If not set, the default value Max is used.
                                    type: string
                                  stabilizationWindowSeconds:
                                    description: |-
                                      stabilizationWindowSeconds is the number of seconds for which past recommendations should be
                                      considered while scaling up or scaling down.
                                      StabilizationWindowSeconds must be greater than or equal to zero and less than or equal to 3600 (one hour).
                                      If not set, use the default values:
                                      - For scale up: 0 (i.e. no stabilization is done).
                                      - For scale down: 300 (i.e. the stabilization window is 300 seconds long).
                                    format: int32
                                    type: integer
                                type: object
                              scaleUp:
                                description: |-
                                  scaleUp is scaling policy for scaling Up.
                                  If not set, the default value is the higher of:
                                    * increase no more than 4 pods per 60 seconds
                                    * double the number of pods per 60 seconds
                                  No stabilization is used.
                                properties:
                                  policies:
                                    description: |-
                                      policies is a list of potential scaling polices which can be used during scaling.
                                      At least one policy must be specified, otherwise the HPAScalingRules will be discarded as invalid
                                    items:
                                      description: HPAScalingPolicy is a single policy
                                        which must hold true for a specified past
                                        interval.
                                      properties:
                                        periodSeconds:
                                          description: |-
                                            periodSeconds specifies the window of time for which the policy should hold true.
                                            PeriodSeconds must be greater than zero and less than or equal to 1800 (30 min).
                                          format: int32
                                          type: integer
                                        type:
                                          description: type is used to specify the
                                            scaling policy.
                                          type: string
                                        value:
                                          description: |-
                                            value contains the amount of change which is permitted by the policy.
                                            It must be greater than zero
                                          format: int32
                                          type: integer
                                      required:
                                      - periodSeconds
                                      - type
                                      - value
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  selectPolicy:
                                    description: |-
                                      selectPolicy is used to specify which policy should be used.
                                      If not set, the default value Max is used.
                                    type: string
                                  stabilizationWindowSeconds:
                                    description: |-
                                      stabilizationWindowSeconds is the number of seconds for which past recommendations should be
                                      considered while scaling up or scaling down.
                                      StabilizationWindowSeconds must be greater than or equal to zero and less than or equal to 3600 (one hour).
                                      If not set, use the default values:
                                      - For scale up: 0 (i.e. no stabilization is done).
                                      - For scale down: 300 (i.e. the stabilization window is 300 seconds long).
                                    format: int32
                                    type: integer
                                type: object
                            type: object
                          maxReplicas:
                            description: |-
                              maxReplicas is the upper limit for the number of replicas to which the autoscaler can scale up.
                              It cannot be less that minReplicas.
                            format: int32
                            type: integer
                          metrics:
                            description: |-
                              metrics contains the specifications for which to use to calculate the
                              desired replica count (the maximum replica count across all metrics will
                              be used).  The desired replica count is calculated multiplying the
                              ratio between the target value and the current value by the current
                              number of pods.  Ergo, metrics used must decrease as the pod count is
                              increased, and vice-versa.  See the individual metric source types for
                              more information about how each type of metric must respond.
                              If not set, the default metric will be set to 80% average CPU utilization.
                            items:
                              description: |-
                                MetricSpec specifies how to scale based on a single metric
                                (only `type` and one other matching field should be set at once).
                              properties:
                                containerResource:
                                  description: |-
                                    containerResource refers to a resource metric (such as those specified in
                                    requests and limits) known to Kubernetes describing a single container in
                                    each pod of the current scale target (e.g. CPU or memory). Such metrics are
                                    built in to Kubernetes, and have special scaling options on top of those
                                    available to normal per-pod metrics using the "pods" source.
                                  properties:
                                    container:
                                      description: container is the name of the container
                                        in the pods of the scaling target
                                      type: string
                                    name:
                                      description: name is the name of the resource
                                        in question.
                                      type: string
                                    target:
                                      description: target specifies the target value
                                        for the given metric
                                      properties:
                                        averageUtilization:
                                          description: |-
                                            averageUtilization is the target value of the average of the
                                            resource metric across all relevant pods, represented as a percentage of
                                            the requested value of the resource for the pods.
                                            Currently only valid for Resource metric source type
                                          format: int32
                                          type: integer
                                        averageValue:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            averageValue is the target value of the average of the
                                            metric across all relevant pods (as a quantity)
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        type:
                                          description: type represents whether the
                                            metric type is Utilization, Value, or
                                            AverageValue
                                          type: string
                                        value:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: value is the target value of
                                            the metric (as a quantity).
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - type
                                      type: object
                                  required:
                                  - container
                                  - name
                                  - target
                                  type: object
                                external:
                                  description: |-
                                    external refers to a global metric that is not associated
                                    with any Kubernetes object. It allows autoscaling based on information
                                    coming from components running outside of cluster
                                    (for example length of queue in cloud messaging service, or
                                    QPS from loadbalancer running outside of cluster).
                                  properties:
                                    metric:
                                      description: metric identifies the target metric
                                        by name and selector
                                      properties:
                                        name:
                                          description: name is the name of the given
                                            metric
                                          type: string
                                        selector:
                                          description: |-
                                            selector is the string-encoded form of a standard kubernetes label selector for the given metric
                                            When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping.
                                            When unset, just the metricName will be used to gather metrics.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: |-
                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                  relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      operator represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      values is an array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. This array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      required:
                                      - name
                                      type: object
                                    target:
                                      description: target specifies the target value
                                        for the given metric
                                      properties:
                                        averageUtilization:
                                          description: |-
                                            averageUtilization is the target value of the average of the
                                            resource metric across all relevant pods, represented as a percentage of
                                            the requested value of the resource for the pods.
                                            Currently only valid for Resource metric source type
                                          format: int32
                                          type: integer
                                        averageValue:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            averageValue is the target value of the average of the
                                            metric across all relevant pods (as a quantity)
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        type:
                                          description: type represents whether the
                                            metric type is Utilization, Value, or
                                            AverageValue
                                          type: string
                                        value:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: value is the target value of
                                            the metric (as a quantity).
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - type
                                      type: object
                                  required:
                                  - metric
                                  - target
                                  type: object
                                object:
                                  description: |-
                                    object refers to a metric describing a single kubernetes object
                                    (for example, hits-per-second on an Ingress object).
                                  properties:
                                    describedObject:
                                      description: describedObject specifies the descriptions
                                        of a object,such as kind,name apiVersion
                                      properties:
                                        apiVersion:
                                          description: apiVersion is the API version
                                            of the referent
                                          type: string
                                        kind:
                                          description: 'kind is the kind of the referent;
                                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                          type: string
                                        name:
                                          description: 'name is the name of the referent;
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                          type: string
                                      required:
                                      - kind
                                      - name
                                      type: object
                                    metric:
                                      description: metric identifies the target metric
                                        by name and selector
                                      properties:
                                        name:
                                          description: name is the name of the given
                                            metric
                                          type: string
                                        selector:
                                          description: |-
                                            selector is the string-encoded form of a standard kubernetes label selector for the given metric
                                            When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping.
                                            When unset, just the metricName will be used to gather metrics.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: |-
                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                  relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      operator represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      values is an array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. This array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      required:
                                      - name
                                      type: object
                                    target:
                                      description: target specifies the target value
                                        for the given metric
                                      properties:
                                        averageUtilization:
                                          description: |-
                                            averageUtilization is the target value of the average of the
                                            resource metric across all relevant pods, represented as a percentage of
                                            the requested value of the resource for the pods.
                                            Currently only valid for Resource metric source type
                                          format: int32
                                          type: integer
                                        averageValue:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            averageValue is the target value of the average of the
                                            metric across all relevant pods (as a quantity)
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        type:
                                          description: type represents whether the
                                            metric type is Utilization, Value, or
                                            AverageValue
                                          type: string
                                        value:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: value is the target value of
                                            the metric (as a quantity).
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - type
                                      type: object
                                  required:
                                  - describedObject
                                  - metric
                                  - target
                                  type: object
                                pods:
                                  description: |-
                                    pods refers to a metric describing each pod in the current scale target
                                    (for example, transactions-processed-per-second).  The values will be
                                    averaged together before being compared to the target value.
                                  properties:
                                    metric:
                                      description: metric identifies the target metric
                                        by name and selector
                                      properties:
                                        name:
                                          description: name is the name of the given
                                            metric
                                          type: string
                                        selector:
                                          description: |-
                                            selector is the string-encoded form of a standard kubernetes label selector for the given metric
                                            When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping.
                                            When unset, just the metricName will be used to gather metrics.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: |-
                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                  relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      operator represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      values is an array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. This array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      required:
                                      - name
                                      type: object
                                    target:
                                      description: target specifies the target value
                                        for the given metric
                                      properties:
                                        averageUtilization:
                                          description: |-
                                            averageUtilization is the target value of the average of the
                                            resource metric across all relevant pods, represented as a percentage of
                                            the requested value of the resource for the pods.
                                            Currently only valid for Resource metric source type
                                          format: int32
                                          type: integer
                                        averageValue:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            averageValue is the target value of the average of the
                                            metric across all relevant pods (as a quantity)
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        type:
                                          description: type represents whether the
                                            metric type is Utilization, Value, or
                                            AverageValue
                                          type: string
                                        value:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: value is the target value of
                                            the metric (as a quantity).
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - type
                                      type: object
                                  required:
                                  - metric
                                  - target
                                  type: object
                                resource:
                                  description: |-
                                    resource refers to a resource metric (such as those specified in
                                    requests and limits) known to Kubernetes describing each pod in the
                                    current scale target (e.g. CPU or memory). Such metrics are built in to
                                    Kubernetes, and have special scaling options on top of those available
                                    to normal per-pod metrics using the "pods" source.
                                  properties:
                                    name:
                                      description: name is the name of the resource
                                        in question.
                                      type: string
                                    target:
                                      description: target specifies the target value
                                        for the given metric
                                      properties:
                                        averageUtilization:
                                          description: |-
                                            averageUtilization is the target value of the average of the
                                            resource metric across all relevant pods, represented as a percentage of
                                            the requested value of the resource for the pods.
                                            Currently only valid for Resource metric source type
                                          format: int32
                                          type: integer
                                        averageValue:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            averageValue is the target value of the average of the
                                            metric across all relevant pods (as a quantity)
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        type:
                                          description: type represents whether the
                                            metric type is Utilization, Value, or
                                            AverageValue
                                          type: string
                                        value:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: value is the target value of
                                            the metric (as a quantity).
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - type
                                      type: object
                                  required:
                                  - name
                                  - target
                                  type: object
                                type:
                                  description: |-
                                    type is the type of metric source.  It should be one of "ContainerResource", "External",
                                    "Object", "Pods" or "Resource", each mapping to a matching field in the object.
                                  type: string
                              required:
                              - type
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          minReplicas:
                            description: |-
                              minReplicas is the lower limit for the number of replicas to which the autoscaler
                              can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the
                              alpha feature gate HPAScaleToZero is enabled and at least one Object or External
                              metric is configured.  Scaling is active as long as at least one metric value is
                              available.
                            format: int32
                            type: integer
                        required:
                        - maxReplicas
                        type: object
                    type: object
                type: object
                x-kubernetes-validations:
                - message: Using both replicas and scaling fields is not allowed.
                  rule: '!(has(self.scaling) && has(self.replicas))'
              extensions:
                description: |-
                  Extensions provide additional or replacement features for the DataPlane
                  resources to influence or enhance functionality.
                  NOTE: since we have one extension only (KonnectExtension), we limit the amount of extensions to 1.
                items:
                  description: |-
                    ExtensionRef corresponds to another resource in the Kubernetes cluster which
                    defines extended behavior for a resource (e.g. ControlPlane).
                  properties:
                    group:
                      default: gateway-operator.konghq.com
                      description: Group is the group of the extension resource.
                      type: string
                    kind:
                      description: Kind is kind of the extension resource.
                      type: string
                    name:
                      description: Name is the name of the referred resource.
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace is the namespace of the referred resource.

                        For namespace-scoped resources if no Namespace is provided then the
                        namespace of the parent object MUST be used.

                        This field MUST not be set when referring to cluster-scoped resources.
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                maxItems: 1
                minItems: 0
                type: array
              network:
                description: DataPlaneNetworkOptions defines network related options
                  for a DataPlane.
                properties:
                  konnectCertificate:
                    description: |-
                      KonnectCA is the certificate authority that the operator uses to provision client certificates the DataPlane
                      will use to authenticate itself to the Konnect API. Requires Enterprise.
                    properties:
                      issuer:
                        description: |-
                          Issuer is the cert-manager Issuer or ClusterIssuer the operator will use to request certificates. When Namespace
                          is set, the operator will retrieve the Issuer with that Name in that Namespace. When Namespace is omitted, the
                          operator will retrieve the ClusterIssuer with that name.
                        properties:
                          name:
                            type: string
                          namespace:
                            type: string
                        required:
                        - name
                        type: object
                    required:
                    - issuer
                    type: object
                  services:
                    description: |-
                      Services indicates the configuration of Kubernetes Services needed for
                      the topology of various forms of traffic (including ingress, e.t.c.) to
                      and from the DataPlane.
                    properties:
                      ingress:
                        description: |-
                          Ingress is the Kubernetes Service that will be used to expose ingress
                          traffic for the DataPlane. Here you can determine whether the DataPlane
                          will be exposed outside the cluster (e.g. using a LoadBalancer type
                          Services) or only internally (e.g. ClusterIP), and inject any additional
                          annotations you need on the service (for instance, if you need to
                          influence a cloud provider LoadBalancer configuration).
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: |-
                              Annotations is an unstructured key value map stored with a resource that may be
                              set by external tools to store and retrieve arbitrary metadata. They are not
                              queryable and should be preserved when modifying objects.

                              More info: http://kubernetes.io/docs/user-guide/annotations
                            type: object
                          externalTrafficPolicy:
                            description: |-
                              ExternalTrafficPolicy describes how nodes distribute service traffic they
                              receive on one of the Service's "externally-facing" addresses (NodePorts,
                              ExternalIPs, and LoadBalancer IPs). If set to "Local", the proxy will configure
                              the service in a way that assumes that external load balancers will take care
                              of balancing the service traffic between nodes, and so each node will deliver
                              traffic only to the node-local endpoints of the service, without masquerading
                              the client source IP. (Traffic mistakenly sent to a node with no endpoints will
                              be dropped.) The default value, "Cluster", uses the standard behavior of
                              routing to all endpoints evenly (possibly modified by topology and other
                              features). Note that traffic sent to an External IP or LoadBalancer IP from
                              within the cluster will always get "Cluster" semantics, but clients sending to
                              a NodePort from within the cluster may need to take traffic policy into account
                              when picking a node.

                              More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
                            enum:
                            - Cluster
                            - Local
                            type: string
                          name:
                            description: |-
                              Name defines the name of the service.
                              If Name is empty, the controller will generate a service name from the owning object.
                            type: string
                          ports:
                            description: |-
                              Ports defines the list of ports that are exposed by the service.
                              The ports field allows defining the name, port and targetPort of
                              the underlying service ports, while the protocol is defaulted to TCP,
                              as it is the only protocol currently supported.
                            items:
                              description: DataPlaneServicePort contains information
                                on service's port.
                              properties:
                                name:
                                  description: |-
                                    The name of this port within the service. This must be a DNS_LABEL.
                                    All ports within a ServiceSpec must have unique names. When considering
                                    the endpoints for a Service, this must match the 'name' field in the
                                    EndpointPort.
                                    Optional if only one ServicePort is defined on this service.
                                  type: string
                                port:
                                  description: The port that will be exposed by this
                                    service.
                                  format: int32
                                  type: integer
                                targetPort:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: |-
                                    Number or name of the port to access on the pods targeted by the service.
                                    Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                    If this is a string, it will be looked up as a named port in the
                                    target Pod's container ports. If this is not specified, the value
                                    of the 'port' field is used (an identity map).
                                    This field is ignored for services with clusterIP=None, and should be
                                    omitted or set equal to the 'port' field.
                                    More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            maxItems: 4
                            type: array
                          type:
                            default: LoadBalancer
                            description: |-
                              Type determines how the Service is exposed.
                              Defaults to `LoadBalancer`.

                              Valid options are `LoadBalancer` and `ClusterIP`.

                              `ClusterIP` allocates a cluster-internal IP address for load-balancing
                              to endpoints.

                              `LoadBalancer` builds on NodePort and creates an external load-balancer
                              (if supported in the current cloud) which routes to the same endpoints
                              as the clusterIP.

                              More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
                            enum:
                            - LoadBalancer
                            - ClusterIP
                            type: string
                        type: object
                        x-kubernetes-validations:
                        - message: Cannot set ExternalTrafficPolicy for ClusterIP
                            service.
                          rule: 'has(self.type) && self.type == ''ClusterIP'' ? !has(self.externalTrafficPolicy)
                            : true'
                    type: object
                type: object
              pluginsToInstall:
                description: |-
                  PluginsToInstall is a list of KongPluginInstallation resources that
                  will be installed and available in the DataPlane.
                items:
                  description: NamespacedName is a resource identified by name and
                    optional namespace.
                  properties:
                    name:
                      type: string
                    namespace:
                      type: string
                  required:
                  - name
                  type: object
                type: array
              resources:
                description: |-
                  DataPlaneResources defines the resources that will be created and managed
                  for the DataPlane.
                properties:
                  podDisruptionBudget:
                    description: |-
                      PodDisruptionBudget is the configuration for the PodDisruptionBudget
                      that will be created for the DataPlane.
                    properties:
                      spec:
                        description: |-
                          Spec defines the specification of the PodDisruptionBudget.
                          Selector is managed by the controller and cannot be set by the user.
                        properties:
                          maxUnavailable:
                            anyOf:
                            - type: integer
                            - type: string
                            description: |-
                              An eviction is allowed if at most "maxUnavailable" pods selected by
                              "selector" are unavailable after the eviction, i.e. even in absence of
                              the evicted pod. For example, one can prevent all voluntary evictions
                              by specifying 0. This is a mutually exclusive setting with "minAvailable".
                            x-kubernetes-int-or-string: true
                          minAvailable:
                            anyOf:
                            - type: integer
                            - type: string
                            description: |-
                              An eviction is allowed if at least "minAvailable" pods selected by
                              "selector" will still be available after the eviction, i.e. even in the
                              absence of the evicted pod.  So for example you can prevent all voluntary
                              evictions by specifying "100%".
                            x-kubernetes-int-or-string: true
                          unhealthyPodEvictionPolicy:
                            description: |-
                              UnhealthyPodEvictionPolicy defines the criteria for when unhealthy pods
                              should be considered for eviction. Current implementation considers healthy pods,
                              as pods that have status.conditions item with type="Ready",status="True".

                              Valid policies are IfHealthyBudget and AlwaysAllow.
                              If no policy is specified, the default behavior will be used,
                              which corresponds to the IfHealthyBudget policy.

                              IfHealthyBudget policy means that running pods (status.phase="Running"),
                              but not yet healthy can be evicted only if the guarded application is not
                              disrupted (status.currentHealthy is at least equal to status.desiredHealthy).
                              Healthy pods will be subject to the PDB for eviction.

                              AlwaysAllow policy means that all running pods (status.phase="Running"),
                              but not yet healthy are considered disrupted and can be evicted regardless
                              of whether the criteria in a PDB is met. This means perspective running
                              pods of a disrupted application might not get a chance to become healthy.
                              Healthy pods will be subject to the PDB for eviction.

                              Additional policies may be added in the future.
                              Clients making eviction decisions should disallow eviction of unhealthy pods
                              if they encounter an unrecognized policy in this field.

                              This field is beta-level. The eviction API uses this field when
                              the feature gate PDBUnhealthyPodEvictionPolicy is enabled (enabled by default).
                            type: string
                        type: object
                        x-kubernetes-validations:
                        - message: You can specify only one of maxUnavailable and
                            minAvailable in a single PodDisruptionBudgetSpec.
                          rule: (has(self.minAvailable) && !has(self.maxUnavailable))
                            || (!has(self.minAvailable) && has(self.maxUnavailable))
                    type: object
                type: object
            type: object
            x-kubernetes-validations:
            - message: Extension not allowed for DataPlane
              rule: 'has(self.extensions) ? self.extensions.all(e, (e.group == ''konnect.konghq.com''
                || e.group == ''gateway-operator.konghq.com'') && e.kind == ''KonnectExtension'')
                : true'
          status:
            description: DataPlaneStatus defines the observed state of DataPlane
            properties:
              addresses:
                description: Addresses lists the addresses that have actually been
                  bound to the DataPlane.
                items:
                  description: Address describes an address which can be either an
                    IP address or a hostname.
                  properties:
                    sourceType:
                      description: Source type of the address.
                      pattern: ^PublicLoadBalancer|PrivateLoadBalancer|PublicIP|PrivateIP$
                      type: string
                    type:
                      default: IPAddress
                      description: Type of the address.
                      pattern: ^IPAddress|Hostname$
                      type: string
                    value:
                      description: |-
                        Value of the address. The validity of the values will depend
                        on the type and support by the controller.

                        Examples: `1.2.3.4`, `128::1`, `my-ip-address`.
                      maxLength: 253
                      minLength: 1
                      type: string
                  required:
                  - sourceType
                  - value
                  type: object
                type: array
              conditions:
                description: Conditions describe the status of the DataPlane.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              readyReplicas:
                default: 0
                description: ReadyReplicas indicates how many replicas have reported
                  to be ready.
                format: int32
                type: integer
              replicas:
                default: 0
                description: Replicas indicates how many replicas have been set for
                  the DataPlane.
                format: int32
                type: integer
              rollout:
                description: |-
                  RolloutStatus contains information about the rollout.
                  It is set only if a rollout strategy was configured in the spec.
                properties:
                  conditions:
                    description: Conditions contains the status conditions about the
                      rollout.
                    items:
                      description: Condition contains details for one aspect of the
                        current state of this API Resource.
                      properties:
                        lastTransitionTime:
                          description: |-
                            lastTransitionTime is the last time the condition transitioned from one status to another.
                            This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                          format: date-time
                          type: string
                        message:
                          description: |-
                            message is a human readable message indicating details about the transition.
                            This may be an empty string.
                          maxLength: 32768
                          type: string
                        observedGeneration:
                          description: |-
                            observedGeneration represents the .metadata.generation that the condition was set based upon.
                            For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                            with respect to the current state of the instance.
                          format: int64
                          minimum: 0
                          type: integer
                        reason:
                          description: |-
                            reason contains a programmatic identifier indicating the reason for the condition's last transition.
                            Producers of specific condition types may define expected values and meanings for this field,
                            and whether the values are considered a guaranteed API.
                            The value should be a CamelCase string.
                            This field may not be empty.
                          maxLength: 1024
                          minLength: 1
                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                          type: string
                        status:
                          description: status of the condition, one of True, False,
                            Unknown.
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          maxLength: 316
                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          type: string
                      required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                      type: object
                    maxItems: 8
                    minItems: 1
                    type: array
                    x-kubernetes-list-map-keys:
                    - type
                    x-kubernetes-list-type: map
                  deployment:
                    description: Deployment contains the information about the preview
                      deployment.
                    properties:
                      selector:
                        description: |-
                          Selector is a stable label selector value assigned to a DataPlane rollout
                          status which is used throughout the rollout as a deterministic labels selector
                          for Services and Deployments.
                        maxLength: 512
                        minLength: 8
                        type: string
                    type: object
                  services:
                    description: |-
                      Services contain the information about the services which are available
                      through which user can access the preview deployment.
                    properties:
                      adminAPI:
                        description: |-
                          AdminAPI contains the name and the address of the preview service for Admin API.
                          Using this service users can send requests to configure the DataPlane's preview deployment.
                        properties:
                          addresses:
                            description: Addresses contains the addresses of a Service.
                            items:
                              description: Address describes an address which can
                                be either an IP address or a hostname.
                              properties:
                                sourceType:
                                  description: Source type of the address.
                                  pattern: ^PublicLoadBalancer|PrivateLoadBalancer|PublicIP|PrivateIP$
                                  type: string
                                type:
                                  default: IPAddress
                                  description: Type of the address.
                                  pattern: ^IPAddress|Hostname$
                                  type: string
                                value:
                                  description: |-
                                    Value of the address. The validity of the values will depend
                                    on the type and support by the controller.

                                    Examples: `1.2.3.4`, `128::1`, `my-ip-address`.
                                  maxLength: 253
                                  minLength: 1
                                  type: string
                              required:
                              - sourceType
                              - value
                              type: object
                            maxItems: 16
                            type: array
                          name:
                            description: Name indicates the name of the service.
                            type: string
                        required:
                        - name
                        type: object
                      ingress:
                        description: |-
                          Ingress contains the name and the address of the preview service for ingress.
                          Using this service users can send requests that will hit the preview deployment.
                        properties:
                          addresses:
                            description: Addresses contains the addresses of a Service.
                            items:
                              description: Address describes an address which can
                                be either an IP address or a hostname.
                              properties:
                                sourceType:
                                  description: Source type of the address.
                                  pattern: ^PublicLoadBalancer|PrivateLoadBalancer|PublicIP|PrivateIP$
                                  type: string
                                type:
                                  default: IPAddress
                                  description: Type of the address.
                                  pattern: ^IPAddress|Hostname$
                                  type: string
                                value:
                                  description: |-
                                    Value of the address. The validity of the values will depend
                                    on the type and support by the controller.

                                    Examples: `1.2.3.4`, `128::1`, `my-ip-address`.
                                  maxLength: 253
                                  minLength: 1
                                  type: string
                              required:
                              - sourceType
                              - value
                              type: object
                            maxItems: 16
                            type: array
                          name:
                            description: Name indicates the name of the service.
                            type: string
                        required:
                        - name
                        type: object
                    type: object
                type: object
              selector:
                description: |-
                  Selector contains a unique DataPlane identifier used as a deterministic
                  label selector that is used throughout its dependent resources.
                  This is used e.g. as a label selector for DataPlane's Services, Deployments and PodDisruptionBudgets.
                maxLength: 512
                minLength: 8
                type: string
              service:
                description: Service indicates the Service that exposes the DataPlane's
                  configured routes
                type: string
            required:
            - readyReplicas
            - replicas
            type: object
        type: object
        x-kubernetes-validations:
        - message: DataPlane requires an image to be set on proxy container
          rule: has(self.spec.deployment.podTemplateSpec) && has(self.spec.deployment.podTemplateSpec.spec.containers)
            && self.spec.deployment.podTemplateSpec.spec.containers.exists(c, c.name
            == 'proxy' && has(c.image))
        - message: DataPlane supports only db mode 'off'
          rule: '!has(self.spec.deployment.podTemplateSpec) ? true : ( self.spec.deployment.podTemplateSpec.spec.containers.size()
            == 0 || self.spec.deployment.podTemplateSpec.spec.containers[0].name ==
            ''proxy'' ? (!has(self.spec.deployment.podTemplateSpec.spec.containers[0].env)
            ? true : self.spec.deployment.podTemplateSpec.spec.containers[0].env.all(e,
            e.name != ''KONG_DATABASE'' || e.value == ''off'' || size(e.value)==0))
            : true)'
        - message: DataPlane spec cannot be updated when promotion is in progress
          rule: '((self.spec == oldSelf.spec) || !has(self.status.rollout)) ? true
            : self.status.rollout.conditions.all(c, c.type != ''RolledOut'' || c.reason
            != ''PromotionInProgress'')'
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: gatewayconfigurations.gateway-operator.konghq.com
spec:
  group: gateway-operator.konghq.com
  names:
    categories:
    - kong
    - all
    kind: GatewayConfiguration
    listKind: GatewayConfigurationList
    plural: gatewayconfigurations
    shortNames:
    - kogc
    singular: gatewayconfiguration
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: GatewayConfiguration is the Schema for the gatewayconfigurations
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: GatewayConfigurationSpec defines the desired state of GatewayConfiguration
            properties:
              controlPlaneOptions:
                description: |-
                  ControlPlaneOptions is the specification for configuration
                  overrides for ControlPlane resources that will be created for the Gateway.
                properties:
                  dataplane:
                    description: |-
                      DataPlanes refers to the named DataPlane objects which this ControlPlane
                      is responsible for. Currently they must be in the same namespace as the
                      DataPlane.
                    type: string
                  deployment:
                    description: |-
                      ControlPlaneDeploymentOptions is a shared type used on objects to indicate that their
                      configuration results in a Deployment which is managed by the Operator and
                      includes options for managing Deployments such as the the number of replicas
                      or pod options like container image and resource requirements.
                      version, as well as Env variable overrides.
                    properties:
                      podTemplateSpec:
                        description: PodTemplateSpec defines PodTemplateSpec for Deployment's
                          pods.
                        properties:
                          metadata:
                            description: |-
                              Standard object's metadata.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                              finalizers:
                                items:
                                  type: string
                                type: array
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                              name:
                                type: string
                              namespace:
                                type: string
                            type: object
                          spec:
                            description: |-
                              Specification of the desired behavior of the pod.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
                            properties:
                              activeDeadlineSeconds:
                                description: |-
                                  Optional duration in seconds the pod may be active on the node relative to
                                  StartTime before the system will actively try to mark it failed and kill associated containers.
                                  Value must be a positive integer.
                                format: int64
                                type: integer
                              affinity:
                                description: If specified, the pod's scheduling constraints
                                properties:
                                  nodeAffinity:
                                    description: Describes node affinity scheduling
                                      rules for the pod.
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: |-
                                          The scheduler will prefer to schedule pods to nodes that satisfy
                                          the affinity expressions specified by this field, but it may choose
                                          a node that violates one or more of the expressions. The node that is
                                          most preferred is the one with the greatest sum of weights, i.e.
                                          for each node that meets all of the scheduling requirements (resource
                                          request, requiredDuringScheduling affinity expressions, etc.),
                                          compute a sum by iterating through the elements of this field and adding
                                          "weight" to the sum if the node matches the corresponding matchExpressions; the
                                          node(s) with the highest sum are the most preferred.
                                        items:
                                          description: |-
                                            An empty preferred scheduling term matches all objects with implicit weight 0
                                            (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                          properties:
                                            preference:
                                              description: A node selector term, associated
                                                with the corresponding weight.
                                              properties:
                                                matchExpressions:
                                                  description: A list of node selector
                                                    requirements by node's labels.
                                                  items:
                                                    description: |-
                                                      A node selector requirement is a selector that contains values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          Represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          An array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. If the operator is Gt or Lt, the values
                                                          array must have a single element, which will be interpreted as an integer.
                                                          This array is replaced during a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                matchFields:
                                                  description: A list of node selector
                                                    requirements by node's fields.
                                                  items:
                                                    description: |-
                                                      A node selector requirement is a selector that contains values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          Represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          An array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. If the operator is Gt or Lt, the values
                                                          array must have a single element, which will be interpreted as an integer.
                                                          This array is replaced during a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            weight:
                                              description: Weight associated with
                                                matching the corresponding nodeSelectorTerm,
                                                in the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                          - preference
                                          - weight
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: |-
                                          If the affinity requirements specified by this field are not met at
                                          scheduling time, the pod will not be scheduled onto the node.
                                          If the affinity requirements specified by this field cease to be met
                                          at some point during pod execution (e.g. due to an update), the system
                                          may or may not try to eventually evict the pod from its node.
                                        properties:
                                          nodeSelectorTerms:
                                            description: Required. A list of node
                                              selector terms. The terms are ORed.
                                            items:
                                              description: |-
                                                A null or empty node selector term matches no objects. The requirements of
                                                them are ANDed.
                                                The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                              properties:
                                                matchExpressions:
                                                  description: A list of node selector
                                                    requirements by node's labels.
                                                  items:
                                                    description: |-
                                                      A node selector requirement is a selector that contains values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          Represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          An array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. If the operator is Gt or Lt, the values
                                                          array must have a single element, which will be interpreted as an integer.
                                                          This array is replaced during a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                matchFields:
                                                  description: A list of node selector
                                                    requirements by node's fields.
                                                  items:
                                                    description: |-
                                                      A node selector requirement is a selector that contains values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          Represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          An array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. If the operator is Gt or Lt, the values
                                                          array must have a single element, which will be interpreted as an integer.
                                                          This array is replaced during a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        required:
                                        - nodeSelectorTerms
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  podAffinity:
                                    description: Describes pod affinity scheduling
                                      rules (e.g. co-locate this pod in the same node,
                                      zone, etc. as some other pod(s)).
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: |-
                                          The scheduler will prefer to schedule pods to nodes that satisfy
                                          the affinity expressions specified by this field, but it may choose
                                          a node that violates one or more of the expressions. The node that is
                                          most preferred is the one with the greatest sum of weights, i.e.
                                          for each node that meets all of the scheduling requirements (resource
                                          request, requiredDuringScheduling affinity expressions, etc.),
                                          compute a sum by iterating through the elements of this field and adding
                                          "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                          node(s) with the highest sum are the most preferred.
                                        items:
                                          description: The weights of all of the matched
                                            WeightedPodAffinityTerm fields are added
                                            per-node to find the most preferred node(s)
                                          properties:
                                            podAffinityTerm:
                                              description: Required. A pod affinity
                                                term, associated with the corresponding
                                                weight.
                                              properties:
                                                labelSelector:
                                                  description: |-
                                                    A label query over a set of resources, in this case pods.
                                                    If it's null, this PodAffinityTerm matches with no Pods.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: |-
                                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: |-
                                                              operator represents a key's relationship to a set of values.
                                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: |-
                                                              values is an array of string values. If the operator is In or NotIn,
                                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                              the values array must be empty. This array is replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: |-
                                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                matchLabelKeys:
                                                  description: |-
                                                    MatchLabelKeys is a set of pod label keys to select which pods will
                                                    be taken into consideration. The keys are used to lookup values from the
                                                    incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                    to select the group of existing pods which pods will be taken into consideration
                                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                    pod labels will be ignored. The default value is empty.
                                                    The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                    Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                    This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                mismatchLabelKeys:
                                                  description: |-
                                                    MismatchLabelKeys is a set of pod label keys to select which pods will
                                                    be taken into consideration. The keys are used to lookup values from the
                                                    incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                    to select the group of existing pods which pods will be taken into consideration
                                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                    pod labels will be ignored. The default value is empty.
                                                    The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                    Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                    This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                namespaceSelector:
                                                  description: |-
                                                    A label query over the set of namespaces that the term applies to.
                                                    The term is applied to the union of the namespaces selected by this field
                                                    and the ones listed in the namespaces field.
                                                    null selector and null or empty namespaces list means "this pod's namespace".
                                                    An empty selector ({}) matches all namespaces.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: |-
                                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: |-
                                                              operator represents a key's relationship to a set of values.
                                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: |-
                                                              values is an array of string values. If the operator is In or NotIn,
                                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                              the values array must be empty. This array is replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: |-
                                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                namespaces:
                                                  description: |-
                                                    namespaces specifies a static list of namespace names that the term applies to.
                                                    The term is applied to the union of the namespaces listed in this field
                                                    and the ones selected by namespaceSelector.
                                                    null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                topologyKey:
                                                  description: |-
                                                    This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                    the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                    whose value of the label with key topologyKey matches that of any node on which any of the
                                                    selected pods is running.
                                                    Empty topologyKey is not allowed.
                                                  type: string
                                              required:
                                              - topologyKey
                                              type: object
                                            weight:
                                              description: |-
                                                weight associated with matching the corresponding podAffinityTerm,
                                                in the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                          - podAffinityTerm
                                          - weight
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: |-
                                          If the affinity requirements specified by this field are not met at
                                          scheduling time, the pod will not be scheduled onto the node.
                                          If the affinity requirements specified by this field cease to be met
                                          at some point during pod execution (e.g. due to a pod label update), the
                                          system may or may not try to eventually evict the pod from its node.
                                          When there are multiple elements, the lists of nodes corresponding to each
                                          podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                        items:
                                          description: |-
                                            Defines a set of pods (namely those matching the labelSelector
                                            relative to the given namespace(s)) that this pod should be
                                            co-located (affinity) or not co-located (anti-affinity) with,
                                            where co-located is defined as running on a node whose value of
                                            the label with key <topologyKey> matches that of any node on which
                                            a pod of the set of pods is running
                                          properties:
                                            labelSelector:
                                              description: |-
                                                A label query over a set of resources, in this case pods.
                                                If it's null, this PodAffinityTerm matches with no Pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            matchLabelKeys:
                                              description: |-
                                                MatchLabelKeys is a set of pod label keys to select which pods will
                                                be taken into consideration. The keys are used to lookup values from the
                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                to select the group of existing pods which pods will be taken into consideration
                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                pod labels will be ignored. The default value is empty.
                                                The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            mismatchLabelKeys:
                                              description: |-
                                                MismatchLabelKeys is a set of pod label keys to select which pods will
                                                be taken into consideration. The keys are used to lookup values from the
                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                to select the group of existing pods which pods will be taken into consideration
                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                pod labels will be ignored. The default value is empty.
                                                The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            namespaceSelector:
                                              description: |-
                                                A label query over the set of namespaces that the term applies to.
                                                The term is applied to the union of the namespaces selected by this field
                                                and the ones listed in the namespaces field.
                                                null selector and null or empty namespaces list means "this pod's namespace".
                                                An empty selector ({}) matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaces:
                                              description: |-
                                                namespaces specifies a static list of namespace names that the term applies to.
                                                The term is applied to the union of the namespaces listed in this field
                                                and the ones selected by namespaceSelector.
                                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            topologyKey:
                                              description: |-
                                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                whose value of the label with key topologyKey matches that of any node on which any of the
                                                selected pods is running.
                                                Empty topologyKey is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    type: object
                                  podAntiAffinity:
                                    description: Describes pod anti-affinity scheduling
                                      rules (e.g. avoid putting this pod in the same
                                      node, zone, etc. as some other pod(s)).
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: |-
                                          The scheduler will prefer to schedule pods to nodes that satisfy
                                          the anti-affinity expressions specified by this field, but it may choose
                                          a node that violates one or more of the expressions. The node that is
                                          most preferred is the one with the greatest sum of weights, i.e.
                                          for each node that meets all of the scheduling requirements (resource
                                          request, requiredDuringScheduling anti-affinity expressions, etc.),
                                          compute a sum by iterating through the elements of this field and adding
                                          "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                          node(s) with the highest sum are the most preferred.
                                        items:
                                          description: The weights of all of the matched
                                            WeightedPodAffinityTerm fields are added
                                            per-node to find the most preferred node(s)
                                          properties:
                                            podAffinityTerm:
                                              description: Required. A pod affinity
                                                term, associated with the corresponding
                                                weight.
                                              properties:
                                                labelSelector:
                                                  description: |-
                                                    A label query over a set of resources, in this case pods.
                                                    If it's null, this PodAffinityTerm matches with no Pods.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: |-
                                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: |-
                                                              operator represents a key's relationship to a set of values.
                                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: |-
                                                              values is an array of string values. If the operator is In or NotIn,
                                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                              the values array must be empty. This array is replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: |-
                                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                matchLabelKeys:
                                                  description: |-
                                                    MatchLabelKeys is a set of pod label keys to select which pods will
                                                    be taken into consideration. The keys are used to lookup values from the
                                                    incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                    to select the group of existing pods which pods will be taken into consideration
                                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                    pod labels will be ignored. The default value is empty.
                                                    The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                    Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                    This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                mismatchLabelKeys:
                                                  description: |-
                                                    MismatchLabelKeys is a set of pod label keys to select which pods will
                                                    be taken into consideration. The keys are used to lookup values from the
                                                    incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                    to select the group of existing pods which pods will be taken into consideration
                                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                    pod labels will be ignored. The default value is empty.
                                                    The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                    Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                    This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                namespaceSelector:
                                                  description: |-
                                                    A label query over the set of namespaces that the term applies to.
                                                    The term is applied to the union of the namespaces selected by this field
                                                    and the ones listed in the namespaces field.
                                                    null selector and null or empty namespaces list means "this pod's namespace".
                                                    An empty selector ({}) matches all namespaces.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: |-
                                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: |-
                                                              operator represents a key's relationship to a set of values.
                                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: |-
                                                              values is an array of string values. If the operator is In or NotIn,
                                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                              the values array must be empty. This array is replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: |-
                                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                namespaces:
                                                  description: |-
                                                    namespaces specifies a static list of namespace names that the term applies to.
                                                    The term is applied to the union of the namespaces listed in this field
                                                    and the ones selected by namespaceSelector.
                                                    null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                topologyKey:
                                                  description: |-
                                                    This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                    the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                    whose value of the label with key topologyKey matches that of any node on which any of the
                                                    selected pods is running.
                                                    Empty topologyKey is not allowed.
                                                  type: string
                                              required:
                                              - topologyKey
                                              type: object
                                            weight:
                                              description: |-
                                                weight associated with matching the corresponding podAffinityTerm,
                                                in the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                          - podAffinityTerm
                                          - weight
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: |-
                                          If the anti-affinity requirements specified by this field are not met at
                                          scheduling time, the pod will not be scheduled onto the node.
                                          If the anti-affinity requirements specified by this field cease to be met
                                          at some point during pod execution (e.g. due to a pod label update), the
                                          system may or may not try to eventually evict the pod from its node.
                                          When there are multiple elements, the lists of nodes corresponding to each
                                          podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                        items:
                                          description: |-
                                            Defines a set of pods (namely those matching the labelSelector
                                            relative to the given namespace(s)) that this pod should be
                                            co-located (affinity) or not co-located (anti-affinity) with,
                                            where co-located is defined as running on a node whose value of
                                            the label with key <topologyKey> matches that of any node on which
                                            a pod of the set of pods is running
                                          properties:
                                            labelSelector:
                                              description: |-
                                                A label query over a set of resources, in this case pods.
                                                If it's null, this PodAffinityTerm matches with no Pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            matchLabelKeys:
                                              description: |-
                                                MatchLabelKeys is a set of pod label keys to select which pods will
                                                be taken into consideration. The keys are used to lookup values from the
                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                to select the group of existing pods which pods will be taken into consideration
                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                pod labels will be ignored. The default value is empty.
                                                The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            mismatchLabelKeys:
                                              description: |-
                                                MismatchLabelKeys is a set of pod label keys to select which pods will
                                                be taken into consideration. The keys are used to lookup values from the
                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                to select the group of existing pods which pods will be taken into consideration
                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                pod labels will be ignored. The default value is empty.
                                                The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            namespaceSelector:
                                              description: |-
                                                A label query over the set of namespaces that the term applies to.
                                                The term is applied to the union of the namespaces selected by this field
                                                and the ones listed in the namespaces field.
                                                null selector and null or empty namespaces list means "this pod's namespace".
                                                An empty selector ({}) matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaces:
                                              description: |-
                                                namespaces specifies a static list of namespace names that the term applies to.
                                                The term is applied to the union of the namespaces listed in this field
                                                and the ones selected by namespaceSelector.
                                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            topologyKey:
                                              description: |-
                                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                whose value of the label with key topologyKey matches that of any node on which any of the
                                                selected pods is running.
                                                Empty topologyKey is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    type: object
                                type: object
                              automountServiceAccountToken:
                                description: AutomountServiceAccountToken indicates
                                  whether a service account token should be automatically
                                  mounted.
                                type: boolean
                              containers:
                                description: |-
                                  List of containers belonging to the pod.
                                  Containers cannot currently be added or removed.
                                  There must be at least one container in a Pod.
                                  Cannot be updated.
                                items:
                                  description: A single application container that
                                    you want to run within a pod.
                                  properties:
                                    args:
                                      description: |-
                                        Arguments to the entrypoint.
                                        The container image's CMD is used if this is not provided.
                                        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                        of whether the variable exists or not. Cannot be updated.
                                        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    command:
                                      description: |-
                                        Entrypoint array. Not executed within a shell.
                                        The container image's ENTRYPOINT is used if this is not provided.
                                        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                        of whether the variable exists or not. Cannot be updated.
                                        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    env:
                                      description: |-
                                        List of environment variables to set in the container.
                                        Cannot be updated.
                                      items:
                                        description: EnvVar represents an environment
                                          variable present in a Container.
                                        properties:
                                          name:
                                            description: Name of the environment variable.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          value:
                                            description: |-
                                              Variable references $(VAR_NAME) are expanded
                                              using the previously defined environment variables in the container and
                                              any service environment variables. If a variable cannot be resolved,
                                              the reference in the input string will be unchanged. Double $$ are reduced
                                              to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                              "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                              Escaped references will never be expanded, regardless of whether the variable
                                              exists or not.
                                              Defaults to "".
                                            type: string
                                          valueFrom:
                                            description: Source for the environment
                                              variable's value. Cannot be used if
                                              value is not empty.
                                            properties:
                                              configMapKeyRef:
                                                description: Selects a key of a ConfigMap.
                                                properties:
                                                  key:
                                                    description: The key to select.
                                                    type: string
                                                  name:
                                                    default: ""
                                                    description: |-
                                                      Name of the referent.
                                                      This field is effectively required, but due to backwards compatibility is
                                                      allowed to be empty. Instances of this type with an empty value here are
                                                      almost certainly wrong.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      ConfigMap or its key must be
                                                      defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              fieldRef:
                                                description: |-
                                                  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                                  spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema
                                                      the FieldPath is written in
                                                      terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field
                                                      to select in the specified API
                                                      version.
                                                    type: string
                                                required:
                                                - fieldPath
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              resourceFieldRef:
                                                description: |-
                                                  Selects a resource of the container: only resources limits and requests
                                                  (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                                properties:
                                                  containerName:
                                                    description: 'Container name:
                                                      required for volumes, optional
                                                      for env vars'
                                                    type: string
                                                  divisor:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Specifies the output
                                                      format of the exposed resources,
                                                      defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource
                                                      to select'
                                                    type: string
                                                required:
                                                - resource
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              secretKeyRef:
                                                description: Selects a key of a secret
                                                  in the pod's namespace
                                                properties:
                                                  key:
                                                    description: The key of the secret
                                                      to select from.  Must be a valid
                                                      secret key.
                                                    type: string
                                                  name:
                                                    default: ""
                                                    description: |-
                                                      Name of the referent.
                                                      This field is effectively required, but due to backwards compatibility is
                                                      allowed to be empty. Instances of this type with an empty value here are
                                                      almost certainly wrong.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      Secret or its key must be defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                            type: object
                                        required:
                                        - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    envFrom:
                                      description: |-
                                        List of sources to populate environment variables in the container.
                                        The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                                        will be reported as an event when the container is starting. When a key exists in multiple
                                        sources, the value associated with the last source will take precedence.
                                        Values defined by an Env with a duplicate key will take precedence.
                                        Cannot be updated.
                                      items:
                                        description: EnvFromSource represents the
                                          source of a set of ConfigMaps
                                        properties:
                                          configMapRef:
                                            description: The ConfigMap to select from
                                            properties:
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          prefix:
                                            description: An optional identifier to
                                              prepend to each key in the ConfigMap.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          secretRef:
                                            description: The Secret to select from
                                            properties:
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    image:
                                      description: |-
                                        Container image name.
                                        More info: https://kubernetes.io/docs/concepts/containers/images
                                        This field is optional to allow higher level config management to default or override
                                        container images in workload controllers like Deployments and StatefulSets.
                                      type: string
                                    imagePullPolicy:
                                      description: |-
                                        Image pull policy.
                                        One of Always, Never, IfNotPresent.
                                        Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                                        Cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                                      type: string
                                    lifecycle:
                                      description: |-
                                        Actions that the management system should take in response to container lifecycle events.
                                        Cannot be updated.
                                      properties:
                                        postStart:
                                          description: |-
                                            PostStart is called immediately after a container is created. If the handler fails,
                                            the container is terminated and restarted according to its restart policy.
                                            Other management of the container blocks until the hook completes.
                                            More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                          properties:
                                            exec:
                                              description: Exec specifies a command
                                                to execute in the container.
                                              properties:
                                                command:
                                                  description: |-
                                                    Command is the command line to execute inside the container, the working directory for the
                                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                    a shell, you need to explicitly call out to that shell.
                                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies an HTTP
                                                GET request to perform.
                                              properties:
                                                host:
                                                  description: |-
                                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                                    "Host" in httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set
                                                    in the request. HTTP allows repeated
                                                    headers.
                                                  items:
                                                    description: HTTPHeader describes
                                                      a custom header to be used in
                                                      HTTP probes
                                                    properties:
                                                      name:
                                                        description: |-
                                                          The header field name.
                                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                        type: string
                                                      value:
                                                        description: The header field
                                                          value
                                                        type: string
                                                    required:
                                                    - name
                                                    - value
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                path:
                                                  description: Path to access on the
                                                    HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Name or number of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: |-
                                                    Scheme to use for connecting to the host.
                                                    Defaults to HTTP.
                                                  type: string
                                              required:
                                              - port
                                              type: object
                                            sleep:
                                              description: Sleep represents a duration
                                                that the container should sleep.
                                              properties:
                                                seconds:
                                                  description: Seconds is the number
                                                    of seconds to sleep.
                                                  format: int64
                                                  type: integer
                                              required:
                                              - seconds
                                              type: object
                                            tcpSocket:
                                              description: |-
                                                Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                                for backward compatibility. There is no validation of this field and
                                                lifecycle hooks will fail at runtime when it is specified.
                                              properties:
                                                host:
                                                  description: 'Optional: Host name
                                                    to connect to, defaults to the
                                                    pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Number or name of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                              - port
                                              type: object
                                          type: object
                                        preStop:
                                          description: |-
                                            PreStop is called immediately before a container is terminated due to an
                                            API request or management event such as liveness/startup probe failure,
                                            preemption, resource contention, etc. The handler is not called if the
                                            container crashes or exits. The Pod's termination grace period countdown begins before the
                                            PreStop hook is executed. Regardless of the outcome of the handler, the
                                            container will eventually terminate within the Pod's termination grace
                                            period (unless delayed by finalizers). Other management of the container blocks until the hook completes
                                            or until the termination grace period is reached.
                                            More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                          properties:
                                            exec:
                                              description: Exec specifies a command
                                                to execute in the container.
                                              properties:
                                                command:
                                                  description: |-
                                                    Command is the command line to execute inside the container, the working directory for the
                                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                    a shell, you need to explicitly call out to that shell.
                                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies an HTTP
                                                GET request to perform.
                                              properties:
                                                host:
                                                  description: |-
                                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                                    "Host" in httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set
                                                    in the request. HTTP allows repeated
                                                    headers.
                                                  items:
                                                    description: HTTPHeader describes
                                                      a custom header to be used in
                                                      HTTP probes
                                                    properties:
                                                      name:
                                                        description: |-
                                                          The header field name.
                                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                        type: string
                                                      value:
                                                        description: The header field
                                                          value
                                                        type: string
                                                    required:
                                                    - name
                                                    - value
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                path:
                                                  description: Path to access on the
                                                    HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Name or number of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: |-
                                                    Scheme to use for connecting to the host.
                                                    Defaults to HTTP.
                                                  type: string
                                              required:
                                              - port
                                              type: object
                                            sleep:
                                              description: Sleep represents a duration
                                                that the container should sleep.
                                              properties:
                                                seconds:
                                                  description: Seconds is the number
                                                    of seconds to sleep.
                                                  format: int64
                                                  type: integer
                                              required:
                                              - seconds
                                              type: object
                                            tcpSocket:
                                              description: |-
                                                Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                                for backward compatibility. There is no validation of this field and
                                                lifecycle hooks will fail at runtime when it is specified.
                                              properties:
                                                host:
                                                  description: 'Optional: Host name
                                                    to connect to, defaults to the
                                                    pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Number or name of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                              - port
                                              type: object
                                          type: object
                                      type: object
                                    livenessProbe:
                                      description: |-
                                        Periodic probe of container liveness.
                                        Container will be restarted if the probe fails.
                                        Cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      properties:
                                        exec:
                                          description: Exec specifies a command to
                                            execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        failureThreshold:
                                          description: |-
                                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                            Defaults to 3. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies a GRPC HealthCheckRequest.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              default: ""
                                              description: |-
                                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                                If this is not specified, the default behavior is defined by gRPC.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: |-
                                            Number of seconds after the container has started before liveness probes are initiated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: |-
                                            How often (in seconds) to perform the probe.
                                            Default to 10 seconds. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: |-
                                            Minimum consecutive successes for the probe to be considered successful after having failed.
                                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies a connection
                                            to a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: |-
                                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                            The grace period is the duration in seconds after the processes running in the pod are sent
                                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                                            Set this value longer than the expected cleanup time for your process.
                                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                            value overrides the value provided by the pod spec.
                                            Value must be non-negative integer. The value zero indicates stop immediately via
                                            the kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: |-
                                            Number of seconds after which the probe times out.
                                            Defaults to 1 second. Minimum value is 1.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                      type: object
                                    name:
                                      description: |-
                                        Name of the container specified as a DNS_LABEL.
                                        Each container in a pod must have a unique name (DNS_LABEL).
                                        Cannot be updated.
                                      type: string
                                    ports:
                                      description: |-
                                        List of ports to expose from the container. Not specifying a port here
                                        DOES NOT prevent that port from being exposed. Any port which is
                                        listening on the default "0.0.0.0" address inside a container will be
                                        accessible from the network.
                                        Modifying this array with strategic merge patch may corrupt the data.
                                        For more information See https://github.com/kubernetes/kubernetes/issues/108255.
                                        Cannot be updated.
                                      items:
                                        description: ContainerPort represents a network
                                          port in a single container.
                                        properties:
                                          containerPort:
                                            description: |-
                                              Number of port to expose on the pod's IP address.
                                              This must be a valid port number, 0 < x < 65536.
                                            format: int32
                                            type: integer
                                          hostIP:
                                            description: What host IP to bind the
                                              external port to.
                                            type: string
                                          hostPort:
                                            description: |-
                                              Number of port to expose on the host.
                                              If specified, this must be a valid port number, 0 < x < 65536.
                                              If HostNetwork is specified, this must match ContainerPort.
                                              Most containers do not need this.
                                            format: int32
                                            type: integer
                                          name:
                                            description: |-
                                              If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                                              named port in a pod must have a unique name. Name for the port that can be
                                              referred to by services.
                                            type: string
                                          protocol:
                                            default: TCP
                                            description: |-
                                              Protocol for port. Must be UDP, TCP, or SCTP.
                                              Defaults to "TCP".
                                            type: string
                                        required:
                                        - containerPort
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - containerPort
                                      - protocol
                                      x-kubernetes-list-type: map
                                    readinessProbe:
                                      description: |-
                                        Periodic probe of container service readiness.
                                        Container will be removed from service endpoints if the probe fails.
                                        Cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      properties:
                                        exec:
                                          description: Exec specifies a command to
                                            execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        failureThreshold:
                                          description: |-
                                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                            Defaults to 3. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies a GRPC HealthCheckRequest.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              default: ""
                                              description: |-
                                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                                If this is not specified, the default behavior is defined by gRPC.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: |-
                                            Number of seconds after the container has started before liveness probes are initiated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: |-
                                            How often (in seconds) to perform the probe.
                                            Default to 10 seconds. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: |-
                                            Minimum consecutive successes for the probe to be considered successful after having failed.
                                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies a connection
                                            to a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: |-
                                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                            The grace period is the duration in seconds after the processes running in the pod are sent
                                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                                            Set this value longer than the expected cleanup time for your process.
                                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                            value overrides the value provided by the pod spec.
                                            Value must be non-negative integer. The value zero indicates stop immediately via
                                            the kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: |-
                                            Number of seconds after which the probe times out.
                                            Defaults to 1 second. Minimum value is 1.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                      type: object
                                    resizePolicy:
                                      description: Resources resize policy for the
                                        container.
                                      items:
                                        description: ContainerResizePolicy represents
                                          resource resize policy for the container.
                                        properties:
                                          resourceName:
                                            description: |-
                                              Name of the resource to which this resource resize policy applies.
                                              Supported values: cpu, memory.
                                            type: string
                                          restartPolicy:
                                            description: |-
                                              Restart policy to apply when specified resource is resized.
                                              If not specified, it defaults to NotRequired.
                                            type: string
                                        required:
                                        - resourceName
                                        - restartPolicy
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    resources:
                                      description: |-
                                        Compute Resources required by this container.
                                        Cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                      properties:
                                        claims:
                                          description: |-
                                            Claims lists the names of resources, defined in spec.resourceClaims,
                                            that are used by this container.

                                            This is an alpha field and requires enabling the
                                            DynamicResourceAllocation feature gate.

                                            This field is immutable. It can only be set for containers.
                                          items:
                                            description: ResourceClaim references
                                              one entry in PodSpec.ResourceClaims.
                                            properties:
                                              name:
                                                description: |-
                                                  Name must match the name of one entry in pod.spec.resourceClaims of
                                                  the Pod where this field is used. It makes that resource available
                                                  inside a container.
                                                type: string
                                              request:
                                                description: |-
                                                  Request is the name chosen for a request in the referenced claim.
                                                  If empty, everything from the claim is made available, otherwise
                                                  only the result of this request.
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          type: array
                                          x-kubernetes-list-map-keys:
                                          - name
                                          x-kubernetes-list-type: map
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Limits describes the maximum amount of compute resources allowed.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Requests describes the minimum amount of compute resources required.
                                            If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                            otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                      type: object
                                    restartPolicy:
                                      description: |-
                                        RestartPolicy defines the restart behavior of individual containers in a pod.
                                        This field may only be set for init containers, and the only allowed value is "Always".
                                        For non-init containers or when this field is not specified,
                                        the restart behavior is defined by the Pod's restart policy and the container type.
                                        Setting the RestartPolicy as "Always" for the init container will have the following effect:
                                        this init container will be continually restarted on
                                        exit until all regular containers have terminated. Once all regular
                                        containers have completed, all init containers with restartPolicy "Always"
                                        will be shut down. This lifecycle differs from normal init containers and
                                        is often referred to as a "sidecar" container. Although this init
                                        container still starts in the init container sequence, it does not wait
                                        for the container to complete before proceeding to the next init
                                        container. Instead, the next init container starts immediately after this
                                        init container is started, or after any startupProbe has successfully
                                        completed.
                                      type: string
                                    securityContext:
                                      description: |-
                                        SecurityContext defines the security options the container should be run with.
                                        If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
                                        More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
                                      properties:
                                        allowPrivilegeEscalation:
                                          description: |-
                                            AllowPrivilegeEscalation controls whether a process can gain more
                                            privileges than its parent process. This bool directly controls if
                                            the no_new_privs flag will be set on the container process.
                                            AllowPrivilegeEscalation is true always when the container is:
                                            1) run as Privileged
                                            2) has CAP_SYS_ADMIN
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        appArmorProfile:
                                          description: |-
                                            appArmorProfile is the AppArmor options to use by this container. If set, this profile
                                            overrides the pod's appArmorProfile.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            localhostProfile:
                                              description: |-
                                                localhostProfile indicates a profile loaded on the node that should be used.
                                                The profile must be preconfigured on the node to work.
                                                Must match the loaded name of the profile.
                                                Must be set if and only if type is "Localhost".
                                              type: string
                                            type:
                                              description: |-
                                                type indicates which kind of AppArmor profile will be applied.
                                                Valid options are:
                                                  Localhost - a profile pre-loaded on the node.
                                                  RuntimeDefault - the container runtime's default profile.
                                                  Unconfined - no AppArmor enforcement.
                                              type: string
                                          required:
                                          - type
                                          type: object
                                        capabilities:
                                          description: |-
                                            The capabilities to add/drop when running containers.
                                            Defaults to the default set of capabilities granted by the container runtime.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            add:
                                              description: Added capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            drop:
                                              description: Removed capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        privileged:
                                          description: |-
                                            Run container in privileged mode.
                                            Processes in privileged containers are essentially equivalent to root on the host.
                                            Defaults to false.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        procMount:
                                          description: |-
                                            procMount denotes the type of proc mount to use for the containers.
                                            The default value is Default which uses the container runtime defaults for
                                            readonly paths and masked paths.
                                            This requires the ProcMountType feature flag to be enabled.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: string
                                        readOnlyRootFilesystem:
                                          description: |-
                                            Whether this container has a read-only root filesystem.
                                            Default is false.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        runAsGroup:
                                          description: |-
                                            The GID to run the entrypoint of the container process.
                                            Uses runtime default if unset.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        runAsNonRoot:
                                          description: |-
                                            Indicates that the container must run as a non-root user.
                                            If true, the Kubelet will validate the image at runtime to ensure that it
                                            does not run as UID 0 (root) and fail to start the container if it does.
                                            If unset or false, no such validation will be performed.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                          type: boolean
                                        runAsUser:
                                          description: |-
                                            The UID to run the entrypoint of the container process.
                                            Defaults to user specified in image metadata if unspecified.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        seLinuxOptions:
                                          description: |-
                                            The SELinux context to be applied to the container.
                                            If unspecified, the container runtime will allocate a random SELinux context for each
                                            container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            level:
                                              description: Level is SELinux level
                                                label that applies to the container.
                                              type: string
                                            role:
                                              description: Role is a SELinux role
                                                label that applies to the container.
                                              type: string
                                            type:
                                              description: Type is a SELinux type
                                                label that applies to the container.
                                              type: string
                                            user:
                                              description: User is a SELinux user
                                                label that applies to the container.
                                              type: string
                                          type: object
                                        seccompProfile:
                                          description: |-
                                            The seccomp options to use by this container. If seccomp options are
                                            provided at both the pod & container level, the container options
                                            override the pod options.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            localhostProfile:
                                              description: |-
                                                localhostProfile indicates a profile defined in a file on the node should be used.
                                                The profile must be preconfigured on the node to work.
                                                Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                                Must be set if type is "Localhost". Must NOT be set for any other type.
                                              type: string
                                            type:
                                              description: |-
                                                type indicates which kind of seccomp profile will be applied.
                                                Valid options are:

                                                Localhost - a profile defined in a file on the node should be used.
                                                RuntimeDefault - the container runtime default profile should be used.
                                                Unconfined - no profile should be applied.
                                              type: string
                                          required:
                                          - type
                                          type: object
                                        windowsOptions:
                                          description: |-
                                            The Windows specific settings applied to all containers.
                                            If unspecified, the options from the PodSecurityContext will be used.
                                            If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is linux.
                                          properties:
                                            gmsaCredentialSpec:
                                              description: |-
                                                GMSACredentialSpec is where the GMSA admission webhook
                                                (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                                GMSA credential spec named by the GMSACredentialSpecName field.
                                              type: string
                                            gmsaCredentialSpecName:
                                              description: GMSACredentialSpecName
                                                is the name of the GMSA credential
                                                spec to use.
                                              type: string
                                            hostProcess:
                                              description: |-
                                                HostProcess determines if a container should be run as a 'Host Process' container.
                                                All of a Pod's containers must have the same effective HostProcess value
                                                (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                                In addition, if HostProcess is true then HostNetwork must also be set to true.
                                              type: boolean
                                            runAsUserName:
                                              description: |-
                                                The UserName in Windows to run the entrypoint of the container process.
                                                Defaults to the user specified in image metadata if unspecified.
                                                May also be set in PodSecurityContext. If set in both SecurityContext and
                                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                                              type: string
                                          type: object
                                      type: object
                                    startupProbe:
                                      description: |-
                                        StartupProbe indicates that the Pod has successfully initialized.
                                        If specified, no other probes are executed until this completes successfully.
                                        If this probe fails, the Pod will be restarted, just as if the livenessProbe failed.
                                        This can be used to provide different probe parameters at the beginning of a Pod's lifecycle,
                                        when it might take a long time to load data or warm a cache, than during steady-state operation.
                                        This cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      properties:
                                        exec:
                                          description: Exec specifies a command to
                                            execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        failureThreshold:
                                          description: |-
                                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                            Defaults to 3. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies a GRPC HealthCheckRequest.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              default: ""
                                              description: |-
                                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                                If this is not specified, the default behavior is defined by gRPC.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: |-
                                            Number of seconds after the container has started before liveness probes are initiated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: |-
                                            How often (in seconds) to perform the probe.
                                            Default to 10 seconds. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: |-
                                            Minimum consecutive successes for the probe to be considered successful after having failed.
                                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies a connection
                                            to a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: |-
                                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                            The grace period is the duration in seconds after the processes running in the pod are sent
                                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                                            Set this value longer than the expected cleanup time for your process.
                                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                            value overrides the value provided by the pod spec.
                                            Value must be non-negative integer. The value zero indicates stop immediately via
                                            the kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: |-
                                            Number of seconds after which the probe times out.
                                            Defaults to 1 second. Minimum value is 1.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                      type: object
                                    stdin:
                                      description: |-
                                        Whether this container should allocate a buffer for stdin in the container runtime. If this
                                        is not set, reads from stdin in the container will always result in EOF.
                                        Default is false.
                                      type: boolean
                                    stdinOnce:
                                      description: |-
                                        Whether the container runtime should close the stdin channel after it has been opened by
                                        a single attach. When stdin is true the stdin stream will remain open across multiple attach
                                        sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
                                        first client attaches to stdin, and then remains open and accepts data until the client disconnects,
                                        at which time stdin is closed and remains closed until the container is restarted. If this
                                        flag is false, a container processes that reads from stdin will never receive an EOF.
                                        Default is false
                                      type: boolean
                                    terminationMessagePath:
                                      description: |-
                                        Optional: Path at which the file to which the container's termination message
                                        will be written is mounted into the container's filesystem.
                                        Message written is intended to be brief final status, such as an assertion failure message.
                                        Will be truncated by the node if greater than 4096 bytes. The total message length across
                                        all containers will be limited to 12kb.
                                        Defaults to /dev/termination-log.
                                        Cannot be updated.
                                      type: string
                                    terminationMessagePolicy:
                                      description: |-
                                        Indicate how the termination message should be populated. File will use the contents of
                                        terminationMessagePath to populate the container status message on both success and failure.
                                        FallbackToLogsOnError will use the last chunk of container log output if the termination
                                        message file is empty and the container exited with an error.
                                        The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
                                        Defaults to File.
                                        Cannot be updated.
                                      type: string
                                    tty:
                                      description: |-
                                        Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
                                        Default is false.
                                      type: boolean
                                    volumeDevices:
                                      description: volumeDevices is the list of block
                                        devices to be used by the container.
                                      items:
                                        description: volumeDevice describes a mapping
                                          of a raw block device within a container.
                                        properties:
                                          devicePath:
                                            description: devicePath is the path inside
                                              of the container that the device will
                                              be mapped to.
                                            type: string
                                          name:
                                            description: name must match the name
                                              of a persistentVolumeClaim in the pod
                                            type: string
                                        required:
                                        - devicePath
                                        - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - devicePath
                                      x-kubernetes-list-type: map
                                    volumeMounts:
                                      description: |-
                                        Pod volumes to mount into the container's filesystem.
                                        Cannot be updated.
                                      items:
                                        description: VolumeMount describes a mounting
                                          of a Volume within a container.
                                        properties:
                                          mountPath:
                                            description: |-
                                              Path within the container at which the volume should be mounted.  Must
                                              not contain ':'.
                                            type: string
                                          mountPropagation:
                                            description: |-
                                              mountPropagation determines how mounts are propagated from the host
                                              to container and the other way around.
                                              When not set, MountPropagationNone is used.
                                              This field is beta in 1.10.
                                              When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                                              (which defaults to None).
                                            type: string
                                          name:
                                            description: This must match the Name
                                              of a Volume.
                                            type: string
                                          readOnly:
                                            description: |-
                                              Mounted read-only if true, read-write otherwise (false or unspecified).
                                              Defaults to false.
                                            type: boolean
                                          recursiveReadOnly:
                                            description: |-
                                              RecursiveReadOnly specifies whether read-only mounts should be handled
                                              recursively.

                                              If ReadOnly is false, this field has no meaning and must be unspecified.

                                              If ReadOnly is true, and this field is set to Disabled, the mount is not made
                                              recursively read-only.  If this field is set to IfPossible, the mount is made
                                              recursively read-only, if it is supported by the container runtime.  If this
                                              field is set to Enabled, the mount is made recursively read-only if it is
                                              supported by the container runtime, otherwise the pod will not be started and
                                              an error will be generated to indicate the reason.

                                              If this field is set to IfPossible or Enabled, MountPropagation must be set to
                                              None (or be unspecified, which defaults to None).

                                              If this field is not specified, it is treated as an equivalent of Disabled.
                                            type: string
                                          subPath:
                                            description: |-
                                              Path within the volume from which the container's volume should be mounted.
                                              Defaults to "" (volume's root).
                                            type: string
                                          subPathExpr:
                                            description: |-
                                              Expanded path within the volume from which the container's volume should be mounted.
                                              Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                              Defaults to "" (volume's root).
                                              SubPathExpr and SubPath are mutually exclusive.
                                            type: string
                                        required:
                                        - mountPath
                                        - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - mountPath
                                      x-kubernetes-list-type: map
                                    workingDir:
                                      description: |-
                                        Container's working directory.
                                        If not specified, the container runtime's default will be used, which
                                        might be configured in the container image.
                                        Cannot be updated.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              dnsConfig:
                                description: |-
                                  Specifies the DNS parameters of a pod.
                                  Parameters specified here will be merged to the generated DNS
                                  configuration based on DNSPolicy.
                                properties:
                                  nameservers:
                                    description: |-
                                      A list of DNS name server IP addresses.
                                      This will be appended to the base nameservers generated from DNSPolicy.
                                      Duplicated nameservers will be removed.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  options:
                                    description: |-
                                      A list of DNS resolver options.
                                      This will be merged with the base options generated from DNSPolicy.
                                      Duplicated entries will be removed. Resolution options given in Options
                                      will override those that appear in the base DNSPolicy.
                                    items:
                                      description: PodDNSConfigOption defines DNS
                                        resolver options of a pod.
                                      properties:
                                        name:
                                          description: |-
                                            Name is this DNS resolver option's name.
                                            Required.
                                          type: string
                                        value:
                                          description: Value is this DNS resolver
                                            option's value.
                                          type: string
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  searches:
                                    description: |-
                                      A list of DNS search domains for host-name lookup.
                                      This will be appended to the base search paths generated from DNSPolicy.
                                      Duplicated search paths will be removed.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                              dnsPolicy:
                                description: |-
                                  Set DNS policy for the pod.
                                  Defaults to "ClusterFirst".
                                  Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'.
                                  DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.
                                  To have DNS options set along with hostNetwork, you have to specify DNS policy
                                  explicitly to 'ClusterFirstWithHostNet'.
                                type: string
                              enableServiceLinks:
                                description: |-
                                  EnableServiceLinks indicates whether information about services should be injected into pod's
                                  environment variables, matching the syntax of Docker links.
                                  Optional: Defaults to true.
                                type: boolean
                              ephemeralContainers:
                                description: |-
                                  List of ephemeral containers run in this pod. Ephemeral containers may be run in an existing
                                  pod to perform user-initiated actions such as debugging. This list cannot be specified when
                                  creating a pod, and it cannot be modified by updating the pod spec. In order to add an
                                  ephemeral container to an existing pod, use the pod's ephemeralcontainers subresource.
                                items:
                                  description: |-
                                    An EphemeralContainer is a temporary container that you may add to an existing Pod for
                                    user-initiated activities such as debugging. Ephemeral containers have no resource or
                                    scheduling guarantees, and they will not be restarted when they exit or when a Pod is
                                    removed or restarted. The kubelet may evict a Pod if an ephemeral container causes the
                                    Pod to exceed its resource allocation.

                                    To add an ephemeral container, use the ephemeralcontainers subresource of an existing
                                    Pod. Ephemeral containers may not be removed or restarted.
                                  properties:
                                    args:
                                      description: |-
                                        Arguments to the entrypoint.
                                        The image's CMD is used if this is not provided.
                                        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                        of whether the variable exists or not. Cannot be updated.
                                        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    command:
                                      description: |-
                                        Entrypoint array. Not executed within a shell.
                                        The image's ENTRYPOINT is used if this is not provided.
                                        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                        of whether the variable exists or not. Cannot be updated.
                                        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    env:
                                      description: |-
                                        List of environment variables to set in the container.
                                        Cannot be updated.
                                      items:
                                        description: EnvVar represents an environment
                                          variable present in a Container.
                                        properties:
                                          name:
                                            description: Name of the environment variable.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          value:
                                            description: |-
                                              Variable references $(VAR_NAME) are expanded
                                              using the previously defined environment variables in the container and
                                              any service environment variables. If a variable cannot be resolved,
                                              the reference in the input string will be unchanged. Double $$ are reduced
                                              to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                              "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                              Escaped references will never be expanded, regardless of whether the variable
                                              exists or not.
                                              Defaults to "".
                                            type: string
                                          valueFrom:
                                            description: Source for the environment
                                              variable's value. Cannot be used if
                                              value is not empty.
                                            properties:
                                              configMapKeyRef:
                                                description: Selects a key of a ConfigMap.
                                                properties:
                                                  key:
                                                    description: The key to select.
                                                    type: string
                                                  name:
                                                    default: ""
                                                    description: |-
                                                      Name of the referent.
                                                      This field is effectively required, but due to backwards compatibility is
                                                      allowed to be empty. Instances of this type with an empty value here are
                                                      almost certainly wrong.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      ConfigMap or its key must be
                                                      defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              fieldRef:
                                                description: |-
                                                  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                                  spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema
                                                      the FieldPath is written in
                                                      terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field
                                                      to select in the specified API
                                                      version.
                                                    type: string
                                                required:
                                                - fieldPath
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              resourceFieldRef:
                                                description: |-
                                                  Selects a resource of the container: only resources limits and requests
                                                  (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                                properties:
                                                  containerName:
                                                    description: 'Container name:
                                                      required for volumes, optional
                                                      for env vars'
                                                    type: string
                                                  divisor:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Specifies the output
                                                      format of the exposed resources,
                                                      defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource
                                                      to select'
                                                    type: string
                                                required:
                                                - resource
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              secretKeyRef:
                                                description: Selects a key of a secret
                                                  in the pod's namespace
                                                properties:
                                                  key:
                                                    description: The key of the secret
                                                      to select from.  Must be a valid
                                                      secret key.
                                                    type: string
                                                  name:
                                                    default: ""
                                                    description: |-
                                                      Name of the referent.
                                                      This field is effectively required, but due to backwards compatibility is
                                                      allowed to be empty. Instances of this type with an empty value here are
                                                      almost certainly wrong.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      Secret or its key must be defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                            type: object
                                        required:
                                        - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    envFrom:
                                      description: |-
                                        List of sources to populate environment variables in the container.
                                        The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                                        will be reported as an event when the container is starting. When a key exists in multiple
                                        sources, the value associated with the last source will take precedence.
                                        Values defined by an Env with a duplicate key will take precedence.
                                        Cannot be updated.
                                      items:
                                        description: EnvFromSource represents the
                                          source of a set of ConfigMaps
                                        properties:
                                          configMapRef:
                                            description: The ConfigMap to select from
                                            properties:
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          prefix:
                                            description: An optional identifier to
                                              prepend to each key in the ConfigMap.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          secretRef:
                                            description: The Secret to select from
                                            properties:
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    image:
                                      description: |-
                                        Container image name.
                                        More info: https://kubernetes.io/docs/concepts/containers/images
                                      type: string
                                    imagePullPolicy:
                                      description: |-
                                        Image pull policy.
                                        One of Always, Never, IfNotPresent.
                                        Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                                        Cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                                      type: string
                                    lifecycle:
                                      description: Lifecycle is not allowed for ephemeral
                                        containers.
                                      properties:
                                        postStart:
                                          description: |-
                                            PostStart is called immediately after a container is created. If the handler fails,
                                            the container is terminated and restarted according to its restart policy.
                                            Other management of the container blocks until the hook completes.
                                            More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                          properties:
                                            exec:
                                              description: Exec specifies a command
                                                to execute in the container.
                                              properties:
                                                command:
                                                  description: |-
                                                    Command is the command line to execute inside the container, the working directory for the
                                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                    a shell, you need to explicitly call out to that shell.
                                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies an HTTP
                                                GET request to perform.
                                              properties:
                                                host:
                                                  description: |-
                                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                                    "Host" in httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set
                                                    in the request. HTTP allows repeated
                                                    headers.
                                                  items:
                                                    description: HTTPHeader describes
                                                      a custom header to be used in
                                                      HTTP probes
                                                    properties:
                                                      name:
                                                        description: |-
                                                          The header field name.
                                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                        type: string
                                                      value:
                                                        description: The header field
                                                          value
                                                        type: string
                                                    required:
                                                    - name
                                                    - value
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                path:
                                                  description: Path to access on the
                                                    HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Name or number of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: |-
                                                    Scheme to use for connecting to the host.
                                                    Defaults to HTTP.
                                                  type: string
                                              required:
                                              - port
                                              type: object
                                            sleep:
                                              description: Sleep represents a duration
                                                that the container should sleep.
                                              properties:
                                                seconds:
                                                  description: Seconds is the number
                                                    of seconds to sleep.
                                                  format: int64
                                                  type: integer
                                              required:
                                              - seconds
                                              type: object
                                            tcpSocket:
                                              description: |-
                                                Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                                for backward compatibility. There is no validation of this field and
                                                lifecycle hooks will fail at runtime when it is specified.
                                              properties:
                                                host:
                                                  description: 'Optional: Host name
                                                    to connect to, defaults to the
                                                    pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Number or name of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                              - port
                                              type: object
                                          type: object
                                        preStop:
                                          description: |-
                                            PreStop is called immediately before a container is terminated due to an
                                            API request or management event such as liveness/startup probe failure,
                                            preemption, resource contention, etc. The handler is not called if the
                                            container crashes or exits. The Pod's termination grace period countdown begins before the
                                            PreStop hook is executed. Regardless of the outcome of the handler, the
                                            container will eventually terminate within the Pod's termination grace
                                            period (unless delayed by finalizers). Other management of the container blocks until the hook completes
                                            or until the termination grace period is reached.
                                            More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                          properties:
                                            exec:
                                              description: Exec specifies a command
                                                to execute in the container.
                                              properties:
                                                command:
                                                  description: |-
                                                    Command is the command line to execute inside the container, the working directory for the
                                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                    a shell, you need to explicitly call out to that shell.
                                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies an HTTP
                                                GET request to perform.
                                              properties:
                                                host:
                                                  description: |-
                                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                                    "Host" in httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set
                                                    in the request. HTTP allows repeated
                                                    headers.
                                                  items:
                                                    description: HTTPHeader describes
                                                      a custom header to be used in
                                                      HTTP probes
                                                    properties:
                                                      name:
                                                        description: |-
                                                          The header field name.
                                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                        type: string
                                                      value:
                                                        description: The header field
                                                          value
                                                        type: string
                                                    required:
                                                    - name
                                                    - value
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                path:
                                                  description: Path to access on the
                                                    HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Name or number of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: |-
                                                    Scheme to use for connecting to the host.
                                                    Defaults to HTTP.
                                                  type: string
                                              required:
                                              - port
                                              type: object
                                            sleep:
                                              description: Sleep represents a duration
                                                that the container should sleep.
                                              properties:
                                                seconds:
                                                  description: Seconds is the number
                                                    of seconds to sleep.
                                                  format: int64
                                                  type: integer
                                              required:
                                              - seconds
                                              type: object
                                            tcpSocket:
                                              description: |-
                                                Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                                for backward compatibility. There is no validation of this field and
                                                lifecycle hooks will fail at runtime when it is specified.
                                              properties:
                                                host:
                                                  description: 'Optional: Host name
                                                    to connect to, defaults to the
                                                    pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Number or name of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                              - port
                                              type: object
                                          type: object
                                      type: object
                                    livenessProbe:
                                      description: Probes are not allowed for ephemeral
                                        containers.
                                      properties:
                                        exec:
                                          description: Exec specifies a command to
                                            execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        failureThreshold:
                                          description: |-
                                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                            Defaults to 3. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies a GRPC HealthCheckRequest.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              default: ""
                                              description: |-
                                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                                If this is not specified, the default behavior is defined by gRPC.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: |-
                                            Number of seconds after the container has started before liveness probes are initiated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: |-
                                            How often (in seconds) to perform the probe.
                                            Default to 10 seconds. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: |-
                                            Minimum consecutive successes for the probe to be considered successful after having failed.
                                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies a connection
                                            to a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: |-
                                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                            The grace period is the duration in seconds after the processes running in the pod are sent
                                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                                            Set this value longer than the expected cleanup time for your process.
                                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                            value overrides the value provided by the pod spec.
                                            Value must be non-negative integer. The value zero indicates stop immediately via
                                            the kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: |-
                                            Number of seconds after which the probe times out.
                                            Defaults to 1 second. Minimum value is 1.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                      type: object
                                    name:
                                      description: |-
                                        Name of the ephemeral container specified as a DNS_LABEL.
                                        This name must be unique among all containers, init containers and ephemeral containers.
                                      type: string
                                    ports:
                                      description: Ports are not allowed for ephemeral
                                        containers.
                                      items:
                                        description: ContainerPort represents a network
                                          port in a single container.
                                        properties:
                                          containerPort:
                                            description: |-
                                              Number of port to expose on the pod's IP address.
                                              This must be a valid port number, 0 < x < 65536.
                                            format: int32
                                            type: integer
                                          hostIP:
                                            description: What host IP to bind the
                                              external port to.
                                            type: string
                                          hostPort:
                                            description: |-
                                              Number of port to expose on the host.
                                              If specified, this must be a valid port number, 0 < x < 65536.
                                              If HostNetwork is specified, this must match ContainerPort.
                                              Most containers do not need this.
                                            format: int32
                                            type: integer
                                          name:
                                            description: |-
                                              If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                                              named port in a pod must have a unique name. Name for the port that can be
                                              referred to by services.
                                            type: string
                                          protocol:
                                            default: TCP
                                            description: |-
                                              Protocol for port. Must be UDP, TCP, or SCTP.
                                              Defaults to "TCP".
                                            type: string
                                        required:
                                        - containerPort
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - containerPort
                                      - protocol
                                      x-kubernetes-list-type: map
                                    readinessProbe:
                                      description: Probes are not allowed for ephemeral
                                        containers.
                                      properties:
                                        exec:
                                          description: Exec specifies a command to
                                            execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        failureThreshold:
                                          description: |-
                                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                            Defaults to 3. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies a GRPC HealthCheckRequest.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              default: ""
                                              description: |-
                                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                                If this is not specified, the default behavior is defined by gRPC.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: |-
                                            Number of seconds after the container has started before liveness probes are initiated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: |-
                                            How often (in seconds) to perform the probe.
                                            Default to 10 seconds. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: |-
                                            Minimum consecutive successes for the probe to be considered successful after having failed.
                                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies a connection
                                            to a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: |-
                                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                            The grace period is the duration in seconds after the processes running in the pod are sent
                                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                                            Set this value longer than the expected cleanup time for your process.
                                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                            value overrides the value provided by the pod spec.
                                            Value must be non-negative integer. The value zero indicates stop immediately via
                                            the kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: |-
                                            Number of seconds after which the probe times out.
                                            Defaults to 1 second. Minimum value is 1.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                      type: object
                                    resizePolicy:
                                      description: Resources resize policy for the
                                        container.
                                      items:
                                        description: ContainerResizePolicy represents
                                          resource resize policy for the container.
                                        properties:
                                          resourceName:
                                            description: |-
                                              Name of the resource to which this resource resize policy applies.
                                              Supported values: cpu, memory.
                                            type: string
                                          restartPolicy:
                                            description: |-
                                              Restart policy to apply when specified resource is resized.
                                              If not specified, it defaults to NotRequired.
                                            type: string
                                        required:
                                        - resourceName
                                        - restartPolicy
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    resources:
                                      description: |-
                                        Resources are not allowed for ephemeral containers. Ephemeral containers use spare resources
                                        already allocated to the pod.
                                      properties:
                                        claims:
                                          description: |-
                                            Claims lists the names of resources, defined in spec.resourceClaims,
                                            that are used by this container.

                                            This is an alpha field and requires enabling the
                                            DynamicResourceAllocation feature gate.

                                            This field is immutable. It can only be set for containers.
                                          items:
                                            description: ResourceClaim references
                                              one entry in PodSpec.ResourceClaims.
                                            properties:
                                              name:
                                                description: |-
                                                  Name must match the name of one entry in pod.spec.resourceClaims of
                                                  the Pod where this field is used. It makes that resource available
                                                  inside a container.
                                                type: string
                                              request:
                                                description: |-
                                                  Request is the name chosen for a request in the referenced claim.
                                                  If empty, everything from the claim is made available, otherwise
                                                  only the result of this request.
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          type: array
                                          x-kubernetes-list-map-keys:
                                          - name
                                          x-kubernetes-list-type: map
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Limits describes the maximum amount of compute resources allowed.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Requests describes the minimum amount of compute resources required.
                                            If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                            otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                      type: object
                                    restartPolicy:
                                      description: |-
                                        Restart policy for the container to manage the restart behavior of each
                                        container within a pod.
                                        This may only be set for init containers. You cannot set this field on
                                        ephemeral containers.
                                      type: string
                                    securityContext:
                                      description: |-
                                        Optional: SecurityContext defines the security options the ephemeral container should be run with.
                                        If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
                                      properties:
                                        allowPrivilegeEscalation:
                                          description: |-
                                            AllowPrivilegeEscalation controls whether a process can gain more
                                            privileges than its parent process. This bool directly controls if
                                            the no_new_privs flag will be set on the container process.
                                            AllowPrivilegeEscalation is true always when the container is:
                                            1) run as Privileged
                                            2) has CAP_SYS_ADMIN
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        appArmorProfile:
                                          description: |-
                                            appArmorProfile is the AppArmor options to use by this container. If set, this profile
                                            overrides the pod's appArmorProfile.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            localhostProfile:
                                              description: |-
                                                localhostProfile indicates a profile loaded on the node that should be used.
                                                The profile must be preconfigured on the node to work.
                                                Must match the loaded name of the profile.
                                                Must be set if and only if type is "Localhost".
                                              type: string
                                            type:
                                              description: |-
                                                type indicates which kind of AppArmor profile will be applied.
                                                Valid options are:
                                                  Localhost - a profile pre-loaded on the node.
                                                  RuntimeDefault - the container runtime's default profile.
                                                  Unconfined - no AppArmor enforcement.
                                              type: string
                                          required:
                                          - type
                                          type: object
                                        capabilities:
                                          description: |-
                                            The capabilities to add/drop when running containers.
                                            Defaults to the default set of capabilities granted by the container runtime.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            add:
                                              description: Added capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            drop:
                                              description: Removed capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        privileged:
                                          description: |-
                                            Run container in privileged mode.
                                            Processes in privileged containers are essentially equivalent to root on the host.
                                            Defaults to false.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        procMount:
                                          description: |-
                                            procMount denotes the type of proc mount to use for the containers.
                                            The default value is Default which uses the container runtime defaults for
                                            readonly paths and masked paths.
                                            This requires the ProcMountType feature flag to be enabled.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: string
                                        readOnlyRootFilesystem:
                                          description: |-
                                            Whether this container has a read-only root filesystem.
                                            Default is false.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        runAsGroup:
                                          description: |-
                                            The GID to run the entrypoint of the container process.
                                            Uses runtime default if unset.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        runAsNonRoot:
                                          description: |-
                                            Indicates that the container must run as a non-root user.
                                            If true, the Kubelet will validate the image at runtime to ensure that it
                                            does not run as UID 0 (root) and fail to start the container if it does.
                                            If unset or false, no such validation will be performed.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                          type: boolean
                                        runAsUser:
                                          description: |-
                                            The UID to run the entrypoint of the container process.
                                            Defaults to user specified in image metadata if unspecified.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        seLinuxOptions:
                                          description: |-
                                            The SELinux context to be applied to the container.
                                            If unspecified, the container runtime will allocate a random SELinux context for each
                                            container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            level:
                                              description: Level is SELinux level
                                                label that applies to the container.
                                              type: string
                                            role:
                                              description: Role is a SELinux role
                                                label that applies to the container.
                                              type: string
                                            type:
                                              description: Type is a SELinux type
                                                label that applies to the container.
                                              type: string
                                            user:
                                              description: User is a SELinux user
                                                label that applies to the container.
                                              type: string
                                          type: object
                                        seccompProfile:
                                          description: |-
                                            The seccomp options to use by this container. If seccomp options are
                                            provided at both the pod & container level, the container options
                                            override the pod options.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            localhostProfile:
                                              description: |-
                                                localhostProfile indicates a profile defined in a file on the node should be used.
                                                The profile must be preconfigured on the node to work.
                                                Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                                Must be set if type is "Localhost". Must NOT be set for any other type.
                                              type: string
                                            type:
                                              description: |-
                                                type indicates which kind of seccomp profile will be applied.
                                                Valid options are:

                                                Localhost - a profile defined in a file on the node should be used.
                                                RuntimeDefault - the container runtime default profile should be used.
                                                Unconfined - no profile should be applied.
                                              type: string
                                          required:
                                          - type
                                          type: object
                                        windowsOptions:
                                          description: |-
                                            The Windows specific settings applied to all containers.
                                            If unspecified, the options from the PodSecurityContext will be used.
                                            If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is linux.
                                          properties:
                                            gmsaCredentialSpec:
                                              description: |-
                                                GMSACredentialSpec is where the GMSA admission webhook
                                                (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                                GMSA credential spec named by the GMSACredentialSpecName field.
                                              type: string
                                            gmsaCredentialSpecName:
                                              description: GMSACredentialSpecName
                                                is the name of the GMSA credential
                                                spec to use.
                                              type: string
                                            hostProcess:
                                              description: |-
                                                HostProcess determines if a container should be run as a 'Host Process' container.
                                                All of a Pod's containers must have the same effective HostProcess value
                                                (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                                In addition, if HostProcess is true then HostNetwork must also be set to true.
                                              type: boolean
                                            runAsUserName:
                                              description: |-
                                                The UserName in Windows to run the entrypoint of the container process.
                                                Defaults to the user specified in image metadata if unspecified.
                                                May also be set in PodSecurityContext. If set in both SecurityContext and
                                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                                              type: string
                                          type: object
                                      type: object
                                    startupProbe:
                                      description: Probes are not allowed for ephemeral
                                        containers.
                                      properties:
                                        exec:
                                          description: Exec specifies a command to
                                            execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        failureThreshold:
                                          description: |-
                                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                            Defaults to 3. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies a GRPC HealthCheckRequest.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              default: ""
                                              description: |-
                                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                                If this is not specified, the default behavior is defined by gRPC.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: |-
                                            Number of seconds after the container has started before liveness probes are initiated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: |-
                                            How often (in seconds) to perform the probe.
                                            Default to 10 seconds. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: |-
                                            Minimum consecutive successes for the probe to be considered successful after having failed.
                                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies a connection
                                            to a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: |-
                                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                            The grace period is the duration in seconds after the processes running in the pod are sent
                                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                                            Set this value longer than the expected cleanup time for your process.
                                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                            value overrides the value provided by the pod spec.
                                            Value must be non-negative integer. The value zero indicates stop immediately via
                                            the kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: |-
                                            Number of seconds after which the probe times out.
                                            Defaults to 1 second. Minimum value is 1.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                      type: object
                                    stdin:
                                      description: |-
                                        Whether this container should allocate a buffer for stdin in the container runtime. If this
                                        is not set, reads from stdin in the container will always result in EOF.
                                        Default is false.
                                      type: boolean
                                    stdinOnce:
                                      description: |-
                                        Whether the container runtime should close the stdin channel after it has been opened by
                                        a single attach. When stdin is true the stdin stream will remain open across multiple attach
                                        sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
                                        first client attaches to stdin, and then remains open and accepts data until the client disconnects,
                                        at which time stdin is closed and remains closed until the container is restarted. If this
                                        flag is false, a container processes that reads from stdin will never receive an EOF.
                                        Default is false
                                      type: boolean
                                    targetContainerName:
                                      description: |-
                                        If set, the name of the container from PodSpec that this ephemeral container targets.
                                        The ephemeral container will be run in the namespaces (IPC, PID, etc) of this container.
                                        If not set then the ephemeral container uses the namespaces configured in the Pod spec.

                                        The container runtime must implement support for this feature. If the runtime does not
                                        support namespace targeting then the result of setting this field is undefined.
                                      type: string
                                    terminationMessagePath:
                                      description: |-
                                        Optional: Path at which the file to which the container's termination message
                                        will be written is mounted into the container's filesystem.
                                        Message written is intended to be brief final status, such as an assertion failure message.
                                        Will be truncated by the node if greater than 4096 bytes. The total message length across
                                        all containers will be limited to 12kb.
                                        Defaults to /dev/termination-log.
                                        Cannot be updated.
                                      type: string
                                    terminationMessagePolicy:
                                      description: |-
                                        Indicate how the termination message should be populated. File will use the contents of
                                        terminationMessagePath to populate the container status message on both success and failure.
                                        FallbackToLogsOnError will use the last chunk of container log output if the termination
                                        message file is empty and the container exited with an error.
                                        The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
                                        Defaults to File.
                                        Cannot be updated.
                                      type: string
                                    tty:
                                      description: |-
                                        Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
                                        Default is false.
                                      type: boolean
                                    volumeDevices:
                                      description: volumeDevices is the list of block
                                        devices to be used by the container.
                                      items:
                                        description: volumeDevice describes a mapping
                                          of a raw block device within a container.
                                        properties:
                                          devicePath:
                                            description: devicePath is the path inside
                                              of the container that the device will
                                              be mapped to.
                                            type: string
                                          name:
                                            description: name must match the name
                                              of a persistentVolumeClaim in the pod
                                            type: string
                                        required:
                                        - devicePath
                                        - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - devicePath
                                      x-kubernetes-list-type: map
                                    volumeMounts:
                                      description: |-
                                        Pod volumes to mount into the container's filesystem. Subpath mounts are not allowed for ephemeral containers.
                                        Cannot be updated.
                                      items:
                                        description: VolumeMount describes a mounting
                                          of a Volume within a container.
                                        properties:
                                          mountPath:
                                            description: |-
                                              Path within the container at which the volume should be mounted.  Must
                                              not contain ':'.
                                            type: string
                                          mountPropagation:
                                            description: |-
                                              mountPropagation determines how mounts are propagated from the host
                                              to container and the other way around.
                                              When not set, MountPropagationNone is used.
                                              This field is beta in 1.10.
                                              When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                                              (which defaults to None).
                                            type: string
                                          name:
                                            description: This must match the Name
                                              of a Volume.
                                            type: string
                                          readOnly:
                                            description: |-
                                              Mounted read-only if true, read-write otherwise (false or unspecified).
                                              Defaults to false.
                                            type: boolean
                                          recursiveReadOnly:
                                            description: |-
                                              RecursiveReadOnly specifies whether read-only mounts should be handled
                                              recursively.

                                              If ReadOnly is false, this field has no meaning and must be unspecified.

                                              If ReadOnly is true, and this field is set to Disabled, the mount is not made
                                              recursively read-only.  If this field is set to IfPossible, the mount is made
                                              recursively read-only, if it is supported by the container runtime.  If this
                                              field is set to Enabled, the mount is made recursively read-only if it is
                                              supported by the container runtime, otherwise the pod will not be started and
                                              an error will be generated to indicate the reason.

                                              If this field is set to IfPossible or Enabled, MountPropagation must be set to
                                              None (or be unspecified, which defaults to None).

                                              If this field is not specified, it is treated as an equivalent of Disabled.
                                            type: string
                                          subPath:
                                            description: |-
                                              Path within the volume from which the container's volume should be mounted.
                                              Defaults to "" (volume's root).
                                            type: string
                                          subPathExpr:
                                            description: |-
                                              Expanded path within the volume from which the container's volume should be mounted.
                                              Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                              Defaults to "" (volume's root).
                                              SubPathExpr and SubPath are mutually exclusive.
                                            type: string
                                        required:
                                        - mountPath
                                        - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - mountPath
                                      x-kubernetes-list-type: map
                                    workingDir:
                                      description: |-
                                        Container's working directory.
                                        If not specified, the container runtime's default will be used, which
                                        might be configured in the container image.
                                        Cannot be updated.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              hostAliases:
                                description: |-
                                  HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts
                                  file if specified.
                                items:
                                  description: |-
                                    HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                                    pod's hosts file.
                                  properties:
                                    hostnames:
                                      description: Hostnames for the above IP address.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    ip:
                                      description: IP address of the host file entry.
                                      type: string
                                  required:
                                  - ip
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - ip
                                x-kubernetes-list-type: map
                              hostIPC:
                                description: |-
                                  Use the host's ipc namespace.
                                  Optional: Default to false.
                                type: boolean
                              hostNetwork:
                                description: |-
                                  Host networking requested for this pod. Use the host's network namespace.
                                  If this option is set, the ports that will be used must be specified.
                                  Default to false.
                                type: boolean
                              hostPID:
                                description: |-
                                  Use the host's pid namespace.
                                  Optional: Default to false.
                                type: boolean
                              hostUsers:
                                description: |-
                                  Use the host's user namespace.
                                  Optional: Default to true.
                                  If set to true or not present, the pod will be run in the host user namespace, useful
                                  for when the pod needs a feature only available to the host user namespace, such as
                                  loading a kernel module with CAP_SYS_MODULE.
                                  When set to false, a new userns is created for the pod. Setting false is useful for
                                  mitigating container breakout vulnerabilities even allowing users to run their
                                  containers as root without actually having root privileges on the host.
                                  This field is alpha-level and is only honored by servers that enable the UserNamespacesSupport feature.
                                type: boolean
                              hostname:
                                description: |-
                                  Specifies the hostname of the Pod
                                  If not specified, the pod's hostname will be set to a system-defined value.
                                type: string
                              imagePullSecrets:
                                description: |-
                                  ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.
                                  If specified, these secrets will be passed to individual puller implementations for them to use.
                                  More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod
                                items:
                                  description: |-
                                    LocalObjectReference contains enough information to let you locate the
                                    referenced object inside the same namespace.
                                  properties:
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              initContainers:
                                description: |-
                                  List of initialization containers belonging to the pod.
                                  Init containers are executed in order prior to containers being started. If any
                                  init container fails, the pod is considered to have failed and is handled according
                                  to its restartPolicy. The name for an init container or normal container must be
                                  unique among all containers.
                                  Init containers may not have Lifecycle actions, Readiness probes, Liveness probes, or Startup probes.
                                  The resourceRequirements of an init container are taken into account during scheduling
                                  by finding the highest request/limit for each resource type, and then using the max of
                                  of that value or the sum of the normal containers. Limits are applied to init containers
                                  in a similar fashion.
                                  Init containers cannot currently be added or removed.
                                  Cannot be updated.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
                                items:
                                  description: A single application container that
                                    you want to run within a pod.
                                  properties:
                                    args:
                                      description: |-
                                        Arguments to the entrypoint.
                                        The container image's CMD is used if this is not provided.
                                        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                        of whether the variable exists or not. Cannot be updated.
                                        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    command:
                                      description: |-
                                        Entrypoint array. Not executed within a shell.
                                        The container image's ENTRYPOINT is used if this is not provided.
                                        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                        of whether the variable exists or not. Cannot be updated.
                                        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    env:
                                      description: |-
                                        List of environment variables to set in the container.
                                        Cannot be updated.
                                      items:
                                        description: EnvVar represents an environment
                                          variable present in a Container.
                                        properties:
                                          name:
                                            description: Name of the environment variable.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          value:
                                            description: |-
                                              Variable references $(VAR_NAME) are expanded
                                              using the previously defined environment variables in the container and
                                              any service environment variables. If a variable cannot be resolved,
                                              the reference in the input string will be unchanged. Double $$ are reduced
                                              to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                              "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                              Escaped references will never be expanded, regardless of whether the variable
                                              exists or not.
                                              Defaults to "".
                                            type: string
                                          valueFrom:
                                            description: Source for the environment
                                              variable's value. Cannot be used if
                                              value is not empty.
                                            properties:
                                              configMapKeyRef:
                                                description: Selects a key of a ConfigMap.
                                                properties:
                                                  key:
                                                    description: The key to select.
                                                    type: string
                                                  name:
                                                    default: ""
                                                    description: |-
                                                      Name of the referent.
                                                      This field is effectively required, but due to backwards compatibility is
                                                      allowed to be empty. Instances of this type with an empty value here are
                                                      almost certainly wrong.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      ConfigMap or its key must be
                                                      defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              fieldRef:
                                                description: |-
                                                  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                                  spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema
                                                      the FieldPath is written in
                                                      terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field
                                                      to select in the specified API
                                                      version.
                                                    type: string
                                                required:
                                                - fieldPath
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              resourceFieldRef:
                                                description: |-
                                                  Selects a resource of the container: only resources limits and requests
                                                  (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                                properties:
                                                  containerName:
                                                    description: 'Container name:
                                                      required for volumes, optional
                                                      for env vars'
                                                    type: string
                                                  divisor:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Specifies the output
                                                      format of the exposed resources,
                                                      defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource
                                                      to select'
                                                    type: string
                                                required:
                                                - resource
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              secretKeyRef:
                                                description: Selects a key of a secret
                                                  in the pod's namespace
                                                properties:
                                                  key:
                                                    description: The key of the secret
                                                      to select from.  Must be a valid
                                                      secret key.
                                                    type: string
                                                  name:
                                                    default: ""
                                                    description: |-
                                                      Name of the referent.
                                                      This field is effectively required, but due to backwards compatibility is
                                                      allowed to be empty. Instances of this type with an empty value here are
                                                      almost certainly wrong.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      Secret or its key must be defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                            type: object
                                        required:
                                        - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    envFrom:
                                      description: |-
                                        List of sources to populate environment variables in the container.
                                        The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                                        will be reported as an event when the container is starting. When a key exists in multiple
                                        sources, the value associated with the last source will take precedence.
                                        Values defined by an Env with a duplicate key will take precedence.
                                        Cannot be updated.
                                      items:
                                        description: EnvFromSource represents the
                                          source of a set of ConfigMaps
                                        properties:
                                          configMapRef:
                                            description: The ConfigMap to select from
                                            properties:
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          prefix:
                                            description: An optional identifier to
                                              prepend to each key in the ConfigMap.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          secretRef:
                                            description: The Secret to select from
                                            properties:
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    image:
                                      description: |-
                                        Container image name.
                                        More info: https://kubernetes.io/docs/concepts/containers/images
                                        This field is optional to allow higher level config management to default or override
                                        container images in workload controllers like Deployments and StatefulSets.
                                      type: string
                                    imagePullPolicy:
                                      description: |-
                                        Image pull policy.
                                        One of Always, Never, IfNotPresent.
                                        Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                                        Cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                                      type: string
                                    lifecycle:
                                      description: |-
                                        Actions that the management system should take in response to container lifecycle events.
                                        Cannot be updated.
                                      properties:
                                        postStart:
                                          description: |-
                                            PostStart is called immediately after a container is created. If the handler fails,
                                            the container is terminated and restarted according to its restart policy.
                                            Other management of the container blocks until the hook completes.
                                            More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                          properties:
                                            exec:
                                              description: Exec specifies a command
                                                to execute in the container.
                                              properties:
                                                command:
                                                  description: |-
                                                    Command is the command line to execute inside the container, the working directory for the
                                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                    a shell, you need to explicitly call out to that shell.
                                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies an HTTP
                                                GET request to perform.
                                              properties:
                                                host:
                                                  description: |-
                                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                                    "Host" in httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set
                                                    in the request. HTTP allows repeated
                                                    headers.
                                                  items:
                                                    description: HTTPHeader describes
                                                      a custom header to be used in
                                                      HTTP probes
                                                    properties:
                                                      name:
                                                        description: |-
                                                          The header field name.
                                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                        type: string
                                                      value:
                                                        description: The header field
                                                          value
                                                        type: string
                                                    required:
                                                    - name
                                                    - value
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                path:
                                                  description: Path to access on the
                                                    HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Name or number of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: |-
                                                    Scheme to use for connecting to the host.
                                                    Defaults to HTTP.
                                                  type: string
                                              required:
                                              - port
                                              type: object
                                            sleep:
                                              description: Sleep represents a duration
                                                that the container should sleep.
                                              properties:
                                                seconds:
                                                  description: Seconds is the number
                                                    of seconds to sleep.
                                                  format: int64
                                                  type: integer
                                              required:
                                              - seconds
                                              type: object
                                            tcpSocket:
                                              description: |-
                                                Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                                for backward compatibility. There is no validation of this field and
                                                lifecycle hooks will fail at runtime when it is specified.
                                              properties:
                                                host:
                                                  description: 'Optional: Host name
                                                    to connect to, defaults to the
                                                    pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Number or name of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                              - port
                                              type: object
                                          type: object
                                        preStop:
                                          description: |-
                                            PreStop is called immediately before a container is terminated due to an
                                            API request or management event such as liveness/startup probe failure,
                                            preemption, resource contention, etc. The handler is not called if the
                                            container crashes or exits. The Pod's termination grace period countdown begins before the
                                            PreStop hook is executed. Regardless of the outcome of the handler, the
                                            container will eventually terminate within the Pod's termination grace
                                            period (unless delayed by finalizers). Other management of the container blocks until the hook completes
                                            or until the termination grace period is reached.
                                            More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                          properties:
                                            exec:
                                              description: Exec specifies a command
                                                to execute in the container.
                                              properties:
                                                command:
                                                  description: |-
                                                    Command is the command line to execute inside the container, the working directory for the
                                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                    a shell, you need to explicitly call out to that shell.
                                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies an HTTP
                                                GET request to perform.
                                              properties:
                                                host:
                                                  description: |-
                                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                                    "Host" in httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set
                                                    in the request. HTTP allows repeated
                                                    headers.
                                                  items:
                                                    description: HTTPHeader describes
                                                      a custom header to be used in
                                                      HTTP probes
                                                    properties:
                                                      name:
                                                        description: |-
                                                          The header field name.
                                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                        type: string
                                                      value:
                                                        description: The header field
                                                          value
                                                        type: string
                                                    required:
                                                    - name
                                                    - value
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                path:
                                                  description: Path to access on the
                                                    HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Name or number of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: |-
                                                    Scheme to use for connecting to the host.
                                                    Defaults to HTTP.
                                                  type: string
                                              required:
                                              - port
                                              type: object
                                            sleep:
                                              description: Sleep represents a duration
                                                that the container should sleep.
                                              properties:
                                                seconds:
                                                  description: Seconds is the number
                                                    of seconds to sleep.
                                                  format: int64
                                                  type: integer
                                              required:
                                              - seconds
                                              type: object
                                            tcpSocket:
                                              description: |-
                                                Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                                for backward compatibility. There is no validation of this field and
                                                lifecycle hooks will fail at runtime when it is specified.
                                              properties:
                                                host:
                                                  description: 'Optional: Host name
                                                    to connect to, defaults to the
                                                    pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Number or name of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                              - port
                                              type: object
                                          type: object
                                      type: object
                                    livenessProbe:
                                      description: |-
                                        Periodic probe of container liveness.
                                        Container will be restarted if the probe fails.
                                        Cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      properties:
                                        exec:
                                          description: Exec specifies a command to
                                            execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        failureThreshold:
                                          description: |-
                                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                            Defaults to 3. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies a GRPC HealthCheckRequest.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              default: ""
                                              description: |-
                                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                                If this is not specified, the default behavior is defined by gRPC.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: |-
                                            Number of seconds after the container has started before liveness probes are initiated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: |-
                                            How often (in seconds) to perform the probe.
                                            Default to 10 seconds. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: |-
                                            Minimum consecutive successes for the probe to be considered successful after having failed.
                                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies a connection
                                            to a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: |-
                                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                            The grace period is the duration in seconds after the processes running in the pod are sent
                                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                                            Set this value longer than the expected cleanup time for your process.
                                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                            value overrides the value provided by the pod spec.
                                            Value must be non-negative integer. The value zero indicates stop immediately via
                                            the kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: |-
                                            Number of seconds after which the probe times out.
                                            Defaults to 1 second. Minimum value is 1.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                      type: object
                                    name:
                                      description: |-
                                        Name of the container specified as a DNS_LABEL.
                                        Each container in a pod must have a unique name (DNS_LABEL).
                                        Cannot be updated.
                                      type: string
                                    ports:
                                      description: |-
                                        List of ports to expose from the container. Not specifying a port here
                                        DOES NOT prevent that port from being exposed. Any port which is
                                        listening on the default "0.0.0.0" address inside a container will be
                                        accessible from the network.
                                        Modifying this array with strategic merge patch may corrupt the data.
                                        For more information See https://github.com/kubernetes/kubernetes/issues/108255.
                                        Cannot be updated.
                                      items:
                                        description: ContainerPort represents a network
                                          port in a single container.
                                        properties:
                                          containerPort:
                                            description: |-
                                              Number of port to expose on the pod's IP address.
                                              This must be a valid port number, 0 < x < 65536.
                                            format: int32
                                            type: integer
                                          hostIP:
                                            description: What host IP to bind the
                                              external port to.
                                            type: string
                                          hostPort:
                                            description: |-
                                              Number of port to expose on the host.
                                              If specified, this must be a valid port number, 0 < x < 65536.
                                              If HostNetwork is specified, this must match ContainerPort.
                                              Most containers do not need this.
                                            format: int32
                                            type: integer
                                          name:
                                            description: |-
                                              If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                                              named port in a pod must have a unique name. Name for the port that can be
                                              referred to by services.
                                            type: string
                                          protocol:
                                            default: TCP
                                            description: |-
                                              Protocol for port. Must be UDP, TCP, or SCTP.
                                              Defaults to "TCP".
                                            type: string
                                        required:
                                        - containerPort
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - containerPort
                                      - protocol
                                      x-kubernetes-list-type: map
                                    readinessProbe:
                                      description: |-
                                        Periodic probe of container service readiness.
                                        Container will be removed from service endpoints if the probe fails.
                                        Cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      properties:
                                        exec:
                                          description: Exec specifies a command to
                                            execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        failureThreshold:
                                          description: |-
                                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                            Defaults to 3. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies a GRPC HealthCheckRequest.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              default: ""
                                              description: |-
                                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                                If this is not specified, the default behavior is defined by gRPC.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: |-
                                            Number of seconds after the container has started before liveness probes are initiated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: |-
                                            How often (in seconds) to perform the probe.
                                            Default to 10 seconds. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: |-
                                            Minimum consecutive successes for the probe to be considered successful after having failed.
                                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies a connection
                                            to a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: |-
                                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                            The grace period is the duration in seconds after the processes running in the pod are sent
                                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                                            Set this value longer than the expected cleanup time for your process.
                                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                            value overrides the value provided by the pod spec.
                                            Value must be non-negative integer. The value zero indicates stop immediately via
                                            the kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: |-
                                            Number of seconds after which the probe times out.
                                            Defaults to 1 second. Minimum value is 1.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                      type: object
                                    resizePolicy:
                                      description: Resources resize policy for the
                                        container.
                                      items:
                                        description: ContainerResizePolicy represents
                                          resource resize policy for the container.
                                        properties:
                                          resourceName:
                                            description: |-
                                              Name of the resource to which this resource resize policy applies.
                                              Supported values: cpu, memory.
                                            type: string
                                          restartPolicy:
                                            description: |-
                                              Restart policy to apply when specified resource is resized.
                                              If not specified, it defaults to NotRequired.
                                            type: string
                                        required:
                                        - resourceName
                                        - restartPolicy
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    resources:
                                      description: |-
                                        Compute Resources required by this container.
                                        Cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                      properties:
                                        claims:
                                          description: |-
                                            Claims lists the names of resources, defined in spec.resourceClaims,
                                            that are used by this container.

                                            This is an alpha field and requires enabling the
                                            DynamicResourceAllocation feature gate.

                                            This field is immutable. It can only be set for containers.
                                          items:
                                            description: ResourceClaim references
                                              one entry in PodSpec.ResourceClaims.
                                            properties:
                                              name:
                                                description: |-
                                                  Name must match the name of one entry in pod.spec.resourceClaims of
                                                  the Pod where this field is used. It makes that resource available
                                                  inside a container.
                                                type: string
                                              request:
                                                description: |-
                                                  Request is the name chosen for a request in the referenced claim.
                                                  If empty, everything from the claim is made available, otherwise
                                                  only the result of this request.
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          type: array
                                          x-kubernetes-list-map-keys:
                                          - name
                                          x-kubernetes-list-type: map
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Limits describes the maximum amount of compute resources allowed.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Requests describes the minimum amount of compute resources required.
                                            If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                            otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                      type: object
                                    restartPolicy:
                                      description: |-
                                        RestartPolicy defines the restart behavior of individual containers in a pod.
                                        This field may only be set for init containers, and the only allowed value is "Always".
                                        For non-init containers or when this field is not specified,
                                        the restart behavior is defined by the Pod's restart policy and the container type.
                                        Setting the RestartPolicy as "Always" for the init container will have the following effect:
                                        this init container will be continually restarted on
                                        exit until all regular containers have terminated. Once all regular
                                        containers have completed, all init containers with restartPolicy "Always"
                                        will be shut down. This lifecycle differs from normal init containers and
                                        is often referred to as a "sidecar" container. Although this init
                                        container still starts in the init container sequence, it does not wait
                                        for the container to complete before proceeding to the next init
                                        container. Instead, the next init container starts immediately after this
                                        init container is started, or after any startupProbe has successfully
                                        completed.
                                      type: string
                                    securityContext:
                                      description: |-
                                        SecurityContext defines the security options the container should be run with.
                                        If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
                                        More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
                                      properties:
                                        allowPrivilegeEscalation:
                                          description: |-
                                            AllowPrivilegeEscalation controls whether a process can gain more
                                            privileges than its parent process. This bool directly controls if
                                            the no_new_privs flag will be set on the container process.
                                            AllowPrivilegeEscalation is true always when the container is:
                                            1) run as Privileged
                                            2) has CAP_SYS_ADMIN
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        appArmorProfile:
                                          description: |-
                                            appArmorProfile is the AppArmor options to use by this container. If set, this profile
                                            overrides the pod's appArmorProfile.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            localhostProfile:
                                              description: |-
                                                localhostProfile indicates a profile loaded on the node that should be used.
                                                The profile must be preconfigured on the node to work.
                                                Must match the loaded name of the profile.
                                                Must be set if and only if type is "Localhost".
                                              type: string
                                            type:
                                              description: |-
                                                type indicates which kind of AppArmor profile will be applied.
                                                Valid options are:
                                                  Localhost - a profile pre-loaded on the node.
                                                  RuntimeDefault - the container runtime's default profile.
                                                  Unconfined - no AppArmor enforcement.
                                              type: string
                                          required:
                                          - type
                                          type: object
                                        capabilities:
                                          description: |-
                                            The capabilities to add/drop when running containers.
                                            Defaults to the default set of capabilities granted by the container runtime.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            add:
                                              description: Added capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            drop:
                                              description: Removed capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        privileged:
                                          description: |-
                                            Run container in privileged mode.
                                            Processes in privileged containers are essentially equivalent to root on the host.
                                            Defaults to false.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        procMount:
                                          description: |-
                                            procMount denotes the type of proc mount to use for the containers.
                                            The default value is Default which uses the container runtime defaults for
                                            readonly paths and masked paths.
                                            This requires the ProcMountType feature flag to be enabled.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: string
                                        readOnlyRootFilesystem:
                                          description: |-
                                            Whether this container has a read-only root filesystem.
                                            Default is false.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        runAsGroup:
                                          description: |-
                                            The GID to run the entrypoint of the container process.
                                            Uses runtime default if unset.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        runAsNonRoot:
                                          description: |-
                                            Indicates that the container must run as a non-root user.
                                            If true, the Kubelet will validate the image at runtime to ensure that it
                                            does not run as UID 0 (root) and fail to start the container if it does.
                                            If unset or false, no such validation will be performed.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                          type: boolean
                                        runAsUser:
                                          description: |-
                                            The UID to run the entrypoint of the container process.
                                            Defaults to user specified in image metadata if unspecified.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        seLinuxOptions:
                                          description: |-
                                            The SELinux context to be applied to the container.
                                            If unspecified, the container runtime will allocate a random SELinux context for each
                                            container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            level:
                                              description: Level is SELinux level
                                                label that applies to the container.
                                              type: string
                                            role:
                                              description: Role is a SELinux role
                                                label that applies to the container.
                                              type: string
                                            type:
                                              description: Type is a SELinux type
                                                label that applies to the container.
                                              type: string
                                            user:
                                              description: User is a SELinux user
                                                label that applies to the container.
                                              type: string
                                          type: object
                                        seccompProfile:
                                          description: |-
                                            The seccomp options to use by this container. If seccomp options are
                                            provided at both the pod & container level, the container options
                                            override the pod options.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            localhostProfile:
                                              description: |-
                                                localhostProfile indicates a profile defined in a file on the node should be used.
                                                The profile must be preconfigured on the node to work.
                                                Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                                Must be set if type is "Localhost". Must NOT be set for any other type.
                                              type: string
                                            type:
                                              description: |-
                                                type indicates which kind of seccomp profile will be applied.
                                                Valid options are:

                                                Localhost - a profile defined in a file on the node should be used.
                                                RuntimeDefault - the container runtime default profile should be used.
                                                Unconfined - no profile should be applied.
                                              type: string
                                          required:
                                          - type
                                          type: object
                                        windowsOptions:
                                          description: |-
                                            The Windows specific settings applied to all containers.
                                            If unspecified, the options from the PodSecurityContext will be used.
                                            If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is linux.
                                          properties:
                                            gmsaCredentialSpec:
                                              description: |-
                                                GMSACredentialSpec is where the GMSA admission webhook
                                                (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                                GMSA credential spec named by the GMSACredentialSpecName field.
                                              type: string
                                            gmsaCredentialSpecName:
                                              description: GMSACredentialSpecName
                                                is the name of the GMSA credential
                                                spec to use.
                                              type: string
                                            hostProcess:
                                              description: |-
                                                HostProcess determines if a container should be run as a 'Host Process' container.
                                                All of a Pod's containers must have the same effective HostProcess value
                                                (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                                In addition, if HostProcess is true then HostNetwork must also be set to true.
                                              type: boolean
                                            runAsUserName:
                                              description: |-
                                                The UserName in Windows to run the entrypoint of the container process.
                                                Defaults to the user specified in image metadata if unspecified.
                                                May also be set in PodSecurityContext. If set in both SecurityContext and
                                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                                              type: string
                                          type: object
                                      type: object
                                    startupProbe:
                                      description: |-
                                        StartupProbe indicates that the Pod has successfully initialized.
                                        If specified, no other probes are executed until this completes successfully.
                                        If this probe fails, the Pod will be restarted, just as if the livenessProbe failed.
                                        This can be used to provide different probe parameters at the beginning of a Pod's lifecycle,
                                        when it might take a long time to load data or warm a cache, than during steady-state operation.
                                        This cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      properties:
                                        exec:
                                          description: Exec specifies a command to
                                            execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        failureThreshold:
                                          description: |-
                                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                            Defaults to 3. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies a GRPC HealthCheckRequest.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              default: ""
                                              description: |-
                                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                                If this is not specified, the default behavior is defined by gRPC.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: |-
                                            Number of seconds after the container has started before liveness probes are initiated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: |-
                                            How often (in seconds) to perform the probe.
                                            Default to 10 seconds. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: |-
                                            Minimum consecutive successes for the probe to be considered successful after having failed.
                                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies a connection
                                            to a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: |-
                                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                            The grace period is the duration in seconds after the processes running in the pod are sent
                                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                                            Set this value longer than the expected cleanup time for your process.
                                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                            value overrides the value provided by the pod spec.
                                            Value must be non-negative integer. The value zero indicates stop immediately via
                                            the kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: |-
                                            Number of seconds after which the probe times out.
                                            Defaults to 1 second. Minimum value is 1.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                      type: object
                                    stdin:
                                      description: |-
                                        Whether this container should allocate a buffer for stdin in the container runtime. If this
                                        is not set, reads from stdin in the container will always result in EOF.
                                        Default is false.
                                      type: boolean
                                    stdinOnce:
                                      description: |-
                                        Whether the container runtime should close the stdin channel after it has been opened by
                                        a single attach. When stdin is true the stdin stream will remain open across multiple attach
                                        sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
                                        first client attaches to stdin, and then remains open and accepts data until the client disconnects,
                                        at which time stdin is closed and remains closed until the container is restarted. If this
                                        flag is false, a container processes that reads from stdin will never receive an EOF.
                                        Default is false
                                      type: boolean
                                    terminationMessagePath:
                                      description: |-
                                        Optional: Path at which the file to which the container's termination message
                                        will be written is mounted into the container's filesystem.
                                        Message written is intended to be brief final status, such as an assertion failure message.
                                        Will be truncated by the node if greater than 4096 bytes. The total message length across
                                        all containers will be limited to 12kb.
                                        Defaults to /dev/termination-log.
                                        Cannot be updated.
                                      type: string
                                    terminationMessagePolicy:
                                      description: |-
                                        Indicate how the termination message should be populated. File will use the contents of
                                        terminationMessagePath to populate the container status message on both success and failure.
                                        FallbackToLogsOnError will use the last chunk of container log output if the termination
                                        message file is empty and the container exited with an error.
                                        The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
                                        Defaults to File.
                                        Cannot be updated.
                                      type: string
                                    tty:
                                      description: |-
                                        Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
                                        Default is false.
                                      type: boolean
                                    volumeDevices:
                                      description: volumeDevices is the list of block
                                        devices to be used by the container.
                                      items:
                                        description: volumeDevice describes a mapping
                                          of a raw block device within a container.
                                        properties:
                                          devicePath:
                                            description: devicePath is the path inside
                                              of the container that the device will
                                              be mapped to.
                                            type: string
                                          name:
                                            description: name must match the name
                                              of a persistentVolumeClaim in the pod
                                            type: string
                                        required:
                                        - devicePath
                                        - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - devicePath
                                      x-kubernetes-list-type: map
                                    volumeMounts:
                                      description: |-
                                        Pod volumes to mount into the container's filesystem.
                                        Cannot be updated.
                                      items:
                                        description: VolumeMount describes a mounting
                                          of a Volume within a container.
                                        properties:
                                          mountPath:
                                            description: |-
                                              Path within the container at which the volume should be mounted.  Must
                                              not contain ':'.
                                            type: string
                                          mountPropagation:
                                            description: |-
                                              mountPropagation determines how mounts are propagated from the host
                                              to container and the other way around.
                                              When not set, MountPropagationNone is used.
                                              This field is beta in 1.10.
                                              When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                                              (which defaults to None).
                                            type: string
                                          name:
                                            description: This must match the Name
                                              of a Volume.
                                            type: string
                                          readOnly:
                                            description: |-
                                              Mounted read-only if true, read-write otherwise (false or unspecified).
                                              Defaults to false.
                                            type: boolean
                                          recursiveReadOnly:
                                            description: |-
                                              RecursiveReadOnly specifies whether read-only mounts should be handled
                                              recursively.

                                              If ReadOnly is false, this field has no meaning and must be unspecified.

                                              If ReadOnly is true, and this field is set to Disabled, the mount is not made
                                              recursively read-only.  If this field is set to IfPossible, the mount is made
                                              recursively read-only, if it is supported by the container runtime.  If this
                                              field is set to Enabled, the mount is made recursively read-only if it is
                                              supported by the container runtime, otherwise the pod will not be started and
                                              an error will be generated to indicate the reason.

                                              If this field is set to IfPossible or Enabled, MountPropagation must be set to
                                              None (or be unspecified, which defaults to None).

                                              If this field is not specified, it is treated as an equivalent of Disabled.
                                            type: string
                                          subPath:
                                            description: |-
                                              Path within the volume from which the container's volume should be mounted.
                                              Defaults to "" (volume's root).
                                            type: string
                                          subPathExpr:
                                            description: |-
                                              Expanded path within the volume from which the container's volume should be mounted.
                                              Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                              Defaults to "" (volume's root).
                                              SubPathExpr and SubPath are mutually exclusive.
                                            type: string
                                        required:
                                        - mountPath
                                        - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - mountPath
                                      x-kubernetes-list-type: map
                                    workingDir:
                                      description: |-
                                        Container's working directory.
                                        If not specified, the container runtime's default will be used, which
                                        might be configured in the container image.
                                        Cannot be updated.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              nodeName:
                                description: |-
                                  NodeName indicates in which node this pod is scheduled.
                                  If empty, this pod is a candidate for scheduling by the scheduler defined in schedulerName.
                                  Once this field is set, the kubelet for this node becomes responsible for the lifecycle of this pod.
                                  This field should not be used to express a desire for the pod to be scheduled on a specific node.
                                  https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodename
                                type: string
                              nodeSelector:
                                additionalProperties:
                                  type: string
                                description: |-
                                  NodeSelector is a selector which must be true for the pod to fit on a node.
                                  Selector which must match a node's labels for the pod to be scheduled on that node.
                                  More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                                type: object
                                x-kubernetes-map-type: atomic
                              os:
                                description: |-
                                  Specifies the OS of the containers in the pod.
                                  Some pod and container fields are restricted if this is set.

                                  If the OS field is set to linux, the following fields must be unset:
                                  -securityContext.windowsOptions

                                  If the OS field is set to windows, following fields must be unset:
                                  - spec.hostPID
                                  - spec.hostIPC
                                  - spec.hostUsers
                                  - spec.securityContext.appArmorProfile
                                  - spec.securityContext.seLinuxOptions
                                  - spec.securityContext.seccompProfile
                                  - spec.securityContext.fsGroup
                                  - spec.securityContext.fsGroupChangePolicy
                                  - spec.securityContext.sysctls
                                  - spec.shareProcessNamespace
                                  - spec.securityContext.runAsUser
                                  - spec.securityContext.runAsGroup
                                  - spec.securityContext.supplementalGroups
                                  - spec.securityContext.supplementalGroupsPolicy
                                  - spec.containers[*].securityContext.appArmorProfile
                                  - spec.containers[*].securityContext.seLinuxOptions
                                  - spec.containers[*].securityContext.seccompProfile
                                  - spec.containers[*].securityContext.capabilities
                                  - spec.containers[*].securityContext.readOnlyRootFilesystem
                                  - spec.containers[*].securityContext.privileged
                                  - spec.containers[*].securityContext.allowPrivilegeEscalation
                                  - spec.containers[*].securityContext.procMount
                                  - spec.containers[*].securityContext.runAsUser
                                  - spec.containers[*].securityContext.runAsGroup
                                properties:
                                  name:
                                    description: |-
                                      Name is the name of the operating system. The currently supported values are linux and windows.
                                      Additional value may be defined in future and can be one of:
                                      https://github.com/opencontainers/runtime-spec/blob/master/config.md#platform-specific-configuration
                                      Clients should expect to handle additional values and treat unrecognized values in this field as os: null
                                    type: string
                                required:
                                - name
                                type: object
                              overhead:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Overhead represents the resource overhead associated with running a pod for a given RuntimeClass.
                                  This field will be autopopulated at admission time by the RuntimeClass admission controller. If
                                  the RuntimeClass admission controller is enabled, overhead must not be set in Pod create requests.
                                  The RuntimeClass admission controller will reject Pod create requests which have the overhead already
                                  set. If RuntimeClass is configured and selected in the PodSpec, Overhead will be set to the value
                                  defined in the corresponding RuntimeClass, otherwise it will remain unset and treated as zero.
                                  More info: https://git.k8s.io/enhancements/keps/sig-node/688-pod-overhead/README.md
                                type: object
                              preemptionPolicy:
                                description: |-
                                  PreemptionPolicy is the Policy for preempting pods with lower priority.
                                  One of Never, PreemptLowerPriority.
                                  Defaults to PreemptLowerPriority if unset.
                                type: string
                              priority:
                                description: |-
                                  The priority value. Various system components use this field to find the
                                  priority of the pod. When Priority Admission Controller is enabled, it
                                  prevents users from setting this field. The admission controller populates
                                  this field from PriorityClassName.
                                  The higher the value, the higher the priority.
                                format: int32
                                type: integer
                              priorityClassName:
                                description: |-
                                  If specified, indicates the pod's priority. "system-node-critical" and
                                  "system-cluster-critical" are two special keywords which indicate the
                                  highest priorities with the former being the highest priority. Any other
                                  name must be defined by creating a PriorityClass object with that name.
                                  If not specified, the pod priority will be default or zero if there is no
                                  default.
                                type: string
                              readinessGates:
                                description: |-
                                  If specified, all readiness gates will be evaluated for pod readiness.
                                  A pod is ready when all its containers are ready AND
                                  all conditions specified in the readiness gates have status equal to "True"
                                  More info: https://git.k8s.io/enhancements/keps/sig-network/580-pod-readiness-gates
                                items:
                                  description: PodReadinessGate contains the reference
                                    to a pod condition
                                  properties:
                                    conditionType:
                                      description: ConditionType refers to a condition
                                        in the pod's condition list with matching
                                        type.
                                      type: string
                                  required:
                                  - conditionType
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              resourceClaims:
                                description: |-
                                  ResourceClaims defines which ResourceClaims must be allocated
                                  and reserved before the Pod is allowed to start. The resources
                                  will be made available to those containers which consume them
                                  by name.

                                  This is an alpha field and requires enabling the
                                  DynamicResourceAllocation feature gate.

                                  This field is immutable.
                                items:
                                  description: |-
                                    PodResourceClaim references exactly one ResourceClaim, either directly
                                    or by naming a ResourceClaimTemplate which is then turned into a ResourceClaim
                                    for the pod.

                                    It adds a name to it that uniquely identifies the ResourceClaim inside the Pod.
                                    Containers that need access to the ResourceClaim reference it with this name.
                                  properties:
                                    name:
                                      description: |-
                                        Name uniquely identifies this resource claim inside the pod.
                                        This must be a DNS_LABEL.
                                      type: string
                                    resourceClaimName:
                                      description: |-
                                        ResourceClaimName is the name of a ResourceClaim object in the same
                                        namespace as this pod.

                                        Exactly one of ResourceClaimName and ResourceClaimTemplateName must
                                        be set.
                                      type: string
                                    resourceClaimTemplateName:
                                      description: |-
                                        ResourceClaimTemplateName is the name of a ResourceClaimTemplate
                                        object in the same namespace as this pod.

                                        The template will be used to create a new ResourceClaim, which will
                                        be bound to this pod. When this pod is deleted, the ResourceClaim
                                        will also be deleted. The pod name and resource name, along with a
                                        generated component, will be used to form a unique name for the
                                        ResourceClaim, which will be recorded in pod.status.resourceClaimStatuses.

                                        This field is immutable and no changes will be made to the
                                        corresponding ResourceClaim by the control plane after creating the
                                        ResourceClaim.

                                        Exactly one of ResourceClaimName and ResourceClaimTemplateName must
                                        be set.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              resources:
                                description: |-
                                  Resources is the total amount of CPU and Memory resources required by all
                                  containers in the pod. It supports specifying Requests and Limits for
                                  "cpu" and "memory" resource names only. ResourceClaims are not supported.

                                  This field enables fine-grained control over resource allocation for the
                                  entire pod, allowing resource sharing among containers in a pod.

                                  This is an alpha field and requires enabling the PodLevelResources feature
                                  gate.
                                properties:
                                  claims:
                                    description: |-
                                      Claims lists the names of resources, defined in spec.resourceClaims,
                                      that are used by this container.

                                      This is an alpha field and requires enabling the
                                      DynamicResourceAllocation feature gate.

                                      This field is immutable. It can only be set for containers.
                                    items:
                                      description: ResourceClaim references one entry
                                        in PodSpec.ResourceClaims.
                                      properties:
                                        name:
                                          description: |-
                                            Name must match the name of one entry in pod.spec.resourceClaims of
                                            the Pod where this field is used. It makes that resource available
                                            inside a container.
                                          type: string
                                        request:
                                          description: |-
                                            Request is the name chosen for a request in the referenced claim.
                                            If empty, everything from the claim is made available, otherwise
                                            only the result of this request.
                                          type: string
                                      required:
                                      - name
                                      type: object
                                    type: array
                                    x-kubernetes-list-map-keys:
                                    - name
                                    x-kubernetes-list-type: map
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: |-
                                      Limits describes the maximum amount of compute resources allowed.
                                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: |-
                                      Requests describes the minimum amount of compute resources required.
                                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                    type: object
                                type: object
                              restartPolicy:
                                description: |-
                                  Restart policy for all containers within the pod.
                                  One of Always, OnFailure, Never. In some contexts, only a subset of those values may be permitted.
                                  Default to Always.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy
                                type: string
                              runtimeClassName:
                                description: |-
                                  RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used
                                  to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run.
                                  If unset or empty, the "legacy" RuntimeClass will be used, which is an implicit class with an
                                  empty definition that uses the default runtime handler.
                                  More info: https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class
                                type: string
                              schedulerName:
                                description: |-
                                  If specified, the pod will be dispatched by specified scheduler.
                                  If not specified, the pod will be dispatched by default scheduler.
                                type: string
                              schedulingGates:
                                description: |-
                                  SchedulingGates is an opaque list of values that if specified will block scheduling the pod.
                                  If schedulingGates is not empty, the pod will stay in the SchedulingGated state and the
                                  scheduler will not attempt to schedule the pod.

                                  SchedulingGates can only be set at pod creation time, and be removed only afterwards.
                                items:
                                  description: PodSchedulingGate is associated to
                                    a Pod to guard its scheduling.
                                  properties:
                                    name:
                                      description: |-
                                        Name of the scheduling gate.
                                        Each scheduling gate must have a unique name field.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              securityContext:
                                description: |-
                                  SecurityContext holds pod-level security attributes and common container settings.
                                  Optional: Defaults to empty.  See type description for default values of each field.
                                properties:
                                  appArmorProfile:
                                    description: |-
                                      appArmorProfile is the AppArmor options to use by the containers in this pod.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    properties:
                                      localhostProfile:
                                        description: |-
                                          localhostProfile indicates a profile loaded on the node that should be used.
                                          The profile must be preconfigured on the node to work.
                                          Must match the loaded name of the profile.
                                          Must be set if and only if type is "Localhost".
                                        type: string
                                      type:
                                        description: |-
                                          type indicates which kind of AppArmor profile will be applied.
                                          Valid options are:
                                            Localhost - a profile pre-loaded on the node.
                                            RuntimeDefault - the container runtime's default profile.
                                            Unconfined - no AppArmor enforcement.
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  fsGroup:
                                    description: |-
                                      A special supplemental group that applies to all containers in a pod.
                                      Some volume types allow the Kubelet to change the ownership of that volume
                                      to be owned by the pod:

                                      1. The owning GID will be the FSGroup
                                      2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                                      3. The permission bits are OR'd with rw-rw----

                                      If unset, the Kubelet will not modify the ownership and permissions of any volume.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  fsGroupChangePolicy:
                                    description: |-
                                      fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                                      before being exposed inside Pod. This field will only apply to
                                      volume types which support fsGroup based ownership(and permissions).
                                      It will have no effect on ephemeral volume types such as: secret, configmaps
                                      and emptydir.
                                      Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    type: string
                                  runAsGroup:
                                    description: |-
                                      The GID to run the entrypoint of the container process.
                                      Uses runtime default if unset.
                                      May also be set in SecurityContext.  If set in both SecurityContext and
                                      PodSecurityContext, the value specified in SecurityContext takes precedence
                                      for that container.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  runAsNonRoot:
                                    description: |-
                                      Indicates that the container must run as a non-root user.
                                      If true, the Kubelet will validate the image at runtime to ensure that it
                                      does not run as UID 0 (root) and fail to start the container if it does.
                                      If unset or false, no such validation will be performed.
                                      May also be set in SecurityContext.  If set in both SecurityContext and
                                      PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    type: boolean
                                  runAsUser:
                                    description: |-
                                      The UID to run the entrypoint of the container process.
                                      Defaults to user specified in image metadata if unspecified.
                                      May also be set in SecurityContext.  If set in both SecurityContext and
                                      PodSecurityContext, the value specified in SecurityContext takes precedence
                                      for that container.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  seLinuxChangePolicy:
                                    description: |-
                                      seLinuxChangePolicy defines how the container's SELinux label is applied to all volumes used by the Pod.
                                      It has no effect on nodes that do not support SELinux or to volumes does not support SELinux.
                                      Valid values are "MountOption" and "Recursive".

                                      "Recursive" means relabeling of all files on all Pod volumes by the container runtime.
                                      This may be slow for large volumes, but allows mixing privileged and unprivileged Pods sharing the same volume on the same node.

                                      "MountOption" mounts all eligible Pod volumes with `-o context` mount option.
                                      This requires all Pods that share the same volume to use the same SELinux label.
                                      It is not possible to share the same volume among privileged and unprivileged Pods.
                                      Eligible volumes are in-tree FibreChannel and iSCSI volumes, and all CSI volumes
                                      whose CSI driver announces SELinux support by setting spec.seLinuxMount: true in their
                                      CSIDriver instance. Other volumes are always re-labelled recursively.
                                      "MountOption" value is allowed only when SELinuxMount feature gate is enabled.

                                      If not specified and SELinuxMount feature gate is enabled, "MountOption" is used.
                                      If not specified and SELinuxMount feature gate is disabled, "MountOption" is used for ReadWriteOncePod volumes
                                      and "Recursive" for all other volumes.

                                      This field affects only Pods that have SELinux label set, either in PodSecurityContext or in SecurityContext of all containers.

                                      All Pods that use the same volume should use the same seLinuxChangePolicy, otherwise some pods can get stuck in ContainerCreating state.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    type: string
                                  seLinuxOptions:
                                    description: |-
                                      The SELinux context to be applied to all containers.
                                      If unspecified, the container runtime will allocate a random SELinux context for each
                                      container.  May also be set in SecurityContext.  If set in
                                      both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                                      takes precedence for that container.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    properties:
                                      level:
                                        description: Level is SELinux level label
                                          that applies to the container.
                                        type: string
                                      role:
                                        description: Role is a SELinux role label
                                          that applies to the container.
                                        type: string
                                      type:
                                        description: Type is a SELinux type label
                                          that applies to the container.
                                        type: string
                                      user:
                                        description: User is a SELinux user label
                                          that applies to the container.
                                        type: string
                                    type: object
                                  seccompProfile:
                                    description: |-
                                      The seccomp options to use by the containers in this pod.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    properties:
                                      localhostProfile:
                                        description: |-
                                          localhostProfile indicates a profile defined in a file on the node should be used.
                                          The profile must be preconfigured on the node to work.
                                          Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                          Must be set if type is "Localhost". Must NOT be set for any other type.
                                        type: string
                                      type:
                                        description: |-
                                          type indicates which kind of seccomp profile will be applied.
                                          Valid options are:

                                          Localhost - a profile defined in a file on the node should be used.
                                          RuntimeDefault - the container runtime default profile should be used.
                                          Unconfined - no profile should be applied.
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  supplementalGroups:
                                    description: |-
                                      A list of groups applied to the first process run in each container, in
                                      addition to the container's primary GID and fsGroup (if specified).  If
                                      the SupplementalGroupsPolicy feature is enabled, the
                                      supplementalGroupsPolicy field determines whether these are in addition
                                      to or instead of any group memberships defined in the container image.
                                      If unspecified, no additional groups are added, though group memberships
                                      defined in the container image may still be used, depending on the
                                      supplementalGroupsPolicy field.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    items:
                                      format: int64
                                      type: integer
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  supplementalGroupsPolicy:
                                    description: |-
                                      Defines how supplemental groups of the first container processes are calculated.
                                      Valid values are "Merge" and "Strict". If not specified, "Merge" is used.
                                      (Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled
                                      and the container runtime must implement support for this feature.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    type: string
                                  sysctls:
                                    description: |-
                                      Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                                      sysctls (by the container runtime) might fail to launch.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    items:
                                      description: Sysctl defines a kernel parameter
                                        to be set
                                      properties:
                                        name:
                                          description: Name of a property to set
                                          type: string
                                        value:
                                          description: Value of a property to set
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  windowsOptions:
                                    description: |-
                                      The Windows specific settings applied to all containers.
                                      If unspecified, the options within a container's SecurityContext will be used.
                                      If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                      Note that this field cannot be set when spec.os.name is linux.
                                    properties:
                                      gmsaCredentialSpec:
                                        description: |-
                                          GMSACredentialSpec is where the GMSA admission webhook
                                          (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                          GMSA credential spec named by the GMSACredentialSpecName field.
                                        type: string
                                      gmsaCredentialSpecName:
                                        description: GMSACredentialSpecName is the
                                          name of the GMSA credential spec to use.
                                        type: string
                                      hostProcess:
                                        description: |-
                                          HostProcess determines if a container should be run as a 'Host Process' container.
                                          All of a Pod's containers must have the same effective HostProcess value
                                          (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                          In addition, if HostProcess is true then HostNetwork must also be set to true.
                                        type: boolean
                                      runAsUserName:
                                        description: |-
                                          The UserName in Windows to run the entrypoint of the container process.
                                          Defaults to the user specified in image metadata if unspecified.
                                          May also be set in PodSecurityContext. If set in both SecurityContext and
                                          PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        type: string
                                    type: object
                                type: object
                              serviceAccount:
                                description: |-
                                  DeprecatedServiceAccount is a deprecated alias for ServiceAccountName.
                                  Deprecated: Use serviceAccountName instead.
                                type: string
                              serviceAccountName:
                                description: |-
                                  ServiceAccountName is the name of the ServiceAccount to use to run this pod.
                                  More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
                                type: string
                              setHostnameAsFQDN:
                                description: |-
                                  If true the pod's hostname will be configured as the pod's FQDN, rather than the leaf name (the default).
                                  In Linux containers, this means setting the FQDN in the hostname field of the kernel (the nodename field of struct utsname).
                                  In Windows containers, this means setting the registry value of hostname for the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters to FQDN.
                                  If a pod does not have FQDN, this has no effect.
                                  Default to false.
                                type: boolean
                              shareProcessNamespace:
                                description: |-
                                  Share a single process namespace between all of the containers in a pod.
                                  When this is set containers will be able to view and signal processes from other containers
                                  in the same pod, and the first process in each container will not be assigned PID 1.
                                  HostPID and ShareProcessNamespace cannot both be set.
                                  Optional: Default to false.
                                type: boolean
                              subdomain:
                                description: |-
                                  If specified, the fully qualified Pod hostname will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>".
                                  If not specified, the pod will not have a domainname at all.
                                type: string
                              terminationGracePeriodSeconds:
                                description: |-
                                  Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request.
                                  Value must be non-negative integer. The value zero indicates stop immediately via
                                  the kill signal (no opportunity to shut down).
                                  If this value is nil, the default grace period will be used instead.
                                  The grace period is the duration in seconds after the processes running in the pod are sent
                                  a termination signal and the time when the processes are forcibly halted with a kill signal.
                                  Set this value longer than the expected cleanup time for your process.
                                  Defaults to 30 seconds.
                                format: int64
                                type: integer
                              tolerations:
                                description: If specified, the pod's tolerations.
                                items:
                                  description: |-
                                    The pod this Toleration is attached to tolerates any taint that matches
                                    the triple <key,value,effect> using the matching operator <operator>.
                                  properties:
                                    effect:
                                      description: |-
                                        Effect indicates the taint effect to match. Empty means match all taint effects.
                                        When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                      type: string
                                    key:
                                      description: |-
                                        Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                        If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                      type: string
                                    operator:
                                      description: |-
                                        Operator represents a key's relationship to the value.
                                        Valid operators are Exists and Equal. Defaults to Equal.
                                        Exists is equivalent to wildcard for value, so that a pod can
                                        tolerate all taints of a particular category.
                                      type: string
                                    tolerationSeconds:
                                      description: |-
                                        TolerationSeconds represents the period of time the toleration (which must be
                                        of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                        it is not set, which means tolerate the taint forever (do not evict). Zero and
                                        negative values will be treated as 0 (evict immediately) by the system.
                                      format: int64
                                      type: integer
                                    value:
                                      description: |-
                                        Value is the taint value the toleration matches to.
                                        If the operator is Exists, the value should be empty, otherwise just a regular string.
                                      type: string
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              topologySpreadConstraints:
                                description: |-
                                  TopologySpreadConstraints describes how a group of pods ought to spread across topology
                                  domains. Scheduler will schedule pods in a way which abides by the constraints.
                                  All topologySpreadConstraints are ANDed.
                                items:
                                  description: TopologySpreadConstraint specifies
                                    how to spread matching pods among the given topology.
                                  properties:
                                    labelSelector:
                                      description: |-
                                        LabelSelector is used to find matching pods.
                                        Pods that match this label selector are counted to determine the number of pods
                                        in their corresponding topology domain.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: |-
                                              A label selector requirement is a selector that contains values, a key, and an operator that
                                              relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  operator represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: |-
                                                  values is an array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    matchLabelKeys:
                                      description: |-
                                        MatchLabelKeys is a set of pod label keys to select the pods over which
                                        spreading will be calculated. The keys are used to lookup values from the
                                        incoming pod labels, those key-value labels are ANDed with labelSelector
                                        to select the group of existing pods over which spreading will be calculated
                                        for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                        MatchLabelKeys cannot be set when LabelSelector isn't set.
                                        Keys that don't exist in the incoming pod labels will
                                        be ignored. A null or empty list means only match against labelSelector.

                                        This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    maxSkew:
                                      description: |-
                                        MaxSkew describes the degree to which pods may be unevenly distributed.
                                        When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference
                                        between the number of matching pods in the target topology and the global minimum.
                                        The global minimum is the minimum number of matching pods in an eligible domain
                                        or zero if the number of eligible domains is less than MinDomains.
                                        For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                                        labelSelector spread as 2/2/1:
                                        In this case, the global minimum is 1.
                                        | zone1 | zone2 | zone3 |
                                        |  P P  |  P P  |   P   |
                                        - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;
                                        scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)
                                        violate MaxSkew(1).
                                        - if MaxSkew is 2, incoming pod can be scheduled onto any zone.
                                        When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence
                                        to topologies that satisfy it.
                                        It's a required field. Default value is 1 and 0 is not allowed.
                                      format: int32
                                      type: integer
                                    minDomains:
                                      description: |-
                                        MinDomains indicates a minimum number of eligible domains.
                                        When the number of eligible domains with matching topology keys is less than minDomains,
                                        Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed.
                                        And when the number of eligible domains with matching topology keys equals or greater than minDomains,
                                        this value has no effect on scheduling.
                                        As a result, when the number of eligible domains is less than minDomains,
                                        scheduler won't schedule more than maxSkew Pods to those domains.
                                        If value is nil, the constraint behaves as if MinDomains is equal to 1.
                                        Valid values are integers greater than 0.
                                        When value is not nil, WhenUnsatisfiable must be DoNotSchedule.

                                        For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same
                                        labelSelector spread as 2/2/2:
                                        | zone1 | zone2 | zone3 |
                                        |  P P  |  P P  |  P P  |
                                        The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0.
                                        In this situation, new pod with the same labelSelector cannot be scheduled,
                                        because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,
                                        it will violate MaxSkew.
                                      format: int32
                                      type: integer
                                    nodeAffinityPolicy:
                                      description: |-
                                        NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector
                                        when calculating pod topology spread skew. Options are:
                                        - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.
                                        - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.

                                        If this value is nil, the behavior is equivalent to the Honor policy.
                                        This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                                      type: string
                                    nodeTaintsPolicy:
                                      description: |-
                                        NodeTaintsPolicy indicates how we will treat node taints when calculating
                                        pod topology spread skew. Options are:
                                        - Honor: nodes without taints, along with tainted nodes for which the incoming pod
                                        has a toleration, are included.
                                        - Ignore: node taints are ignored. All nodes are included.

                                        If this value is nil, the behavior is equivalent to the Ignore policy.
                                        This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                                      type: string
                                    topologyKey:
                                      description: |-
                                        TopologyKey is the key of node labels. Nodes that have a label with this key
                                        and identical values are considered to be in the same topology.
                                        We consider each <key, value> as a "bucket", and try to put balanced number
                                        of pods into each bucket.
                                        We define a domain as a particular instance of a topology.
                                        Also, we define an eligible domain as a domain whose nodes meet the requirements of
                                        nodeAffinityPolicy and nodeTaintsPolicy.
                                        e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology.
                                        And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology.
                                        It's a required field.
                                      type: string
                                    whenUnsatisfiable:
                                      description: |-
                                        WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy
                                        the spread constraint.
                                        - DoNotSchedule (default) tells the scheduler not to schedule it.
                                        - ScheduleAnyway tells the scheduler to schedule the pod in any location,
                                          but giving higher precedence to topologies that would help reduce the
                                          skew.
                                        A constraint is considered "Unsatisfiable" for an incoming pod
                                        if and only if every possible node assignment for that pod would violate
                                        "MaxSkew" on some topology.
                                        For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                                        labelSelector spread as 3/1/1:
                                        | zone1 | zone2 | zone3 |
                                        | P P P |   P   |   P   |
                                        If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled
                                        to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies
                                        MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler
                                        won't make it *more* imbalanced.
                                        It's a required field.
                                      type: string
                                  required:
                                  - maxSkew
                                  - topologyKey
                                  - whenUnsatisfiable
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - topologyKey
                                - whenUnsatisfiable
                                x-kubernetes-list-type: map
                              volumes:
                                description: |-
                                  List of volumes that can be mounted by containers belonging to the pod.
                                  More info: https://kubernetes.io/docs/concepts/storage/volumes
                                items:
                                  description: Volume represents a named volume in
                                    a pod that may be accessed by any container in
                                    the pod.
                                  properties:
                                    awsElasticBlockStore:
                                      description: |-
                                        awsElasticBlockStore represents an AWS Disk resource that is attached to a
                                        kubelet's host machine and then exposed to the pod.
                                        Deprecated: AWSElasticBlockStore is deprecated. All operations for the in-tree
                                        awsElasticBlockStore type are redirected to the ebs.csi.aws.com CSI driver.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                      properties:
                                        fsType:
                                          description: |-
                                            fsType is the filesystem type of the volume that you want to mount.
                                            Tip: Ensure that the filesystem type is supported by the host operating system.
                                            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                          type: string
                                        partition:
                                          description: |-
                                            partition is the partition in the volume that you want to mount.
                                            If omitted, the default is to mount by volume name.
                                            Examples: For volume /dev/sda1, you specify the partition as "1".
                                            Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                                          format: int32
                                          type: integer
                                        readOnly:
                                          description: |-
                                            readOnly value true will force the readOnly setting in VolumeMounts.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                          type: boolean
                                        volumeID:
                                          description: |-
                                            volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                          type: string
                                      required:
                                      - volumeID
                                      type: object
                                    azureDisk:
                                      description: |-
                                        azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
                                        Deprecated: AzureDisk is deprecated. All operations for the in-tree azureDisk type
                                        are redirected to the disk.csi.azure.com CSI driver.
                                      properties:
                                        cachingMode:
                                          description: 'cachingMode is the Host Caching
                                            mode: None, Read Only, Read Write.'
                                          type: string
                                        diskName:
                                          description: diskName is the Name of the
                                            data disk in the blob storage
                                          type: string
                                        diskURI:
                                          description: diskURI is the URI of data
                                            disk in the blob storage
                                          type: string
                                        fsType:
                                          default: ext4
                                          description: |-
                                            fsType is Filesystem type to mount.
                                            Must be a filesystem type supported by the host operating system.
                                            Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                          type: string
                                        kind:
                                          description: 'kind expected values are Shared:
                                            multiple blob disks per storage account  Dedicated:
                                            single blob disk per storage account  Managed:
                                            azure managed data disk (only in managed
                                            availability set). defaults to shared'
                                          type: string
                                        readOnly:
                                          default: false
                                          description: |-
                                            readOnly Defaults to false (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                      required:
                                      - diskName
                                      - diskURI
                                      type: object
                                    azureFile:
                                      description: |-
                                        azureFile represents an Azure File Service mount on the host and bind mount to the pod.
                                        Deprecated: AzureFile is deprecated. All operations for the in-tree azureFile type
                                        are redirected to the file.csi.azure.com CSI driver.
                                      properties:
                                        readOnly:
                                          description: |-
                                            readOnly defaults to false (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        secretName:
                                          description: secretName is the  name of
                                            secret that contains Azure Storage Account
                                            Name and Key
                                          type: string
                                        shareName:
                                          description: shareName is the azure share
                                            Name
                                          type: string
                                      required:
                                      - secretName
                                      - shareName
                                      type: object
                                    cephfs:
                                      description: |-
                                        cephFS represents a Ceph FS mount on the host that shares a pod's lifetime.
                                        Deprecated: CephFS is deprecated and the in-tree cephfs type is no longer supported.
                                      properties:
                                        monitors:
                                          description: |-
                                            monitors is Required: Monitors is a collection of Ceph monitors
                                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        path:
                                          description: 'path is Optional: Used as
                                            the mounted root, rather than the full
                                            Ceph tree, default is /'
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                          type: boolean
                                        secretFile:
                                          description: |-
                                            secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
                                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                          type: string
                                        secretRef:
                                          description: |-
                                            secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.
                                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                          properties:
                                            name:
                                              default: ""
                                              description: |-
                                                Name of the referent.
                                                This field is effectively required, but due to backwards compatibility is
                                                allowed to be empty. Instances of this type with an empty value here are
                                                almost certainly wrong.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        user:
                                          description: |-
                                            user is optional: User is the rados user name, default is admin
                                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                          type: string
                                      required:
                                      - monitors
                                      type: object
                                    cinder:
                                      description: |-
                                        cinder represents a cinder volume attached and mounted on kubelets host machine.
                                        Deprecated: Cinder is deprecated. All operations for the in-tree cinder type
                                        are redirected to the cinder.csi.openstack.org CSI driver.
                                        More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                      properties:
                                        fsType:
                                          description: |-
                                            fsType is the filesystem type to mount.
                                            Must be a filesystem type supported by the host operating system.
                                            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                            More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly defaults to false (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                            More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                          type: boolean
                                        secretRef:
                                          description: |-
                                            secretRef is optional: points to a secret object containing parameters used to connect
                                            to OpenStack.
                                          properties:
                                            name:
                                              default: ""
                                              description: |-
                                                Name of the referent.
                                                This field is effectively required, but due to backwards compatibility is
                                                allowed to be empty. Instances of this type with an empty value here are
                                                almost certainly wrong.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        volumeID:
                                          description: |-
                                            volumeID used to identify the volume in cinder.
                                            More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                          type: string
                                      required:
                                      - volumeID
                                      type: object
                                    configMap:
                                      description: configMap represents a configMap
                                        that should populate this volume
                                      properties:
                                        defaultMode:
                                          description: |-
                                            defaultMode is optional: mode bits used to set permissions on created files by default.
                                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                            Defaults to 0644.
                                            Directories within the path are not affected by this setting.
                                            This might be in conflict with other options that affect the file
                                            mode, like fsGroup, and the result can be other mode bits set.
                                          format: int32
                                          type: integer
                                        items:
                                          description: |-
                                            items if unspecified, each key-value pair in the Data field of the referenced
                                            ConfigMap will be projected into the volume as a file whose name is the
                                            key and content is the value. If specified, the listed keys will be
                                            projected into the specified paths, and unlisted keys will not be
                                            present. If a key is specified which is not present in the ConfigMap,
                                            the volume setup will error unless it is marked optional. Paths must be
                                            relative and may not contain the '..' path or start with '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: |-
                                                  mode is Optional: mode bits used to set permissions on this file.
                                                  Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                  YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                  If not specified, the volume defaultMode will be used.
                                                  This might be in conflict with other options that affect the file
                                                  mode, like fsGroup, and the result can be other mode bits set.
                                                format: int32
                                                type: integer
                                              path:
                                                description: |-
                                                  path is the relative path of the file to map the key to.
                                                  May not be an absolute path.
                                                  May not contain the path element '..'.
                                                  May not start with the string '..'.
                                                type: string
                                            required:
                                            - key
                                            - path
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                        optional:
                                          description: optional specify whether the
                                            ConfigMap or its keys must be defined
                                          type: boolean
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    csi:
                                      description: csi (Container Storage Interface)
                                        represents ephemeral storage that is handled
                                        by certain external CSI drivers.
                                      properties:
                                        driver:
                                          description: |-
                                            driver is the name of the CSI driver that handles this volume.
                                            Consult with your admin for the correct name as registered in the cluster.
                                          type: string
                                        fsType:
                                          description: |-
                                            fsType to mount. Ex. "ext4", "xfs", "ntfs".
                                            If not provided, the empty value is passed to the associated CSI driver
                                            which will determine the default filesystem to apply.
                                          type: string
                                        nodePublishSecretRef:
                                          description: |-
                                            nodePublishSecretRef is a reference to the secret object containing
                                            sensitive information to pass to the CSI driver to complete the CSI
                                            NodePublishVolume and NodeUnpublishVolume calls.
                                            This field is optional, and  may be empty if no secret is required. If the
                                            secret object contains more than one secret, all secret references are passed.
                                          properties:
                                            name:
                                              default: ""
                                              description: |-
                                                Name of the referent.
                                                This field is effectively required, but due to backwards compatibility is
                                                allowed to be empty. Instances of this type with an empty value here are
                                                almost certainly wrong.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        readOnly:
                                          description: |-
                                            readOnly specifies a read-only configuration for the volume.
                                            Defaults to false (read/write).
                                          type: boolean
                                        volumeAttributes:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            volumeAttributes stores driver-specific properties that are passed to the CSI
                                            driver. Consult your driver's documentation for supported values.
                                          type: object
                                      required:
                                      - driver
                                      type: object
                                    downwardAPI:
                                      description: downwardAPI represents downward
                                        API about the pod that should populate this
                                        volume
                                      properties:
                                        defaultMode:
                                          description: |-
                                            Optional: mode bits to use on created files by default. Must be a
                                            Optional: mode bits used to set permissions on created files by default.
                                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                            Defaults to 0644.
                                            Directories within the path are not affected by this setting.
                                            This might be in conflict with other options that affect the file
                                            mode, like fsGroup, and the result can be other mode bits set.
                                          format: int32
                                          type: integer
                                        items:
                                          description: Items is a list of downward
                                            API volume file
                                          items:
                                            description: DownwardAPIVolumeFile represents
                                              information to create the file containing
                                              the pod field
                                            properties:
                                              fieldRef:
                                                description: 'Required: Selects a
                                                  field of the pod: only annotations,
                                                  labels, name, namespace and uid
                                                  are supported.'
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema
                                                      the FieldPath is written in
                                                      terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field
                                                      to select in the specified API
                                                      version.
                                                    type: string
                                                required:
                                                - fieldPath
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              mode:
                                                description: |-
                                                  Optional: mode bits used to set permissions on this file, must be an octal value
                                                  between 0000 and 0777 or a decimal value between 0 and 511.
                                                  YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                  If not specified, the volume defaultMode will be used.
                                                  This might be in conflict with other options that affect the file
                                                  mode, like fsGroup, and the result can be other mode bits set.
                                                format: int32
                                                type: integer
                                              path:
                                                description: 'Required: Path is  the
                                                  relative path name of the file to
                                                  be created. Must not be absolute
                                                  or contain the ''..'' path. Must
                                                  be utf-8 encoded. The first item
                                                  of the relative path must not start
                                                  with ''..'''
                                                type: string
                                              resourceFieldRef:
                                                description: |-
                                                  Selects a resource of the container: only resources limits and requests
                                                  (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                                properties:
                                                  containerName:
                                                    description: 'Container name:
                                                      required for volumes, optional
                                                      for env vars'
                                                    type: string
                                                  divisor:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Specifies the output
                                                      format of the exposed resources,
                                                      defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource
                                                      to select'
                                                    type: string
                                                required:
                                                - resource
                                                type: object
                                                x-kubernetes-map-type: atomic
                                            required:
                                            - path
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    emptyDir:
                                      description: |-
                                        emptyDir represents a temporary directory that shares a pod's lifetime.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                                      properties:
                                        medium:
                                          description: |-
                                            medium represents what type of storage medium should back this directory.
                                            The default is "" which means to use the node's default medium.
                                            Must be an empty string (default) or Memory.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                                          type: string
                                        sizeLimit:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            sizeLimit is the total amount of local storage required for this EmptyDir volume.
                                            The size limit is also applicable for memory medium.
                                            The maximum usage on memory medium EmptyDir would be the minimum value between
                                            the SizeLimit specified here and the sum of memory limits of all containers in a pod.
                                            The default is nil which means that the limit is undefined.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                      type: object
                                    ephemeral:
                                      description: |-
                                        ephemeral represents a volume that is handled by a cluster storage driver.
                                        The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
                                        and deleted when the pod is removed.

                                        Use this if:
                                        a) the volume is only needed while the pod runs,
                                        b) features of normal volumes like restoring from snapshot or capacity
                                           tracking are needed,
                                        c) the storage driver is specified through a storage class, and
                                        d) the storage driver supports dynamic volume provisioning through
                                           a PersistentVolumeClaim (see EphemeralVolumeSource for more
                                           information on the connection between this volume type
                                           and PersistentVolumeClaim).

                                        Use PersistentVolumeClaim or one of the vendor-specific
                                        APIs for volumes that persist for longer than the lifecycle
                                        of an individual pod.

                                        Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
                                        be used that way - see the documentation of the driver for
                                        more information.

                                        A pod can use both types of ephemeral volumes and
                                        persistent volumes at the same time.
                                      properties:
                                        volumeClaimTemplate:
                                          description: |-
                                            Will be used to create a stand-alone PVC to provision the volume.
                                            The pod in which this EphemeralVolumeSource is embedded will be the
                                            owner of the PVC, i.e. the PVC will be deleted together with the
                                            pod.  The name of the PVC will be `<pod name>-<volume name>` where
                                            `<volume name>` is the name from the `PodSpec.Volumes` array
                                            entry. Pod validation will reject the pod if the concatenated name
                                            is not valid for a PVC (for example, too long).

                                            An existing PVC with that name that is not owned by the pod
                                            will *not* be used for the pod to avoid using an unrelated
                                            volume by mistake. Starting the pod is then blocked until
                                            the unrelated PVC is removed. If such a pre-created PVC is
                                            meant to be used by the pod, the PVC has to updated with an
                                            owner reference to the pod once the pod exists. Normally
                                            this should not be necessary, but it may be useful when
                                            manually reconstructing a broken cluster.

                                            This field is read-only and no changes will be made by Kubernetes
                                            to the PVC after it has been created.

                                            Required, must not be nil.
                                          properties:
                                            metadata:
                                              description: |-
                                                May contain labels and annotations that will be copied into the PVC
                                                when creating it. No other fields are allowed and will be rejected during
                                                validation.
                                              properties:
                                                annotations:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                                finalizers:
                                                  items:
                                                    type: string
                                                  type: array
                                                labels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                                name:
                                                  type: string
                                                namespace:
                                                  type: string
                                              type: object
                                            spec:
                                              description: |-
                                                The specification for the PersistentVolumeClaim. The entire content is
                                                copied unchanged into the PVC that gets created from this
                                                template. The same fields as in a PersistentVolumeClaim
                                                are also valid here.
                                              properties:
                                                accessModes:
                                                  description: |-
                                                    accessModes contains the desired access modes the volume should have.
                                                    More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                dataSource:
                                                  description: |-
                                                    dataSource field can be used to specify either:
                                                    * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                                    * An existing PVC (PersistentVolumeClaim)
                                                    If the provisioner or an external controller can support the specified data source,
                                                    it will create a new volume based on the contents of the specified data source.
                                                    When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
                                                    and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
                                                    If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                                                  properties:
                                                    apiGroup:
                                                      description: |-
                                                        APIGroup is the group for the resource being referenced.
                                                        If APIGroup is not specified, the specified Kind must be in the core API group.
                                                        For any other third-party types, APIGroup is required.
                                                      type: string
                                                    kind:
                                                      description: Kind is the type
                                                        of resource being referenced
                                                      type: string
                                                    name:
                                                      description: Name is the name
                                                        of resource being referenced
                                                      type: string
                                                  required:
                                                  - kind
                                                  - name
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                dataSourceRef:
                                                  description: |-
                                                    dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
                                                    volume is desired. This may be any object from a non-empty API group (non
                                                    core object) or a PersistentVolumeClaim object.
                                                    When this field is specified, volume binding will only succeed if the type of
                                                    the specified object matches some installed volume populator or dynamic
                                                    provisioner.
                                                    This field will replace the functionality of the dataSource field and as such
                                                    if both fields are non-empty, they must have the same value. For backwards
                                                    compatibility, when namespace isn't specified in dataSourceRef,
                                                    both fields (dataSource and dataSourceRef) will be set to the same
                                                    value automatically if one of them is empty and the other is non-empty.
                                                    When namespace is specified in dataSourceRef,
                                                    dataSource isn't set to the same value and must be empty.
                                                    There are three important differences between dataSource and dataSourceRef:
                                                    * While dataSource only allows two specific types of objects, dataSourceRef
                                                      allows any non-core object, as well as PersistentVolumeClaim objects.
                                                    * While dataSource ignores disallowed values (dropping them), dataSourceRef
                                                      preserves all values, and generates an error if a disallowed value is
                                                      specified.
                                                    * While dataSource only allows local objects, dataSourceRef allows objects
                                                      in any namespaces.
                                                    (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                                                    (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                                  properties:
                                                    apiGroup:
                                                      description: |-
                                                        APIGroup is the group for the resource being referenced.
                                                        If APIGroup is not specified, the specified Kind must be in the core API group.
                                                        For any other third-party types, APIGroup is required.
                                                      type: string
                                                    kind:
                                                      description: Kind is the type
                                                        of resource being referenced
                                                      type: string
                                                    name:
                                                      description: Name is the name
                                                        of resource being referenced
                                                      type: string
                                                    namespace:
                                                      description: |-
                                                        Namespace is the namespace of resource being referenced
                                                        Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                                                        (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                                      type: string
                                                  required:
                                                  - kind
                                                  - name
                                                  type: object
                                                resources:
                                                  description: |-
                                                    resources represents the minimum resources the volume should have.
                                                    If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
                                                    that are lower than previous value but must still be higher than capacity recorded in the
                                                    status field of the claim.
                                                    More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                                                  properties:
                                                    limits:
                                                      additionalProperties:
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                        x-kubernetes-int-or-string: true
                                                      description: |-
                                                        Limits describes the maximum amount of compute resources allowed.
                                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                                      type: object
                                                    requests:
                                                      additionalProperties:
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                        x-kubernetes-int-or-string: true
                                                      description: |-
                                                        Requests describes the minimum amount of compute resources required.
                                                        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                                        otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                                      type: object
                                                  type: object
                                                selector:
                                                  description: selector is a label
                                                    query over volumes to consider
                                                    for binding.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: |-
                                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: |-
                                                              operator represents a key's relationship to a set of values.
                                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: |-
                                                              values is an array of string values. If the operator is In or NotIn,
                                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                              the values array must be empty. This array is replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: |-
                                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                storageClassName:
                                                  description: |-
                                                    storageClassName is the name of the StorageClass required by the claim.
                                                    More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                                                  type: string
                                                volumeAttributesClassName:
                                                  description: |-
                                                    volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
                                                    If specified, the CSI driver will create or update the volume with the attributes defined
                                                    in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
                                                    it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
                                                    will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
                                                    If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
                                                    will be set by the persistentvolume controller if it exists.
                                                    If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
                                                    set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
                                                    exists.
                                                    More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
                                                    (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).
                                                  type: string
                                                volumeMode:
                                                  description: |-
                                                    volumeMode defines what type of volume is required by the claim.
                                                    Value of Filesystem is implied when not included in claim spec.
                                                  type: string
                                                volumeName:
                                                  description: volumeName is the binding
                                                    reference to the PersistentVolume
                                                    backing this claim.
                                                  type: string
                                              type: object
                                          required:
                                          - spec
                                          type: object
                                      type: object
                                    fc:
                                      description: fc represents a Fibre Channel resource
                                        that is attached to a kubelet's host machine
                                        and then exposed to the pod.
                                      properties:
                                        fsType:
                                          description: |-
                                            fsType is the filesystem type to mount.
                                            Must be a filesystem type supported by the host operating system.
                                            Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                          type: string
                                        lun:
                                          description: 'lun is Optional: FC target
                                            lun number'
                                          format: int32
                                          type: integer
                                        readOnly:
                                          description: |-
                                            readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        targetWWNs:
                                          description: 'targetWWNs is Optional: FC
                                            target worldwide names (WWNs)'
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        wwids:
                                          description: |-
                                            wwids Optional: FC volume world wide identifiers (wwids)
                                            Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    flexVolume:
                                      description: |-
                                        flexVolume represents a generic volume resource that is
                                        provisioned/attached using an exec based plugin.
                                        Deprecated: FlexVolume is deprecated. Consider using a CSIDriver instead.
                                      properties:
                                        driver:
                                          description: driver is the name of the driver
                                            to use for this volume.
                                          type: string
                                        fsType:
                                          description: |-
                                            fsType is the filesystem type to mount.
                                            Must be a filesystem type supported by the host operating system.
                                            Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
                                          type: string
                                        options:
                                          additionalProperties:
                                            type: string
                                          description: 'options is Optional: this
                                            field holds extra command options if any.'
                                          type: object
                                        readOnly:
                                          description: |-
                                            readOnly is Optional: defaults to false (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        secretRef:
                                          description: |-
                                            secretRef is Optional: secretRef is reference to the secret object containing
                                            sensitive information to pass to the plugin scripts. This may be
                                            empty if no secret object is specified. If the secret object
                                            contains more than one secret, all secrets are passed to the plugin
                                            scripts.
                                          properties:
                                            name:
                                              default: ""
                                              description: |-
                                                Name of the referent.
                                                This field is effectively required, but due to backwards compatibility is
                                                allowed to be empty. Instances of this type with an empty value here are
                                                almost certainly wrong.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      required:
                                      - driver
                                      type: object
                                    flocker:
                                      description: |-
                                        flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running.
                                        Deprecated: Flocker is deprecated and the in-tree flocker type is no longer supported.
                                      properties:
                                        datasetName:
                                          description: |-
                                            datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
                                            should be considered as deprecated
                                          type: string
                                        datasetUUID:
                                          description: datasetUUID is the UUID of
                                            the dataset. This is unique identifier
                                            of a Flocker dataset
                                          type: string
                                      type: object
                                    gcePersistentDisk:
                                      description: |-
                                        gcePersistentDisk represents a GCE Disk resource that is attached to a
                                        kubelet's host machine and then exposed to the pod.
                                        Deprecated: GCEPersistentDisk is deprecated. All operations for the in-tree
                                        gcePersistentDisk type are redirected to the pd.csi.storage.gke.io CSI driver.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                      properties:
                                        fsType:
                                          description: |-
                                            fsType is filesystem type of the volume that you want to mount.
                                            Tip: Ensure that the filesystem type is supported by the host operating system.
                                            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                          type: string
                                        partition:
                                          description: |-
                                            partition is the partition in the volume that you want to mount.
                                            If omitted, the default is to mount by volume name.
                                            Examples: For volume /dev/sda1, you specify the partition as "1".
                                            Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                          format: int32
                                          type: integer
                                        pdName:
                                          description: |-
                                            pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly here will force the ReadOnly setting in VolumeMounts.
                                            Defaults to false.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                          type: boolean
                                      required:
                                      - pdName
                                      type: object
                                    gitRepo:
                                      description: |-
                                        gitRepo represents a git repository at a particular revision.
                                        Deprecated: GitRepo is deprecated. To provision a container with a git repo, mount an
                                        EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
                                        into the Pod's container.
                                      properties:
                                        directory:
                                          description: |-
                                            directory is the target directory name.
                                            Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
                                            git repository.  Otherwise, if specified, the volume will contain the git repository in
                                            the subdirectory with the given name.
                                          type: string
                                        repository:
                                          description: repository is the URL
                                          type: string
                                        revision:
                                          description: revision is the commit hash
                                            for the specified revision.
                                          type: string
                                      required:
                                      - repository
                                      type: object
                                    glusterfs:
                                      description: |-
                                        glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
                                        Deprecated: Glusterfs is deprecated and the in-tree glusterfs type is no longer supported.
                                        More info: https://examples.k8s.io/volumes/glusterfs/README.md
                                      properties:
                                        endpoints:
                                          description: |-
                                            endpoints is the endpoint name that details Glusterfs topology.
                                            More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                          type: string
                                        path:
                                          description: |-
                                            path is the Glusterfs volume path.
                                            More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
                                            Defaults to false.
                                            More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                          type: boolean
                                      required:
                                      - endpoints
                                      - path
                                      type: object
                                    hostPath:
                                      description: |-
                                        hostPath represents a pre-existing file or directory on the host
                                        machine that is directly exposed to the container. This is generally
                                        used for system agents or other privileged things that are allowed
                                        to see the host machine. Most containers will NOT need this.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                      properties:
                                        path:
                                          description: |-
                                            path of the directory on the host.
                                            If the path is a symlink, it will follow the link to the real path.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                          type: string
                                        type:
                                          description: |-
                                            type for HostPath Volume
                                            Defaults to ""
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                          type: string
                                      required:
                                      - path
                                      type: object
                                    image:
                                      description: |-
                                        image represents an OCI object (a container image or artifact) pulled and mounted on the kubelet's host machine.
                                        The volume is resolved at pod startup depending on which PullPolicy value is provided:

                                        - Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
                                        - Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
                                        - IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.

                                        The volume gets re-resolved if the pod gets deleted and recreated, which means that new remote content will become available on pod recreation.
                                        A failure to resolve or pull the image during pod startup will block containers from starting and may add significant latency. Failures will be retried using normal volume backoff and will be reported on the pod reason and message.
                                        The types of objects that may be mounted by this volume are defined by the container runtime implementation on a host machine and at minimum must include all valid types supported by the container image field.
                                        The OCI object gets mounted in a single directory (spec.containers[*].volumeMounts.mountPath) by merging the manifest layers in the same way as for container images.
                                        The volume will be mounted read-only (ro) and non-executable files (noexec).
                                        Sub path mounts for containers are not supported (spec.containers[*].volumeMounts.subpath).
                                        The field spec.securityContext.fsGroupChangePolicy has no effect on this volume type.
                                      properties:
                                        pullPolicy:
                                          description: |-
                                            Policy for pulling OCI objects. Possible values are:
                                            Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
                                            Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
                                            IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.
                                            Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                                          type: string
                                        reference:
                                          description: |-
                                            Required: Image or artifact reference to be used.
                                            Behaves in the same way as pod.spec.containers[*].image.
                                            Pull secrets will be assembled in the same way as for the container image by looking up node credentials, SA image pull secrets, and pod spec image pull secrets.
                                            More info: https://kubernetes.io/docs/concepts/containers/images
                                            This field is optional to allow higher level config management to default or override
                                            container images in workload controllers like Deployments and StatefulSets.
                                          type: string
                                      type: object
                                    iscsi:
                                      description: |-
                                        iscsi represents an ISCSI Disk resource that is attached to a
                                        kubelet's host machine and then exposed to the pod.
                                        More info: https://examples.k8s.io/volumes/iscsi/README.md
                                      properties:
                                        chapAuthDiscovery:
                                          description: chapAuthDiscovery defines whether
                                            support iSCSI Discovery CHAP authentication
                                          type: boolean
                                        chapAuthSession:
                                          description: chapAuthSession defines whether
                                            support iSCSI Session CHAP authentication
                                          type: boolean
                                        fsType:
                                          description: |-
                                            fsType is the filesystem type of the volume that you want to mount.
                                            Tip: Ensure that the filesystem type is supported by the host operating system.
                                            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                          type: string
                                        initiatorName:
                                          description: |-
                                            initiatorName is the custom iSCSI Initiator Name.
                                            If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
                                            <target portal>:<volume name> will be created for the connection.
                                          type: string
                                        iqn:
                                          description: iqn is the target iSCSI Qualified
                                            Name.
                                          type: string
                                        iscsiInterface:
                                          default: default
                                          description: |-
                                            iscsiInterface is the interface Name that uses an iSCSI transport.
                                            Defaults to 'default' (tcp).
                                          type: string
                                        lun:
                                          description: lun represents iSCSI Target
                                            Lun number.
                                          format: int32
                                          type: integer
                                        portals:
                                          description: |-
                                            portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
                                            is other than default (typically TCP ports 860 and 3260).
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        readOnly:
                                          description: |-
                                            readOnly here will force the ReadOnly setting in VolumeMounts.
                                            Defaults to false.
                                          type: boolean
                                        secretRef:
                                          description: secretRef is the CHAP Secret
                                            for iSCSI target and initiator authentication
                                          properties:
                                            name:
                                              default: ""
                                              description: |-
                                                Name of the referent.
                                                This field is effectively required, but due to backwards compatibility is
                                                allowed to be empty. Instances of this type with an empty value here are
                                                almost certainly wrong.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        targetPortal:
                                          description: |-
                                            targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
                                            is other than default (typically TCP ports 860 and 3260).
                                          type: string
                                      required:
                                      - iqn
                                      - lun
                                      - targetPortal
                                      type: object
                                    name:
                                      description: |-
                                        name of the volume.
                                        Must be a DNS_LABEL and unique within the pod.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    nfs:
                                      description: |-
                                        nfs represents an NFS mount on the host that shares a pod's lifetime
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                      properties:
                                        path:
                                          description: |-
                                            path that is exported by the NFS server.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly here will force the NFS export to be mounted with read-only permissions.
                                            Defaults to false.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                          type: boolean
                                        server:
                                          description: |-
                                            server is the hostname or IP address of the NFS server.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                          type: string
                                      required:
                                      - path
                                      - server
                                      type: object
                                    persistentVolumeClaim:
                                      description: |-
                                        persistentVolumeClaimVolumeSource represents a reference to a
                                        PersistentVolumeClaim in the same namespace.
                                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                      properties:
                                        claimName:
                                          description: |-
                                            claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly Will force the ReadOnly setting in VolumeMounts.
                                            Default false.
                                          type: boolean
                                      required:
                                      - claimName
                                      type: object
                                    photonPersistentDisk:
                                      description: |-
                                        photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine.
                                        Deprecated: PhotonPersistentDisk is deprecated and the in-tree photonPersistentDisk type is no longer supported.
                                      properties:
                                        fsType:
                                          description: |-
                                            fsType is the filesystem type to mount.
                                            Must be a filesystem type supported by the host operating system.
                                            Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                          type: string
                                        pdID:
                                          description: pdID is the ID that identifies
                                            Photon Controller persistent disk
                                          type: string
                                      required:
                                      - pdID
                                      type: object
                                    portworxVolume:
                                      description: |-
                                        portworxVolume represents a portworx volume attached and mounted on kubelets host machine.
                                        Deprecated: PortworxVolume is deprecated. All operations for the in-tree portworxVolume type
                                        are redirected to the pxd.portworx.com CSI driver when the CSIMigrationPortworx feature-gate
                                        is on.
                                      properties:
                                        fsType:
                                          description: |-
                                            fSType represents the filesystem type to mount
                                            Must be a filesystem type supported by the host operating system.
                                            Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly defaults to false (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        volumeID:
                                          description: volumeID uniquely identifies
                                            a Portworx volume
                                          type: string
                                      required:
                                      - volumeID
                                      type: object
                                    projected:
                                      description: projected items for all in one
                                        resources secrets, configmaps, and downward
                                        API
                                      properties:
                                        defaultMode:
                                          description: |-
                                            defaultMode are the mode bits used to set permissions on created files by default.
                                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                            Directories within the path are not affected by this setting.
                                            This might be in conflict with other options that affect the file
                                            mode, like fsGroup, and the result can be other mode bits set.
                                          format: int32
                                          type: integer
                                        sources:
                                          description: |-
                                            sources is the list of volume projections. Each entry in this list
                                            handles one source.
                                          items:
                                            description: |-
                                              Projection that may be projected along with other supported volume types.
                                              Exactly one of these fields must be set.
                                            properties:
                                              clusterTrustBundle:
                                                description: |-
                                                  ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
                                                  of ClusterTrustBundle objects in an auto-updating file.

                                                  Alpha, gated by the ClusterTrustBundleProjection feature gate.

                                                  ClusterTrustBundle objects can either be selected by name, or by the
                                                  combination of signer name and a label selector.

                                                  Kubelet performs aggressive normalization of the PEM contents written
                                                  into the pod filesystem.  Esoteric PEM features such as inter-block
                                                  comments and block headers are stripped.  Certificates are deduplicated.
                                                  The ordering of certificates within the file is arbitrary, and Kubelet
                                                  may change the order over time.
                                                properties:
                                                  labelSelector:
                                                    description: |-
                                                      Select all ClusterTrustBundles that match this label selector.  Only has
                                                      effect if signerName is set.  Mutually-exclusive with name.  If unset,
                                                      interpreted as "match nothing".  If set but empty, interpreted as "match
                                                      everything".
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: |-
                                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                                            relates the key and values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: |-
                                                                operator represents a key's relationship to a set of values.
                                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: |-
                                                                values is an array of string values. If the operator is In or NotIn,
                                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                the values array must be empty. This array is replaced during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: |-
                                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  name:
                                                    description: |-
                                                      Select a single ClusterTrustBundle by object name.  Mutually-exclusive
                                                      with signerName and labelSelector.
                                                    type: string
                                                  optional:
                                                    description: |-
                                                      If true, don't block pod startup if the referenced ClusterTrustBundle(s)
                                                      aren't available.  If using name, then the named ClusterTrustBundle is
                                                      allowed not to exist.  If using signerName, then the combination of
                                                      signerName and labelSelector is allowed to match zero
                                                      ClusterTrustBundles.
                                                    type: boolean
                                                  path:
                                                    description: Relative path from
                                                      the volume root to write the
                                                      bundle.
                                                    type: string
                                                  signerName:
                                                    description: |-
                                                      Select all ClusterTrustBundles that match this signer name.
                                                      Mutually-exclusive with name.  The contents of all selected
                                                      ClusterTrustBundles will be unified and deduplicated.
                                                    type: string
                                                required:
                                                - path
                                                type: object
                                              configMap:
                                                description: configMap information
                                                  about the configMap data to project
                                                properties:
                                                  items:
                                                    description: |-
                                                      items if unspecified, each key-value pair in the Data field of the referenced
                                                      ConfigMap will be projected into the volume as a file whose name is the
                                                      key and content is the value. If specified, the listed keys will be
                                                      projected into the specified paths, and unlisted keys will not be
                                                      present. If a key is specified which is not present in the ConfigMap,
                                                      the volume setup will error unless it is marked optional. Paths must be
                                                      relative and may not contain the '..' path or start with '..'.
                                                    items:
                                                      description: Maps a string key
                                                        to a path within a volume.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            key to project.
                                                          type: string
                                                        mode:
                                                          description: |-
                                                            mode is Optional: mode bits used to set permissions on this file.
                                                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                            If not specified, the volume defaultMode will be used.
                                                            This might be in conflict with other options that affect the file
                                                            mode, like fsGroup, and the result can be other mode bits set.
                                                          format: int32
                                                          type: integer
                                                        path:
                                                          description: |-
                                                            path is the relative path of the file to map the key to.
                                                            May not be an absolute path.
                                                            May not contain the path element '..'.
                                                            May not start with the string '..'.
                                                          type: string
                                                      required:
                                                      - key
                                                      - path
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  name:
                                                    default: ""
                                                    description: |-
                                                      Name of the referent.
                                                      This field is effectively required, but due to backwards compatibility is
                                                      allowed to be empty. Instances of this type with an empty value here are
                                                      almost certainly wrong.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    type: string
                                                  optional:
                                                    description: optional specify
                                                      whether the ConfigMap or its
                                                      keys must be defined
                                                    type: boolean
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              downwardAPI:
                                                description: downwardAPI information
                                                  about the downwardAPI data to project
                                                properties:
                                                  items:
                                                    description: Items is a list of
                                                      DownwardAPIVolume file
                                                    items:
                                                      description: DownwardAPIVolumeFile
                                                        represents information to
                                                        create the file containing
                                                        the pod field
                                                      properties:
                                                        fieldRef:
                                                          description: 'Required:
                                                            Selects a field of the
                                                            pod: only annotations,
                                                            labels, name, namespace
                                                            and uid are supported.'
                                                          properties:
                                                            apiVersion:
                                                              description: Version
                                                                of the schema the
                                                                FieldPath is written
                                                                in terms of, defaults
                                                                to "v1".
                                                              type: string
                                                            fieldPath:
                                                              description: Path of
                                                                the field to select
                                                                in the specified API
                                                                version.
                                                              type: string
                                                          required:
                                                          - fieldPath
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        mode:
                                                          description: |-
                                                            Optional: mode bits used to set permissions on this file, must be an octal value
                                                            between 0000 and 0777 or a decimal value between 0 and 511.
                                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                            If not specified, the volume defaultMode will be used.
                                                            This might be in conflict with other options that affect the file
                                                            mode, like fsGroup, and the result can be other mode bits set.
                                                          format: int32
                                                          type: integer
                                                        path:
                                                          description: 'Required:
                                                            Path is  the relative
                                                            path name of the file
                                                            to be created. Must not
                                                            be absolute or contain
                                                            the ''..'' path. Must
                                                            be utf-8 encoded. The
                                                            first item of the relative
                                                            path must not start with
                                                            ''..'''
                                                          type: string
                                                        resourceFieldRef:
                                                          description: |-
                                                            Selects a resource of the container: only resources limits and requests
                                                            (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                                          properties:
                                                            containerName:
                                                              description: 'Container
                                                                name: required for
                                                                volumes, optional
                                                                for env vars'
                                                              type: string
                                                            divisor:
                                                              anyOf:
                                                              - type: integer
                                                              - type: string
                                                              description: Specifies
                                                                the output format
                                                                of the exposed resources,
                                                                defaults to "1"
                                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                              x-kubernetes-int-or-string: true
                                                            resource:
                                                              description: 'Required:
                                                                resource to select'
                                                              type: string
                                                          required:
                                                          - resource
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                      required:
                                                      - path
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                type: object
                                              secret:
                                                description: secret information about
                                                  the secret data to project
                                                properties:
                                                  items:
                                                    description: |-
                                                      items if unspecified, each key-value pair in the Data field of the referenced
                                                      Secret will be projected into the volume as a file whose name is the
                                                      key and content is the value. If specified, the listed keys will be
                                                      projected into the specified paths, and unlisted keys will not be
                                                      present. If a key is specified which is not present in the Secret,
                                                      the volume setup will error unless it is marked optional. Paths must be
                                                      relative and may not contain the '..' path or start with '..'.
                                                    items:
                                                      description: Maps a string key
                                                        to a path within a volume.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            key to project.
                                                          type: string
                                                        mode:
                                                          description: |-
                                                            mode is Optional: mode bits used to set permissions on this file.
                                                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                            If not specified, the volume defaultMode will be used.
                                                            This might be in conflict with other options that affect the file
                                                            mode, like fsGroup, and the result can be other mode bits set.
                                                          format: int32
                                                          type: integer
                                                        path:
                                                          description: |-
                                                            path is the relative path of the file to map the key to.
                                                            May not be an absolute path.
                                                            May not contain the path element '..'.
                                                            May not start with the string '..'.
                                                          type: string
                                                      required:
                                                      - key
                                                      - path
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  name:
                                                    default: ""
                                                    description: |-
                                                      Name of the referent.
                                                      This field is effectively required, but due to backwards compatibility is
                                                      allowed to be empty. Instances of this type with an empty value here are
                                                      almost certainly wrong.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    type: string
                                                  optional:
                                                    description: optional field specify
                                                      whether the Secret or its key
                                                      must be defined
                                                    type: boolean
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              serviceAccountToken:
                                                description: serviceAccountToken is
                                                  information about the serviceAccountToken
                                                  data to project
                                                properties:
                                                  audience:
                                                    description: |-
                                                      audience is the intended audience of the token. A recipient of a token
                                                      must identify itself with an identifier specified in the audience of the
                                                      token, and otherwise should reject the token. The audience defaults to the
                                                      identifier of the apiserver.
                                                    type: string
                                                  expirationSeconds:
                                                    description: |-
                                                      expirationSeconds is the requested duration of validity of the service
                                                      account token. As the token approaches expiration, the kubelet volume
                                                      plugin will proactively rotate the service account token. The kubelet will
                                                      start trying to rotate the token if the token is older than 80 percent of
                                                      its time to live or if the token is older than 24 hours.Defaults to 1 hour
                                                      and must be at least 10 minutes.
                                                    format: int64
                                                    type: integer
                                                  path:
                                                    description: |-
                                                      path is the path relative to the mount point of the file to project the
                                                      token into.
                                                    type: string
                                                required:
                                                - path
                                                type: object
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    quobyte:
                                      description: |-
                                        quobyte represents a Quobyte mount on the host that shares a pod's lifetime.
                                        Deprecated: Quobyte is deprecated and the in-tree quobyte type is no longer supported.
                                      properties:
                                        group:
                                          description: |-
                                            group to map volume access to
                                            Default is no group
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly here will force the Quobyte volume to be mounted with read-only permissions.
                                            Defaults to false.
                                          type: boolean
                                        registry:
                                          description: |-
                                            registry represents a single or multiple Quobyte Registry services
                                            specified as a string as host:port pair (multiple entries are separated with commas)
                                            which acts as the central registry for volumes
                                          type: string
                                        tenant:
                                          description: |-
                                            tenant owning the given Quobyte volume in the Backend
                                            Used with dynamically provisioned Quobyte volumes, value is set by the plugin
                                          type: string
                                        user:
                                          description: |-
                                            user to map volume access to
                                            Defaults to serivceaccount user
                                          type: string
                                        volume:
                                          description: volume is a string that references
                                            an already created Quobyte volume by name.
                                          type: string
                                      required:
                                      - registry
                                      - volume
                                      type: object
                                    rbd:
                                      description: |-
                                        rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.
                                        Deprecated: RBD is deprecated and the in-tree rbd type is no longer supported.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md
                                      properties:
                                        fsType:
                                          description: |-
                                            fsType is the filesystem type of the volume that you want to mount.
                                            Tip: Ensure that the filesystem type is supported by the host operating system.
                                            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                          type: string
                                        image:
                                          description: |-
                                            image is the rados image name.
                                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                          type: string
                                        keyring:
                                          default: /etc/ceph/keyring
                                          description: |-
                                            keyring is the path to key ring for RBDUser.
                                            Default is /etc/ceph/keyring.
                                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                          type: string
                                        monitors:
                                          description: |-
                                            monitors is a collection of Ceph monitors.
                                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        pool:
                                          default: rbd
                                          description: |-
                                            pool is the rados pool name.
                                            Default is rbd.
                                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly here will force the ReadOnly setting in VolumeMounts.
                                            Defaults to false.
                                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                          type: boolean
                                        secretRef:
                                          description: |-
                                            secretRef is name of the authentication secret for RBDUser. If provided
                                            overrides keyring.
                                            Default is nil.
                                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                          properties:
                                            name:
                                              default: ""
                                              description: |-
                                                Name of the referent.
                                                This field is effectively required, but due to backwards compatibility is
                                                allowed to be empty. Instances of this type with an empty value here are
                                                almost certainly wrong.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        user:
                                          default: admin
                                          description: |-
                                            user is the rados user name.
                                            Default is admin.
                                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                          type: string
                                      required:
                                      - image
                                      - monitors
                                      type: object
                                    scaleIO:
                                      description: |-
                                        scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
                                        Deprecated: ScaleIO is deprecated and the in-tree scaleIO type is no longer supported.
                                      properties:
                                        fsType:
                                          default: xfs
                                          description: |-
                                            fsType is the filesystem type to mount.
                                            Must be a filesystem type supported by the host operating system.
                                            Ex. "ext4", "xfs", "ntfs".
                                            Default is "xfs".
                                          type: string
                                        gateway:
                                          description: gateway is the host address
                                            of the ScaleIO API Gateway.
                                          type: string
                                        protectionDomain:
                                          description: protectionDomain is the name
                                            of the ScaleIO Protection Domain for the
                                            configured storage.
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly Defaults to false (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        secretRef:
                                          description: |-
                                            secretRef references to the secret for ScaleIO user and other
                                            sensitive information. If this is not provided, Login operation will fail.
                                          properties:
                                            name:
                                              default: ""
                                              description: |-
                                                Name of the referent.
                                                This field is effectively required, but due to backwards compatibility is
                                                allowed to be empty. Instances of this type with an empty value here are
                                                almost certainly wrong.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        sslEnabled:
                                          description: sslEnabled Flag enable/disable
                                            SSL communication with Gateway, default
                                            false
                                          type: boolean
                                        storageMode:
                                          default: ThinProvisioned
                                          description: |-
                                            storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
                                            Default is ThinProvisioned.
                                          type: string
                                        storagePool:
                                          description: storagePool is the ScaleIO
                                            Storage Pool associated with the protection
                                            domain.
                                          type: string
                                        system:
                                          description: system is the name of the storage
                                            system as configured in ScaleIO.
                                          type: string
                                        volumeName:
                                          description: |-
                                            volumeName is the name of a volume already created in the ScaleIO system
                                            that is associated with this volume source.
                                          type: string
                                      required:
                                      - gateway
                                      - secretRef
                                      - system
                                      type: object
                                    secret:
                                      description: |-
                                        secret represents a secret that should populate this volume.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                                      properties:
                                        defaultMode:
                                          description: |-
                                            defaultMode is Optional: mode bits used to set permissions on created files by default.
                                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                            YAML accepts both octal and decimal values, JSON requires decimal values
                                            for mode bits. Defaults to 0644.
                                            Directories within the path are not affected by this setting.
                                            This might be in conflict with other options that affect the file
                                            mode, like fsGroup, and the result can be other mode bits set.
                                          format: int32
                                          type: integer
                                        items:
                                          description: |-
                                            items If unspecified, each key-value pair in the Data field of the referenced
                                            Secret will be projected into the volume as a file whose name is the
                                            key and content is the value. If specified, the listed keys will be
                                            projected into the specified paths, and unlisted keys will not be
                                            present. If a key is specified which is not present in the Secret,
                                            the volume setup will error unless it is marked optional. Paths must be
                                            relative and may not contain the '..' path or start with '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: |-
                                                  mode is Optional: mode bits used to set permissions on this file.
                                                  Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                  YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                  If not specified, the volume defaultMode will be used.
                                                  This might be in conflict with other options that affect the file
                                                  mode, like fsGroup, and the result can be other mode bits set.
                                                format: int32
                                                type: integer
                                              path:
                                                description: |-
                                                  path is the relative path of the file to map the key to.
                                                  May not be an absolute path.
                                                  May not contain the path element '..'.
                                                  May not start with the string '..'.
                                                type: string
                                            required:
                                            - key
                                            - path
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        optional:
                                          description: optional field specify whether
                                            the Secret or its keys must be defined
                                          type: boolean
                                        secretName:
                                          description: |-
                                            secretName is the name of the secret in the pod's namespace to use.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                                          type: string
                                      type: object
                                    storageos:
                                      description: |-
                                        storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
                                        Deprecated: StorageOS is deprecated and the in-tree storageos type is no longer supported.
                                      properties:
                                        fsType:
                                          description: |-
                                            fsType is the filesystem type to mount.
                                            Must be a filesystem type supported by the host operating system.
                                            Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly defaults to false (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        secretRef:
                                          description: |-
                                            secretRef specifies the secret to use for obtaining the StorageOS API
                                            credentials.  If not specified, default values will be attempted.
                                          properties:
                                            name:
                                              default: ""
                                              description: |-
                                                Name of the referent.
                                                This field is effectively required, but due to backwards compatibility is
                                                allowed to be empty. Instances of this type with an empty value here are
                                                almost certainly wrong.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        volumeName:
                                          description: |-
                                            volumeName is the human-readable name of the StorageOS volume.  Volume
                                            names are only unique within a namespace.
                                          type: string
                                        volumeNamespace:
                                          description: |-
                                            volumeNamespace specifies the scope of the volume within StorageOS.  If no
                                            namespace is specified then the Pod's namespace will be used.  This allows the
                                            Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
                                            Set VolumeName to any name to override the default behaviour.
                                            Set to "default" if you are not using namespaces within StorageOS.
                                            Namespaces that do not pre-exist within StorageOS will be created.
                                          type: string
                                      type: object
                                    vsphereVolume:
                                      description: |-
                                        vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine.
                                        Deprecated: VsphereVolume is deprecated. All operations for the in-tree vsphereVolume type
                                        are redirected to the csi.vsphere.vmware.com CSI driver.
                                      properties:
                                        fsType:
                                          description: |-
                                            fsType is filesystem type to mount.
                                            Must be a filesystem type supported by the host operating system.
                                            Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                          type: string
                                        storagePolicyID:
                                          description: storagePolicyID is the storage
                                            Policy Based Management (SPBM) profile
                                            ID associated with the StoragePolicyName.
                                          type: string
                                        storagePolicyName:
                                          description: storagePolicyName is the storage
                                            Policy Based Management (SPBM) profile
                                            name.
                                          type: string
                                        volumePath:
                                          description: volumePath is the path that
                                            identifies vSphere volume vmdk
                                          type: string
                                      required:
                                      - volumePath
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            required:
                            - containers
                            type: object
                        type: object
                      replicas:
                        default: 1
                        description: |-
                          Replicas describes the number of desired pods.
                          This is a pointer to distinguish between explicit zero and not specified.
                          This only affects the DataPlane deployments for now, for more details on
                          ControlPlane scaling please see https://github.com/Kong/gateway-operator/issues/736.
                        format: int32
                        type: integer
                    type: object
                  extensions:
                    description: |-
                      Extensions provide additional or replacement features for the ControlPlane
                      resources to influence or enhance functionality.
                    items:
                      description: |-
                        ExtensionRef corresponds to another resource in the Kubernetes cluster which
                        defines extended behavior for a resource (e.g. ControlPlane).
                      properties:
                        group:
                          default: gateway-operator.konghq.com
                          description: Group is the group of the extension resource.
                          type: string
                        kind:
                          description: Kind is kind of the extension resource.
                          type: string
                        name:
                          description: Name is the name of the referred resource.
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace is the namespace of the referred resource.

                            For namespace-scoped resources if no Namespace is provided then the
                            namespace of the parent object MUST be used.

                            This field MUST not be set when referring to cluster-scoped resources.
                          type: string
                      required:
                      - kind
                      - name
                      type: object
                    maxItems: 2
                    minItems: 0
                    type: array
                type: object
                x-kubernetes-validations:
                - message: Extension not allowed for ControlPlane
                  rule: 'has(self.extensions) ? self.extensions.all(e, (e.group ==
                    ''konnect.konghq.com'' && e.kind == ''KonnectExtension'') || (e.group
                    == ''gateway-operator.konghq.com'' && e.kind == ''DataPlaneMetricsExtension''))
                    : true'
              dataPlaneOptions:
                description: |-
                  DataPlaneOptions is the specification for configuration
                  overrides for DataPlane resources that will be created for the Gateway.
                properties:
                  deployment:
                    description: |-
                      DataPlaneDeploymentOptions specifies options for the Deployments (as in the Kubernetes
                      resource "Deployment") which are created and managed for the DataPlane resource.
                    properties:
                      podTemplateSpec:
                        description: |-
                          PodTemplateSpec defines PodTemplateSpec for Deployment's pods.
                          It's being applied on top of the generated Deployments using
                          [StrategicMergePatch](https://pkg.go.dev/k8s.io/apimachinery/pkg/util/strategicpatch#StrategicMergePatch).
                        properties:
                          metadata:
                            description: |-
                              Standard object's metadata.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                              finalizers:
                                items:
                                  type: string
                                type: array
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                              name:
                                type: string
                              namespace:
                                type: string
                            type: object
                          spec:
                            description: |-
                              Specification of the desired behavior of the pod.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
                            properties:
                              activeDeadlineSeconds:
                                description: |-
                                  Optional duration in seconds the pod may be active on the node relative to
                                  StartTime before the system will actively try to mark it failed and kill associated containers.
                                  Value must be a positive integer.
                                format: int64
                                type: integer
                              affinity:
                                description: If specified, the pod's scheduling constraints
                                properties:
                                  nodeAffinity:
                                    description: Describes node affinity scheduling
                                      rules for the pod.
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: |-
                                          The scheduler will prefer to schedule pods to nodes that satisfy
                                          the affinity expressions specified by this field, but it may choose
                                          a node that violates one or more of the expressions. The node that is
                                          most preferred is the one with the greatest sum of weights, i.e.
                                          for each node that meets all of the scheduling requirements (resource
                                          request, requiredDuringScheduling affinity expressions, etc.),
                                          compute a sum by iterating through the elements of this field and adding
                                          "weight" to the sum if the node matches the corresponding matchExpressions; the
                                          node(s) with the highest sum are the most preferred.
                                        items:
                                          description: |-
                                            An empty preferred scheduling term matches all objects with implicit weight 0
                                            (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                          properties:
                                            preference:
                                              description: A node selector term, associated
                                                with the corresponding weight.
                                              properties:
                                                matchExpressions:
                                                  description: A list of node selector
                                                    requirements by node's labels.
                                                  items:
                                                    description: |-
                                                      A node selector requirement is a selector that contains values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          Represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          An array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. If the operator is Gt or Lt, the values
                                                          array must have a single element, which will be interpreted as an integer.
                                                          This array is replaced during a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                matchFields:
                                                  description: A list of node selector
                                                    requirements by node's fields.
                                                  items:
                                                    description: |-
                                                      A node selector requirement is a selector that contains values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          Represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          An array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. If the operator is Gt or Lt, the values
                                                          array must have a single element, which will be interpreted as an integer.
                                                          This array is replaced during a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            weight:
                                              description: Weight associated with
                                                matching the corresponding nodeSelectorTerm,
                                                in the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                          - preference
                                          - weight
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: |-
                                          If the affinity requirements specified by this field are not met at
                                          scheduling time, the pod will not be scheduled onto the node.
                                          If the affinity requirements specified by this field cease to be met
                                          at some point during pod execution (e.g. due to an update), the system
                                          may or may not try to eventually evict the pod from its node.
                                        properties:
                                          nodeSelectorTerms:
                                            description: Required. A list of node
                                              selector terms. The terms are ORed.
                                            items:
                                              description: |-
                                                A null or empty node selector term matches no objects. The requirements of
                                                them are ANDed.
                                                The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                              properties:
                                                matchExpressions:
                                                  description: A list of node selector
                                                    requirements by node's labels.
                                                  items:
                                                    description: |-
                                                      A node selector requirement is a selector that contains values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          Represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          An array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. If the operator is Gt or Lt, the values
                                                          array must have a single element, which will be interpreted as an integer.
                                                          This array is replaced during a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                matchFields:
                                                  description: A list of node selector
                                                    requirements by node's fields.
                                                  items:
                                                    description: |-
                                                      A node selector requirement is a selector that contains values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          Represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          An array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. If the operator is Gt or Lt, the values
                                                          array must have a single element, which will be interpreted as an integer.
                                                          This array is replaced during a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        required:
                                        - nodeSelectorTerms
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  podAffinity:
                                    description: Describes pod affinity scheduling
                                      rules (e.g. co-locate this pod in the same node,
                                      zone, etc. as some other pod(s)).
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: |-
                                          The scheduler will prefer to schedule pods to nodes that satisfy
                                          the affinity expressions specified by this field, but it may choose
                                          a node that violates one or more of the expressions. The node that is
                                          most preferred is the one with the greatest sum of weights, i.e.
                                          for each node that meets all of the scheduling requirements (resource
                                          request, requiredDuringScheduling affinity expressions, etc.),
                                          compute a sum by iterating through the elements of this field and adding
                                          "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                          node(s) with the highest sum are the most preferred.
                                        items:
                                          description: The weights of all of the matched
                                            WeightedPodAffinityTerm fields are added
                                            per-node to find the most preferred node(s)
                                          properties:
                                            podAffinityTerm:
                                              description: Required. A pod affinity
                                                term, associated with the corresponding
                                                weight.
                                              properties:
                                                labelSelector:
                                                  description: |-
                                                    A label query over a set of resources, in this case pods.
                                                    If it's null, this PodAffinityTerm matches with no Pods.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: |-
                                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: |-
                                                              operator represents a key's relationship to a set of values.
                                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: |-
                                                              values is an array of string values. If the operator is In or NotIn,
                                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                              the values array must be empty. This array is replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: |-
                                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                matchLabelKeys:
                                                  description: |-
                                                    MatchLabelKeys is a set of pod label keys to select which pods will
                                                    be taken into consideration. The keys are used to lookup values from the
                                                    incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                    to select the group of existing pods which pods will be taken into consideration
                                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                    pod labels will be ignored. The default value is empty.
                                                    The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                    Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                    This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                mismatchLabelKeys:
                                                  description: |-
                                                    MismatchLabelKeys is a set of pod label keys to select which pods will
                                                    be taken into consideration. The keys are used to lookup values from the
                                                    incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                    to select the group of existing pods which pods will be taken into consideration
                                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                    pod labels will be ignored. The default value is empty.
                                                    The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                    Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                    This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                namespaceSelector:
                                                  description: |-
                                                    A label query over the set of namespaces that the term applies to.
                                                    The term is applied to the union of the namespaces selected by this field
                                                    and the ones listed in the namespaces field.
                                                    null selector and null or empty namespaces list means "this pod's namespace".
                                                    An empty selector ({}) matches all namespaces.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: |-
                                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: |-
                                                              operator represents a key's relationship to a set of values.
                                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: |-
                                                              values is an array of string values. If the operator is In or NotIn,
                                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                              the values array must be empty. This array is replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: |-
                                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                namespaces:
                                                  description: |-
                                                    namespaces specifies a static list of namespace names that the term applies to.
                                                    The term is applied to the union of the namespaces listed in this field
                                                    and the ones selected by namespaceSelector.
                                                    null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                topologyKey:
                                                  description: |-
                                                    This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                    the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                    whose value of the label with key topologyKey matches that of any node on which any of the
                                                    selected pods is running.
                                                    Empty topologyKey is not allowed.
                                                  type: string
                                              required:
                                              - topologyKey
                                              type: object
                                            weight:
                                              description: |-
                                                weight associated with matching the corresponding podAffinityTerm,
                                                in the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                          - podAffinityTerm
                                          - weight
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: |-
                                          If the affinity requirements specified by this field are not met at
                                          scheduling time, the pod will not be scheduled onto the node.
                                          If the affinity requirements specified by this field cease to be met
                                          at some point during pod execution (e.g. due to a pod label update), the
                                          system may or may not try to eventually evict the pod from its node.
                                          When there are multiple elements, the lists of nodes corresponding to each
                                          podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                        items:
                                          description: |-
                                            Defines a set of pods (namely those matching the labelSelector
                                            relative to the given namespace(s)) that this pod should be
                                            co-located (affinity) or not co-located (anti-affinity) with,
                                            where co-located is defined as running on a node whose value of
                                            the label with key <topologyKey> matches that of any node on which
                                            a pod of the set of pods is running
                                          properties:
                                            labelSelector:
                                              description: |-
                                                A label query over a set of resources, in this case pods.
                                                If it's null, this PodAffinityTerm matches with no Pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            matchLabelKeys:
                                              description: |-
                                                MatchLabelKeys is a set of pod label keys to select which pods will
                                                be taken into consideration. The keys are used to lookup values from the
                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                to select the group of existing pods which pods will be taken into consideration
                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                pod labels will be ignored. The default value is empty.
                                                The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            mismatchLabelKeys:
                                              description: |-
                                                MismatchLabelKeys is a set of pod label keys to select which pods will
                                                be taken into consideration. The keys are used to lookup values from the
                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                to select the group of existing pods which pods will be taken into consideration
                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                pod labels will be ignored. The default value is empty.
                                                The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            namespaceSelector:
                                              description: |-
                                                A label query over the set of namespaces that the term applies to.
                                                The term is applied to the union of the namespaces selected by this field
                                                and the ones listed in the namespaces field.
                                                null selector and null or empty namespaces list means "this pod's namespace".
                                                An empty selector ({}) matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaces:
                                              description: |-
                                                namespaces specifies a static list of namespace names that the term applies to.
                                                The term is applied to the union of the namespaces listed in this field
                                                and the ones selected by namespaceSelector.
                                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            topologyKey:
                                              description: |-
                                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                whose value of the label with key topologyKey matches that of any node on which any of the
                                                selected pods is running.
                                                Empty topologyKey is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    type: object
                                  podAntiAffinity:
                                    description: Describes pod anti-affinity scheduling
                                      rules (e.g. avoid putting this pod in the same
                                      node, zone, etc. as some other pod(s)).
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: |-
                                          The scheduler will prefer to schedule pods to nodes that satisfy
                                          the anti-affinity expressions specified by this field, but it may choose
                                          a node that violates one or more of the expressions. The node that is
                                          most preferred is the one with the greatest sum of weights, i.e.
                                          for each node that meets all of the scheduling requirements (resource
                                          request, requiredDuringScheduling anti-affinity expressions, etc.),
                                          compute a sum by iterating through the elements of this field and adding
                                          "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                          node(s) with the highest sum are the most preferred.
                                        items:
                                          description: The weights of all of the matched
                                            WeightedPodAffinityTerm fields are added
                                            per-node to find the most preferred node(s)
                                          properties:
                                            podAffinityTerm:
                                              description: Required. A pod affinity
                                                term, associated with the corresponding
                                                weight.
                                              properties:
                                                labelSelector:
                                                  description: |-
                                                    A label query over a set of resources, in this case pods.
                                                    If it's null, this PodAffinityTerm matches with no Pods.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: |-
                                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: |-
                                                              operator represents a key's relationship to a set of values.
                                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: |-
                                                              values is an array of string values. If the operator is In or NotIn,
                                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                              the values array must be empty. This array is replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: |-
                                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                matchLabelKeys:
                                                  description: |-
                                                    MatchLabelKeys is a set of pod label keys to select which pods will
                                                    be taken into consideration. The keys are used to lookup values from the
                                                    incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                    to select the group of existing pods which pods will be taken into consideration
                                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                    pod labels will be ignored. The default value is empty.
                                                    The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                    Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                    This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                mismatchLabelKeys:
                                                  description: |-
                                                    MismatchLabelKeys is a set of pod label keys to select which pods will
                                                    be taken into consideration. The keys are used to lookup values from the
                                                    incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                    to select the group of existing pods which pods will be taken into consideration
                                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                    pod labels will be ignored. The default value is empty.
                                                    The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                    Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                    This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                namespaceSelector:
                                                  description: |-
                                                    A label query over the set of namespaces that the term applies to.
                                                    The term is applied to the union of the namespaces selected by this field
                                                    and the ones listed in the namespaces field.
                                                    null selector and null or empty namespaces list means "this pod's namespace".
                                                    An empty selector ({}) matches all namespaces.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: |-
                                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: |-
                                                              operator represents a key's relationship to a set of values.
                                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: |-
                                                              values is an array of string values. If the operator is In or NotIn,
                                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                              the values array must be empty. This array is replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: |-
                                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                namespaces:
                                                  description: |-
                                                    namespaces specifies a static list of namespace names that the term applies to.
                                                    The term is applied to the union of the namespaces listed in this field
                                                    and the ones selected by namespaceSelector.
                                                    null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                topologyKey:
                                                  description: |-
                                                    This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                    the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                    whose value of the label with key topologyKey matches that of any node on which any of the
                                                    selected pods is running.
                                                    Empty topologyKey is not allowed.
                                                  type: string
                                              required:
                                              - topologyKey
                                              type: object
                                            weight:
                                              description: |-
                                                weight associated with matching the corresponding podAffinityTerm,
                                                in the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                          - podAffinityTerm
                                          - weight
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: |-
                                          If the anti-affinity requirements specified by this field are not met at
                                          scheduling time, the pod will not be scheduled onto the node.
                                          If the anti-affinity requirements specified by this field cease to be met
                                          at some point during pod execution (e.g. due to a pod label update), the
                                          system may or may not try to eventually evict the pod from its node.
                                          When there are multiple elements, the lists of nodes corresponding to each
                                          podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                        items:
                                          description: |-
                                            Defines a set of pods (namely those matching the labelSelector
                                            relative to the given namespace(s)) that this pod should be
                                            co-located (affinity) or not co-located (anti-affinity) with,
                                            where co-located is defined as running on a node whose value of
                                            the label with key <topologyKey> matches that of any node on which
                                            a pod of the set of pods is running
                                          properties:
                                            labelSelector:
                                              description: |-
                                                A label query over a set of resources, in this case pods.
                                                If it's null, this PodAffinityTerm matches with no Pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            matchLabelKeys:
                                              description: |-
                                                MatchLabelKeys is a set of pod label keys to select which pods will
                                                be taken into consideration. The keys are used to lookup values from the
                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                to select the group of existing pods which pods will be taken into consideration
                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                pod labels will be ignored. The default value is empty.
                                                The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            mismatchLabelKeys:
                                              description: |-
                                                MismatchLabelKeys is a set of pod label keys to select which pods will
                                                be taken into consideration. The keys are used to lookup values from the
                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                to select the group of existing pods which pods will be taken into consideration
                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                pod labels will be ignored. The default value is empty.
                                                The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            namespaceSelector:
                                              description: |-
                                                A label query over the set of namespaces that the term applies to.
                                                The term is applied to the union of the namespaces selected by this field
                                                and the ones listed in the namespaces field.
                                                null selector and null or empty namespaces list means "this pod's namespace".
                                                An empty selector ({}) matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaces:
                                              description: |-
                                                namespaces specifies a static list of namespace names that the term applies to.
                                                The term is applied to the union of the namespaces listed in this field
                                                and the ones selected by namespaceSelector.
                                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            topologyKey:
                                              description: |-
                                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                whose value of the label with key topologyKey matches that of any node on which any of the
                                                selected pods is running.
                                                Empty topologyKey is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    type: object
                                type: object
                              automountServiceAccountToken:
                                description: AutomountServiceAccountToken indicates
                                  whether a service account token should be automatically
                                  mounted.
                                type: boolean
                              containers:
                                description: |-
                                  List of containers belonging to the pod.
                                  Containers cannot currently be added or removed.
                                  There must be at least one container in a Pod.
                                  Cannot be updated.
                                items:
                                  description: A single application container that
                                    you want to run within a pod.
                                  properties:
                                    args:
                                      description: |-
                                        Arguments to the entrypoint.
                                        The container image's CMD is used if this is not provided.
                                        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                        of whether the variable exists or not. Cannot be updated.
                                        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    command:
                                      description: |-
                                        Entrypoint array. Not executed within a shell.
                                        The container image's ENTRYPOINT is used if this is not provided.
                                        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                        of whether the variable exists or not. Cannot be updated.
                                        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    env:
                                      description: |-
                                        List of environment variables to set in the container.
                                        Cannot be updated.
                                      items:
                                        description: EnvVar represents an environment
                                          variable present in a Container.
                                        properties:
                                          name:
                                            description: Name of the environment variable.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          value:
                                            description: |-
                                              Variable references $(VAR_NAME) are expanded
                                              using the previously defined environment variables in the container and
                                              any service environment variables. If a variable cannot be resolved,
                                              the reference in the input string will be unchanged. Double $$ are reduced
                                              to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                              "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                              Escaped references will never be expanded, regardless of whether the variable
                                              exists or not.
                                              Defaults to "".
                                            type: string
                                          valueFrom:
                                            description: Source for the environment
                                              variable's value. Cannot be used if
                                              value is not empty.
                                            properties:
                                              configMapKeyRef:
                                                description: Selects a key of a ConfigMap.
                                                properties:
                                                  key:
                                                    description: The key to select.
                                                    type: string
                                                  name:
                                                    default: ""
                                                    description: |-
                                                      Name of the referent.
                                                      This field is effectively required, but due to backwards compatibility is
                                                      allowed to be empty. Instances of this type with an empty value here are
                                                      almost certainly wrong.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      ConfigMap or its key must be
                                                      defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              fieldRef:
                                                description: |-
                                                  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                                  spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema
                                                      the FieldPath is written in
                                                      terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field
                                                      to select in the specified API
                                                      version.
                                                    type: string
                                                required:
                                                - fieldPath
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              resourceFieldRef:
                                                description: |-
                                                  Selects a resource of the container: only resources limits and requests
                                                  (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                                properties:
                                                  containerName:
                                                    description: 'Container name:
                                                      required for volumes, optional
                                                      for env vars'
                                                    type: string
                                                  divisor:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Specifies the output
                                                      format of the exposed resources,
                                                      defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource
                                                      to select'
                                                    type: string
                                                required:
                                                - resource
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              secretKeyRef:
                                                description: Selects a key of a secret
                                                  in the pod's namespace
                                                properties:
                                                  key:
                                                    description: The key of the secret
                                                      to select from.  Must be a valid
                                                      secret key.
                                                    type: string
                                                  name:
                                                    default: ""
                                                    description: |-
                                                      Name of the referent.
                                                      This field is effectively required, but due to backwards compatibility is
                                                      allowed to be empty. Instances of this type with an empty value here are
                                                      almost certainly wrong.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      Secret or its key must be defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                            type: object
                                        required:
                                        - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    envFrom:
                                      description: |-
                                        List of sources to populate environment variables in the container.
                                        The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                                        will be reported as an event when the container is starting. When a key exists in multiple
                                        sources, the value associated with the last source will take precedence.
                                        Values defined by an Env with a duplicate key will take precedence.
                                        Cannot be updated.
                                      items:
                                        description: EnvFromSource represents the
                                          source of a set of ConfigMaps
                                        properties:
                                          configMapRef:
                                            description: The ConfigMap to select from
                                            properties:
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          prefix:
                                            description: An optional identifier to
                                              prepend to each key in the ConfigMap.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          secretRef:
                                            description: The Secret to select from
                                            properties:
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    image:
                                      description: |-
                                        Container image name.
                                        More info: https://kubernetes.io/docs/concepts/containers/images
                                        This field is optional to allow higher level config management to default or override
                                        container images in workload controllers like Deployments and StatefulSets.
                                      type: string
                                    imagePullPolicy:
                                      description: |-
                                        Image pull policy.
                                        One of Always, Never, IfNotPresent.
                                        Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                                        Cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                                      type: string
                                    lifecycle:
                                      description: |-
                                        Actions that the management system should take in response to container lifecycle events.
                                        Cannot be updated.
                                      properties:
                                        postStart:
                                          description: |-
                                            PostStart is called immediately after a container is created. If the handler fails,
                                            the container is terminated and restarted according to its restart policy.
                                            Other management of the container blocks until the hook completes.
                                            More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                          properties:
                                            exec:
                                              description: Exec specifies a command
                                                to execute in the container.
                                              properties:
                                                command:
                                                  description: |-
                                                    Command is the command line to execute inside the container, the working directory for the
                                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                    a shell, you need to explicitly call out to that shell.
                                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies an HTTP
                                                GET request to perform.
                                              properties:
                                                host:
                                                  description: |-
                                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                                    "Host" in httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set
                                                    in the request. HTTP allows repeated
                                                    headers.
                                                  items:
                                                    description: HTTPHeader describes
                                                      a custom header to be used in
                                                      HTTP probes
                                                    properties:
                                                      name:
                                                        description: |-
                                                          The header field name.
                                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                        type: string
                                                      value:
                                                        description: The header field
                                                          value
                                                        type: string
                                                    required:
                                                    - name
                                                    - value
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                path:
                                                  description: Path to access on the
                                                    HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Name or number of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: |-
                                                    Scheme to use for connecting to the host.
                                                    Defaults to HTTP.
                                                  type: string
                                              required:
                                              - port
                                              type: object
                                            sleep:
                                              description: Sleep represents a duration
                                                that the container should sleep.
                                              properties:
                                                seconds:
                                                  description: Seconds is the number
                                                    of seconds to sleep.
                                                  format: int64
                                                  type: integer
                                              required:
                                              - seconds
                                              type: object
                                            tcpSocket:
                                              description: |-
                                                Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                                for backward compatibility. There is no validation of this field and
                                                lifecycle hooks will fail at runtime when it is specified.
                                              properties:
                                                host:
                                                  description: 'Optional: Host name
                                                    to connect to, defaults to the
                                                    pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Number or name of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                              - port
                                              type: object
                                          type: object
                                        preStop:
                                          description: |-
                                            PreStop is called immediately before a container is terminated due to an
                                            API request or management event such as liveness/startup probe failure,
                                            preemption, resource contention, etc. The handler is not called if the
                                            container crashes or exits. The Pod's termination grace period countdown begins before the
                                            PreStop hook is executed. Regardless of the outcome of the handler, the
                                            container will eventually terminate within the Pod's termination grace
                                            period (unless delayed by finalizers). Other management of the container blocks until the hook completes
                                            or until the termination grace period is reached.
                                            More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                          properties:
                                            exec:
                                              description: Exec specifies a command
                                                to execute in the container.
                                              properties:
                                                command:
                                                  description: |-
                                                    Command is the command line to execute inside the container, the working directory for the
                                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                    a shell, you need to explicitly call out to that shell.
                                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies an HTTP
                                                GET request to perform.
                                              properties:
                                                host:
                                                  description: |-
                                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                                    "Host" in httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set
                                                    in the request. HTTP allows repeated
                                                    headers.
                                                  items:
                                                    description: HTTPHeader describes
                                                      a custom header to be used in
                                                      HTTP probes
                                                    properties:
                                                      name:
                                                        description: |-
                                                          The header field name.
                                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                        type: string
                                                      value:
                                                        description: The header field
                                                          value
                                                        type: string
                                                    required:
                                                    - name
                                                    - value
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                path:
                                                  description: Path to access on the
                                                    HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Name or number of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: |-
                                                    Scheme to use for connecting to the host.
                                                    Defaults to HTTP.
                                                  type: string
                                              required:
                                              - port
                                              type: object
                                            sleep:
                                              description: Sleep represents a duration
                                                that the container should sleep.
                                              properties:
                                                seconds:
                                                  description: Seconds is the number
                                                    of seconds to sleep.
                                                  format: int64
                                                  type: integer
                                              required:
                                              - seconds
                                              type: object
                                            tcpSocket:
                                              description: |-
                                                Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                                for backward compatibility. There is no validation of this field and
                                                lifecycle hooks will fail at runtime when it is specified.
                                              properties:
                                                host:
                                                  description: 'Optional: Host name
                                                    to connect to, defaults to the
                                                    pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Number or name of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                              - port
                                              type: object
                                          type: object
                                      type: object
                                    livenessProbe:
                                      description: |-
                                        Periodic probe of container liveness.
                                        Container will be restarted if the probe fails.
                                        Cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      properties:
                                        exec:
                                          description: Exec specifies a command to
                                            execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        failureThreshold:
                                          description: |-
                                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                            Defaults to 3. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies a GRPC HealthCheckRequest.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              default: ""
                                              description: |-
                                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                                If this is not specified, the default behavior is defined by gRPC.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: |-
                                            Number of seconds after the container has started before liveness probes are initiated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: |-
                                            How often (in seconds) to perform the probe.
                                            Default to 10 seconds. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: |-
                                            Minimum consecutive successes for the probe to be considered successful after having failed.
                                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies a connection
                                            to a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: |-
                                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                            The grace period is the duration in seconds after the processes running in the pod are sent
                                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                                            Set this value longer than the expected cleanup time for your process.
                                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                            value overrides the value provided by the pod spec.
                                            Value must be non-negative integer. The value zero indicates stop immediately via
                                            the kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: |-
                                            Number of seconds after which the probe times out.
                                            Defaults to 1 second. Minimum value is 1.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                      type: object
                                    name:
                                      description: |-
                                        Name of the container specified as a DNS_LABEL.
                                        Each container in a pod must have a unique name (DNS_LABEL).
                                        Cannot be updated.
                                      type: string
                                    ports:
                                      description: |-
                                        List of ports to expose from the container. Not specifying a port here
                                        DOES NOT prevent that port from being exposed. Any port which is
                                        listening on the default "0.0.0.0" address inside a container will be
                                        accessible from the network.
                                        Modifying this array with strategic merge patch may corrupt the data.
                                        For more information See https://github.com/kubernetes/kubernetes/issues/108255.
                                        Cannot be updated.
                                      items:
                                        description: ContainerPort represents a network
                                          port in a single container.
                                        properties:
                                          containerPort:
                                            description: |-
                                              Number of port to expose on the pod's IP address.
                                              This must be a valid port number, 0 < x < 65536.
                                            format: int32
                                            type: integer
                                          hostIP:
                                            description: What host IP to bind the
                                              external port to.
                                            type: string
                                          hostPort:
                                            description: |-
                                              Number of port to expose on the host.
                                              If specified, this must be a valid port number, 0 < x < 65536.
                                              If HostNetwork is specified, this must match ContainerPort.
                                              Most containers do not need this.
                                            format: int32
                                            type: integer
                                          name:
                                            description: |-
                                              If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                                              named port in a pod must have a unique name. Name for the port that can be
                                              referred to by services.
                                            type: string
                                          protocol:
                                            default: TCP
                                            description: |-
                                              Protocol for port. Must be UDP, TCP, or SCTP.
                                              Defaults to "TCP".
                                            type: string
                                        required:
                                        - containerPort
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - containerPort
                                      - protocol
                                      x-kubernetes-list-type: map
                                    readinessProbe:
                                      description: |-
                                        Periodic probe of container service readiness.
                                        Container will be removed from service endpoints if the probe fails.
                                        Cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      properties:
                                        exec:
                                          description: Exec specifies a command to
                                            execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        failureThreshold:
                                          description: |-
                                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                            Defaults to 3. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies a GRPC HealthCheckRequest.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              default: ""
                                              description: |-
                                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                                If this is not specified, the default behavior is defined by gRPC.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: |-
                                            Number of seconds after the container has started before liveness probes are initiated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: |-
                                            How often (in seconds) to perform the probe.
                                            Default to 10 seconds. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: |-
                                            Minimum consecutive successes for the probe to be considered successful after having failed.
                                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies a connection
                                            to a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: |-
                                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                            The grace period is the duration in seconds after the processes running in the pod are sent
                                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                                            Set this value longer than the expected cleanup time for your process.
                                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                            value overrides the value provided by the pod spec.
                                            Value must be non-negative integer. The value zero indicates stop immediately via
                                            the kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: |-
                                            Number of seconds after which the probe times out.
                                            Defaults to 1 second. Minimum value is 1.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                      type: object
                                    resizePolicy:
                                      description: Resources resize policy for the
                                        container.
                                      items:
                                        description: ContainerResizePolicy represents
                                          resource resize policy for the container.
                                        properties:
                                          resourceName:
                                            description: |-
                                              Name of the resource to which this resource resize policy applies.
                                              Supported values: cpu, memory.
                                            type: string
                                          restartPolicy:
                                            description: |-
                                              Restart policy to apply when specified resource is resized.
                                              If not specified, it defaults to NotRequired.
                                            type: string
                                        required:
                                        - resourceName
                                        - restartPolicy
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    resources:
                                      description: |-
                                        Compute Resources required by this container.
                                        Cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                      properties:
                                        claims:
                                          description: |-
                                            Claims lists the names of resources, defined in spec.resourceClaims,
                                            that are used by this container.

                                            This is an alpha field and requires enabling the
                                            DynamicResourceAllocation feature gate.

                                            This field is immutable. It can only be set for containers.
                                          items:
                                            description: ResourceClaim references
                                              one entry in PodSpec.ResourceClaims.
                                            properties:
                                              name:
                                                description: |-
                                                  Name must match the name of one entry in pod.spec.resourceClaims of
                                                  the Pod where this field is used. It makes that resource available
                                                  inside a container.
                                                type: string
                                              request:
                                                description: |-
                                                  Request is the name chosen for a request in the referenced claim.
                                                  If empty, everything from the claim is made available, otherwise
                                                  only the result of this request.
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          type: array
                                          x-kubernetes-list-map-keys:
                                          - name
                                          x-kubernetes-list-type: map
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Limits describes the maximum amount of compute resources allowed.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Requests describes the minimum amount of compute resources required.
                                            If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                            otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                      type: object
                                    restartPolicy:
                                      description: |-
                                        RestartPolicy defines the restart behavior of individual containers in a pod.
                                        This field may only be set for init containers, and the only allowed value is "Always".
                                        For non-init containers or when this field is not specified,
                                        the restart behavior is defined by the Pod's restart policy and the container type.
                                        Setting the RestartPolicy as "Always" for the init container will have the following effect:
                                        this init container will be continually restarted on
                                        exit until all regular containers have terminated. Once all regular
                                        containers have completed, all init containers with restartPolicy "Always"
                                        will be shut down. This lifecycle differs from normal init containers and
                                        is often referred to as a "sidecar" container. Although this init
                                        container still starts in the init container sequence, it does not wait
                                        for the container to complete before proceeding to the next init
                                        container. Instead, the next init container starts immediately after this
                                        init container is started, or after any startupProbe has successfully
                                        completed.
                                      type: string
                                    securityContext:
                                      description: |-
                                        SecurityContext defines the security options the container should be run with.
                                        If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
                                        More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
                                      properties:
                                        allowPrivilegeEscalation:
                                          description: |-
                                            AllowPrivilegeEscalation controls whether a process can gain more
                                            privileges than its parent process. This bool directly controls if
                                            the no_new_privs flag will be set on the container process.
                                            AllowPrivilegeEscalation is true always when the container is:
                                            1) run as Privileged
                                            2) has CAP_SYS_ADMIN
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        appArmorProfile:
                                          description: |-
                                            appArmorProfile is the AppArmor options to use by this container. If set, this profile
                                            overrides the pod's appArmorProfile.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            localhostProfile:
                                              description: |-
                                                localhostProfile indicates a profile loaded on the node that should be used.
                                                The profile must be preconfigured on the node to work.
                                                Must match the loaded name of the profile.
                                                Must be set if and only if type is "Localhost".
                                              type: string
                                            type:
                                              description: |-
                                                type indicates which kind of AppArmor profile will be applied.
                                                Valid options are:
                                                  Localhost - a profile pre-loaded on the node.
                                                  RuntimeDefault - the container runtime's default profile.
                                                  Unconfined - no AppArmor enforcement.
                                              type: string
                                          required:
                                          - type
                                          type: object
                                        capabilities:
                                          description: |-
                                            The capabilities to add/drop when running containers.
                                            Defaults to the default set of capabilities granted by the container runtime.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            add:
                                              description: Added capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            drop:
                                              description: Removed capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        privileged:
                                          description: |-
                                            Run container in privileged mode.
                                            Processes in privileged containers are essentially equivalent to root on the host.
                                            Defaults to false.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        procMount:
                                          description: |-
                                            procMount denotes the type of proc mount to use for the containers.
                                            The default value is Default which uses the container runtime defaults for
                                            readonly paths and masked paths.
                                            This requires the ProcMountType feature flag to be enabled.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: string
                                        readOnlyRootFilesystem:
                                          description: |-
                                            Whether this container has a read-only root filesystem.
                                            Default is false.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        runAsGroup:
                                          description: |-
                                            The GID to run the entrypoint of the container process.
                                            Uses runtime default if unset.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        runAsNonRoot:
                                          description: |-
                                            Indicates that the container must run as a non-root user.
                                            If true, the Kubelet will validate the image at runtime to ensure that it
                                            does not run as UID 0 (root) and fail to start the container if it does.
                                            If unset or false, no such validation will be performed.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                          type: boolean
                                        runAsUser:
                                          description: |-
                                            The UID to run the entrypoint of the container process.
                                            Defaults to user specified in image metadata if unspecified.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        seLinuxOptions:
                                          description: |-
                                            The SELinux context to be applied to the container.
                                            If unspecified, the container runtime will allocate a random SELinux context for each
                                            container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            level:
                                              description: Level is SELinux level
                                                label that applies to the container.
                                              type: string
                                            role:
                                              description: Role is a SELinux role
                                                label that applies to the container.
                                              type: string
                                            type:
                                              description: Type is a SELinux type
                                                label that applies to the container.
                                              type: string
                                            user:
                                              description: User is a SELinux user
                                                label that applies to the container.
                                              type: string
                                          type: object
                                        seccompProfile:
                                          description: |-
                                            The seccomp options to use by this container. If seccomp options are
                                            provided at both the pod & container level, the container options
                                            override the pod options.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            localhostProfile:
                                              description: |-
                                                localhostProfile indicates a profile defined in a file on the node should be used.
                                                The profile must be preconfigured on the node to work.
                                                Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                                Must be set if type is "Localhost". Must NOT be set for any other type.
                                              type: string
                                            type:
                                              description: |-
                                                type indicates which kind of seccomp profile will be applied.
                                                Valid options are:

                                                Localhost - a profile defined in a file on the node should be used.
                                                RuntimeDefault - the container runtime default profile should be used.
                                                Unconfined - no profile should be applied.
                                              type: string
                                          required:
                                          - type
                                          type: object
                                        windowsOptions:
                                          description: |-
                                            The Windows specific settings applied to all containers.
                                            If unspecified, the options from the PodSecurityContext will be used.
                                            If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is linux.
                                          properties:
                                            gmsaCredentialSpec:
                                              description: |-
                                                GMSACredentialSpec is where the GMSA admission webhook
                                                (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                                GMSA credential spec named by the GMSACredentialSpecName field.
                                              type: string
                                            gmsaCredentialSpecName:
                                              description: GMSACredentialSpecName
                                                is the name of the GMSA credential
                                                spec to use.
                                              type: string
                                            hostProcess:
                                              description: |-
                                                HostProcess determines if a container should be run as a 'Host Process' container.
                                                All of a Pod's containers must have the same effective HostProcess value
                                                (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                                In addition, if HostProcess is true then HostNetwork must also be set to true.
                                              type: boolean
                                            runAsUserName:
                                              description: |-
                                                The UserName in Windows to run the entrypoint of the container process.
                                                Defaults to the user specified in image metadata if unspecified.
                                                May also be set in PodSecurityContext. If set in both SecurityContext and
                                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                                              type: string
                                          type: object
                                      type: object
                                    startupProbe:
                                      description: |-
                                        StartupProbe indicates that the Pod has successfully initialized.
                                        If specified, no other probes are executed until this completes successfully.
                                        If this probe fails, the Pod will be restarted, just as if the livenessProbe failed.
                                        This can be used to provide different probe parameters at the beginning of a Pod's lifecycle,
                                        when it might take a long time to load data or warm a cache, than during steady-state operation.
                                        This cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      properties:
                                        exec:
                                          description: Exec specifies a command to
                                            execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        failureThreshold:
                                          description: |-
                                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                            Defaults to 3. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies a GRPC HealthCheckRequest.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              default: ""
                                              description: |-
                                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                                If this is not specified, the default behavior is defined by gRPC.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: |-
                                            Number of seconds after the container has started before liveness probes are initiated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: |-
                                            How often (in seconds) to perform the probe.
                                            Default to 10 seconds. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: |-
                                            Minimum consecutive successes for the probe to be considered successful after having failed.
                                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies a connection
                                            to a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: |-
                                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                            The grace period is the duration in seconds after the processes running in the pod are sent
                                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                                            Set this value longer than the expected cleanup time for your process.
                                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                            value overrides the value provided by the pod spec.
                                            Value must be non-negative integer. The value zero indicates stop immediately via
                                            the kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: |-
                                            Number of seconds after which the probe times out.
                                            Defaults to 1 second. Minimum value is 1.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                      type: object
                                    stdin:
                                      description: |-
                                        Whether this container should allocate a buffer for stdin in the container runtime. If this
                                        is not set, reads from stdin in the container will always result in EOF.
                                        Default is false.
                                      type: boolean
                                    stdinOnce:
                                      description: |-
                                        Whether the container runtime should close the stdin channel after it has been opened by
                                        a single attach. When stdin is true the stdin stream will remain open across multiple attach
                                        sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
                                        first client attaches to stdin, and then remains open and accepts data until the client disconnects,
                                        at which time stdin is closed and remains closed until the container is restarted. If this
                                        flag is false, a container processes that reads from stdin will never receive an EOF.
                                        Default is false
                                      type: boolean
                                    terminationMessagePath:
                                      description: |-
                                        Optional: Path at which the file to which the container's termination message
                                        will be written is mounted into the container's filesystem.
                                        Message written is intended to be brief final status, such as an assertion failure message.
                                        Will be truncated by the node if greater than 4096 bytes. The total message length across
                                        all containers will be limited to 12kb.
                                        Defaults to /dev/termination-log.
                                        Cannot be updated.
                                      type: string
                                    terminationMessagePolicy:
                                      description: |-
                                        Indicate how the termination message should be populated. File will use the contents of
                                        terminationMessagePath to populate the container status message on both success and failure.
                                        FallbackToLogsOnError will use the last chunk of container log output if the termination
                                        message file is empty and the container exited with an error.
                                        The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
                                        Defaults to File.
                                        Cannot be updated.
                                      type: string
                                    tty:
                                      description: |-
                                        Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
                                        Default is false.
                                      type: boolean
                                    volumeDevices:
                                      description: volumeDevices is the list of block
                                        devices to be used by the container.
                                      items:
                                        description: volumeDevice describes a mapping
                                          of a raw block device within a container.
                                        properties:
                                          devicePath:
                                            description: devicePath is the path inside
                                              of the container that the device will
                                              be mapped to.
                                            type: string
                                          name:
                                            description: name must match the name
                                              of a persistentVolumeClaim in the pod
                                            type: string
                                        required:
                                        - devicePath
                                        - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - devicePath
                                      x-kubernetes-list-type: map
                                    volumeMounts:
                                      description: |-
                                        Pod volumes to mount into the container's filesystem.
                                        Cannot be updated.
                                      items:
                                        description: VolumeMount describes a mounting
                                          of a Volume within a container.
                                        properties:
                                          mountPath:
                                            description: |-
                                              Path within the container at which the volume should be mounted.  Must
                                              not contain ':'.
                                            type: string
                                          mountPropagation:
                                            description: |-
                                              mountPropagation determines how mounts are propagated from the host
                                              to container and the other way around.
                                              When not set, MountPropagationNone is used.
                                              This field is beta in 1.10.
                                              When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                                              (which defaults to None).
                                            type: string
                                          name:
                                            description: This must match the Name
                                              of a Volume.
                                            type: string
                                          readOnly:
                                            description: |-
                                              Mounted read-only if true, read-write otherwise (false or unspecified).
                                              Defaults to false.
                                            type: boolean
                                          recursiveReadOnly:
                                            description: |-
                                              RecursiveReadOnly specifies whether read-only mounts should be handled
                                              recursively.

                                              If ReadOnly is false, this field has no meaning and must be unspecified.

                                              If ReadOnly is true, and this field is set to Disabled, the mount is not made
                                              recursively read-only.  If this field is set to IfPossible, the mount is made
                                              recursively read-only, if it is supported by the container runtime.  If this
                                              field is set to Enabled, the mount is made recursively read-only if it is
                                              supported by the container runtime, otherwise the pod will not be started and
                                              an error will be generated to indicate the reason.

                                              If this field is set to IfPossible or Enabled, MountPropagation must be set to
                                              None (or be unspecified, which defaults to None).

                                              If this field is not specified, it is treated as an equivalent of Disabled.
                                            type: string
                                          subPath:
                                            description: |-
                                              Path within the volume from which the container's volume should be mounted.
                                              Defaults to "" (volume's root).
                                            type: string
                                          subPathExpr:
                                            description: |-
                                              Expanded path within the volume from which the container's volume should be mounted.
                                              Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                              Defaults to "" (volume's root).
                                              SubPathExpr and SubPath are mutually exclusive.
                                            type: string
                                        required:
                                        - mountPath
                                        - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - mountPath
                                      x-kubernetes-list-type: map
                                    workingDir:
                                      description: |-
                                        Container's working directory.
                                        If not specified, the container runtime's default will be used, which
                                        might be configured in the container image.
                                        Cannot be updated.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              dnsConfig:
                                description: |-
                                  Specifies the DNS parameters of a pod.
                                  Parameters specified here will be merged to the generated DNS
                                  configuration based on DNSPolicy.
                                properties:
                                  nameservers:
                                    description: |-
                                      A list of DNS name server IP addresses.
                                      This will be appended to the base nameservers generated from DNSPolicy.
                                      Duplicated nameservers will be removed.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  options:
                                    description: |-
                                      A list of DNS resolver options.
                                      This will be merged with the base options generated from DNSPolicy.
                                      Duplicated entries will be removed. Resolution options given in Options
                                      will override those that appear in the base DNSPolicy.
                                    items:
                                      description: PodDNSConfigOption defines DNS
                                        resolver options of a pod.
                                      properties:
                                        name:
                                          description: |-
                                            Name is this DNS resolver option's name.
                                            Required.
                                          type: string
                                        value:
                                          description: Value is this DNS resolver
                                            option's value.
                                          type: string
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  searches:
                                    description: |-
                                      A list of DNS search domains for host-name lookup.
                                      This will be appended to the base search paths generated from DNSPolicy.
                                      Duplicated search paths will be removed.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                              dnsPolicy:
                                description: |-
                                  Set DNS policy for the pod.
                                  Defaults to "ClusterFirst".
                                  Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'.
                                  DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.
                                  To have DNS options set along with hostNetwork, you have to specify DNS policy
                                  explicitly to 'ClusterFirstWithHostNet'.
                                type: string
                              enableServiceLinks:
                                description: |-
                                  EnableServiceLinks indicates whether information about services should be injected into pod's
                                  environment variables, matching the syntax of Docker links.
                                  Optional: Defaults to true.
                                type: boolean
                              ephemeralContainers:
                                description: |-
                                  List of ephemeral containers run in this pod. Ephemeral containers may be run in an existing
                                  pod to perform user-initiated actions such as debugging. This list cannot be specified when
                                  creating a pod, and it cannot be modified by updating the pod spec. In order to add an
                                  ephemeral container to an existing pod, use the pod's ephemeralcontainers subresource.
                                items:
                                  description: |-
                                    An EphemeralContainer is a temporary container that you may add to an existing Pod for
                                    user-initiated activities such as debugging. Ephemeral containers have no resource or
                                    scheduling guarantees, and they will not be restarted when they exit or when a Pod is
                                    removed or restarted. The kubelet may evict a Pod if an ephemeral container causes the
                                    Pod to exceed its resource allocation.

                                    To add an ephemeral container, use the ephemeralcontainers subresource of an existing
                                    Pod. Ephemeral containers may not be removed or restarted.
                                  properties:
                                    args:
                                      description: |-
                                        Arguments to the entrypoint.
                                        The image's CMD is used if this is not provided.
                                        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                        of whether the variable exists or not. Cannot be updated.
                                        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    command:
                                      description: |-
                                        Entrypoint array. Not executed within a shell.
                                        The image's ENTRYPOINT is used if this is not provided.
                                        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                        of whether the variable exists or not. Cannot be updated.
                                        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    env:
                                      description: |-
                                        List of environment variables to set in the container.
                                        Cannot be updated.
                                      items:
                                        description: EnvVar represents an environment
                                          variable present in a Container.
                                        properties:
                                          name:
                                            description: Name of the environment variable.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          value:
                                            description: |-
                                              Variable references $(VAR_NAME) are expanded
                                              using the previously defined environment variables in the container and
                                              any service environment variables. If a variable cannot be resolved,
                                              the reference in the input string will be unchanged. Double $$ are reduced
                                              to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                              "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                              Escaped references will never be expanded, regardless of whether the variable
                                              exists or not.
                                              Defaults to "".
                                            type: string
                                          valueFrom:
                                            description: Source for the environment
                                              variable's value. Cannot be used if
                                              value is not empty.
                                            properties:
                                              configMapKeyRef:
                                                description: Selects a key of a ConfigMap.
                                                properties:
                                                  key:
                                                    description: The key to select.
                                                    type: string
                                                  name:
                                                    default: ""
                                                    description: |-
                                                      Name of the referent.
                                                      This field is effectively required, but due to backwards compatibility is
                                                      allowed to be empty. Instances of this type with an empty value here are
                                                      almost certainly wrong.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      ConfigMap or its key must be
                                                      defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              fieldRef:
                                                description: |-
                                                  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                                  spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema
                                                      the FieldPath is written in
                                                      terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field
                                                      to select in the specified API
                                                      version.
                                                    type: string
                                                required:
                                                - fieldPath
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              resourceFieldRef:
                                                description: |-
                                                  Selects a resource of the container: only resources limits and requests
                                                  (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                                properties:
                                                  containerName:
                                                    description: 'Container name:
                                                      required for volumes, optional
                                                      for env vars'
                                                    type: string
                                                  divisor:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Specifies the output
                                                      format of the exposed resources,
                                                      defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource
                                                      to select'
                                                    type: string
                                                required:
                                                - resource
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              secretKeyRef:
                                                description: Selects a key of a secret
                                                  in the pod's namespace
                                                properties:
                                                  key:
                                                    description: The key of the secret
                                                      to select from.  Must be a valid
                                                      secret key.
                                                    type: string
                                                  name:
                                                    default: ""
                                                    description: |-
                                                      Name of the referent.
                                                      This field is effectively required, but due to backwards compatibility is
                                                      allowed to be empty. Instances of this type with an empty value here are
                                                      almost certainly wrong.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      Secret or its key must be defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                            type: object
                                        required:
                                        - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    envFrom:
                                      description: |-
                                        List of sources to populate environment variables in the container.
                                        The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                                        will be reported as an event when the container is starting. When a key exists in multiple
                                        sources, the value associated with the last source will take precedence.
                                        Values defined by an Env with a duplicate key will take precedence.
                                        Cannot be updated.
                                      items:
                                        description: EnvFromSource represents the
                                          source of a set of ConfigMaps
                                        properties:
                                          configMapRef:
                                            description: The ConfigMap to select from
                                            properties:
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          prefix:
                                            description: An optional identifier to
                                              prepend to each key in the ConfigMap.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          secretRef:
                                            description: The Secret to select from
                                            properties:
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    image:
                                      description: |-
                                        Container image name.
                                        More info: https://kubernetes.io/docs/concepts/containers/images
                                      type: string
                                    imagePullPolicy:
                                      description: |-
                                        Image pull policy.
                                        One of Always, Never, IfNotPresent.
                                        Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                                        Cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                                      type: string
                                    lifecycle:
                                      description: Lifecycle is not allowed for ephemeral
                                        containers.
                                      properties:
                                        postStart:
                                          description: |-
                                            PostStart is called immediately after a container is created. If the handler fails,
                                            the container is terminated and restarted according to its restart policy.
                                            Other management of the container blocks until the hook completes.
                                            More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                          properties:
                                            exec:
                                              description: Exec specifies a command
                                                to execute in the container.
                                              properties:
                                                command:
                                                  description: |-
                                                    Command is the command line to execute inside the container, the working directory for the
                                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                    a shell, you need to explicitly call out to that shell.
                                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies an HTTP
                                                GET request to perform.
                                              properties:
                                                host:
                                                  description: |-
                                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                                    "Host" in httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set
                                                    in the request. HTTP allows repeated
                                                    headers.
                                                  items:
                                                    description: HTTPHeader describes
                                                      a custom header to be used in
                                                      HTTP probes
                                                    properties:
                                                      name:
                                                        description: |-
                                                          The header field name.
                                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                        type: string
                                                      value:
                                                        description: The header field
                                                          value
                                                        type: string
                                                    required:
                                                    - name
                                                    - value
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                path:
                                                  description: Path to access on the
                                                    HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Name or number of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: |-
                                                    Scheme to use for connecting to the host.
                                                    Defaults to HTTP.
                                                  type: string
                                              required:
                                              - port
                                              type: object
                                            sleep:
                                              description: Sleep represents a duration
                                                that the container should sleep.
                                              properties:
                                                seconds:
                                                  description: Seconds is the number
                                                    of seconds to sleep.
                                                  format: int64
                                                  type: integer
                                              required:
                                              - seconds
                                              type: object
                                            tcpSocket:
                                              description: |-
                                                Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                                for backward compatibility. There is no validation of this field and
                                                lifecycle hooks will fail at runtime when it is specified.
                                              properties:
                                                host:
                                                  description: 'Optional: Host name
                                                    to connect to, defaults to the
                                                    pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Number or name of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                              - port
                                              type: object
                                          type: object
                                        preStop:
                                          description: |-
                                            PreStop is called immediately before a container is terminated due to an
                                            API request or management event such as liveness/startup probe failure,
                                            preemption, resource contention, etc. The handler is not called if the
                                            container crashes or exits. The Pod's termination grace period countdown begins before the
                                            PreStop hook is executed. Regardless of the outcome of the handler, the
                                            container will eventually terminate within the Pod's termination grace
                                            period (unless delayed by finalizers). Other management of the container blocks until the hook completes
                                            or until the termination grace period is reached.
                                            More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                          properties:
                                            exec:
                                              description: Exec specifies a command
                                                to execute in the container.
                                              properties:
                                                command:
                                                  description: |-
                                                    Command is the command line to execute inside the container, the working directory for the
                                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                    a shell, you need to explicitly call out to that shell.
                                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies an HTTP
                                                GET request to perform.
                                              properties:
                                                host:
                                                  description: |-
                                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                                    "Host" in httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set
                                                    in the request. HTTP allows repeated
                                                    headers.
                                                  items:
                                                    description: HTTPHeader describes
                                                      a custom header to be used in
                                                      HTTP probes
                                                    properties:
                                                      name:
                                                        description: |-
                                                          The header field name.
                                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                        type: string
                                                      value:
                                                        description: The header field
                                                          value
                                                        type: string
                                                    required:
                                                    - name
                                                    - value
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                path:
                                                  description: Path to access on the
                                                    HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Name or number of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: |-
                                                    Scheme to use for connecting to the host.
                                                    Defaults to HTTP.
                                                  type: string
                                              required:
                                              - port
                                              type: object
                                            sleep:
                                              description: Sleep represents a duration
                                                that the container should sleep.
                                              properties:
                                                seconds:
                                                  description: Seconds is the number
                                                    of seconds to sleep.
                                                  format: int64
                                                  type: integer
                                              required:
                                              - seconds
                                              type: object
                                            tcpSocket:
                                              description: |-
                                                Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                                for backward compatibility. There is no validation of this field and
                                                lifecycle hooks will fail at runtime when it is specified.
                                              properties:
                                                host:
                                                  description: 'Optional: Host name
                                                    to connect to, defaults to the
                                                    pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Number or name of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                              - port
                                              type: object
                                          type: object
                                      type: object
                                    livenessProbe:
                                      description: Probes are not allowed for ephemeral
                                        containers.
                                      properties:
                                        exec:
                                          description: Exec specifies a command to
                                            execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        failureThreshold:
                                          description: |-
                                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                            Defaults to 3. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies a GRPC HealthCheckRequest.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              default: ""
                                              description: |-
                                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                                If this is not specified, the default behavior is defined by gRPC.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: |-
                                            Number of seconds after the container has started before liveness probes are initiated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: |-
                                            How often (in seconds) to perform the probe.
                                            Default to 10 seconds. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: |-
                                            Minimum consecutive successes for the probe to be considered successful after having failed.
                                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies a connection
                                            to a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: |-
                                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                            The grace period is the duration in seconds after the processes running in the pod are sent
                                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                                            Set this value longer than the expected cleanup time for your process.
                                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                            value overrides the value provided by the pod spec.
                                            Value must be non-negative integer. The value zero indicates stop immediately via
                                            the kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: |-
                                            Number of seconds after which the probe times out.
                                            Defaults to 1 second. Minimum value is 1.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                      type: object
                                    name:
                                      description: |-
                                        Name of the ephemeral container specified as a DNS_LABEL.
                                        This name must be unique among all containers, init containers and ephemeral containers.
                                      type: string
                                    ports:
                                      description: Ports are not allowed for ephemeral
                                        containers.
                                      items:
                                        description: ContainerPort represents a network
                                          port in a single container.
                                        properties:
                                          containerPort:
                                            description: |-
                                              Number of port to expose on the pod's IP address.
                                              This must be a valid port number, 0 < x < 65536.
                                            format: int32
                                            type: integer
                                          hostIP:
                                            description: What host IP to bind the
                                              external port to.
                                            type: string
                                          hostPort:
                                            description: |-
                                              Number of port to expose on the host.
                                              If specified, this must be a valid port number, 0 < x < 65536.
                                              If HostNetwork is specified, this must match ContainerPort.
                                              Most containers do not need this.
                                            format: int32
                                            type: integer
                                          name:
                                            description: |-
                                              If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                                              named port in a pod must have a unique name. Name for the port that can be
                                              referred to by services.
                                            type: string
                                          protocol:
                                            default: TCP
                                            description: |-
                                              Protocol for port. Must be UDP, TCP, or SCTP.
                                              Defaults to "TCP".
                                            type: string
                                        required:
                                        - containerPort
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - containerPort
                                      - protocol
                                      x-kubernetes-list-type: map
                                    readinessProbe:
                                      description: Probes are not allowed for ephemeral
                                        containers.
                                      properties:
                                        exec:
                                          description: Exec specifies a command to
                                            execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        failureThreshold:
                                          description: |-
                                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                            Defaults to 3. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies a GRPC HealthCheckRequest.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              default: ""
                                              description: |-
                                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                                If this is not specified, the default behavior is defined by gRPC.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: |-
                                            Number of seconds after the container has started before liveness probes are initiated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: |-
                                            How often (in seconds) to perform the probe.
                                            Default to 10 seconds. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: |-
                                            Minimum consecutive successes for the probe to be considered successful after having failed.
                                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies a connection
                                            to a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: |-
                                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                            The grace period is the duration in seconds after the processes running in the pod are sent
                                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                                            Set this value longer than the expected cleanup time for your process.
                                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                            value overrides the value provided by the pod spec.
                                            Value must be non-negative integer. The value zero indicates stop immediately via
                                            the kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: |-
                                            Number of seconds after which the probe times out.
                                            Defaults to 1 second. Minimum value is 1.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                      type: object
                                    resizePolicy:
                                      description: Resources resize policy for the
                                        container.
                                      items:
                                        description: ContainerResizePolicy represents
                                          resource resize policy for the container.
                                        properties:
                                          resourceName:
                                            description: |-
                                              Name of the resource to which this resource resize policy applies.
                                              Supported values: cpu, memory.
                                            type: string
                                          restartPolicy:
                                            description: |-
                                              Restart policy to apply when specified resource is resized.
                                              If not specified, it defaults to NotRequired.
                                            type: string
                                        required:
                                        - resourceName
                                        - restartPolicy
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    resources:
                                      description: |-
                                        Resources are not allowed for ephemeral containers. Ephemeral containers use spare resources
                                        already allocated to the pod.
                                      properties:
                                        claims:
                                          description: |-
                                            Claims lists the names of resources, defined in spec.resourceClaims,
                                            that are used by this container.

                                            This is an alpha field and requires enabling the
                                            DynamicResourceAllocation feature gate.

                                            This field is immutable. It can only be set for containers.
                                          items:
                                            description: ResourceClaim references
                                              one entry in PodSpec.ResourceClaims.
                                            properties:
                                              name:
                                                description: |-
                                                  Name must match the name of one entry in pod.spec.resourceClaims of
                                                  the Pod where this field is used. It makes that resource available
                                                  inside a container.
                                                type: string
                                              request:
                                                description: |-
                                                  Request is the name chosen for a request in the referenced claim.
                                                  If empty, everything from the claim is made available, otherwise
                                                  only the result of this request.
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          type: array
                                          x-kubernetes-list-map-keys:
                                          - name
                                          x-kubernetes-list-type: map
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Limits describes the maximum amount of compute resources allowed.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Requests describes the minimum amount of compute resources required.
                                            If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                            otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                      type: object
                                    restartPolicy:
                                      description: |-
                                        Restart policy for the container to manage the restart behavior of each
                                        container within a pod.
                                        This may only be set for init containers. You cannot set this field on
                                        ephemeral containers.
                                      type: string
                                    securityContext:
                                      description: |-
                                        Optional: SecurityContext defines the security options the ephemeral container should be run with.
                                        If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
                                      properties:
                                        allowPrivilegeEscalation:
                                          description: |-
                                            AllowPrivilegeEscalation controls whether a process can gain more
                                            privileges than its parent process. This bool directly controls if
                                            the no_new_privs flag will be set on the container process.
                                            AllowPrivilegeEscalation is true always when the container is:
                                            1) run as Privileged
                                            2) has CAP_SYS_ADMIN
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        appArmorProfile:
                                          description: |-
                                            appArmorProfile is the AppArmor options to use by this container. If set, this profile
                                            overrides the pod's appArmorProfile.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            localhostProfile:
                                              description: |-
                                                localhostProfile indicates a profile loaded on the node that should be used.
                                                The profile must be preconfigured on the node to work.
                                                Must match the loaded name of the profile.
                                                Must be set if and only if type is "Localhost".
                                              type: string
                                            type:
                                              description: |-
                                                type indicates which kind of AppArmor profile will be applied.
                                                Valid options are:
                                                  Localhost - a profile pre-loaded on the node.
                                                  RuntimeDefault - the container runtime's default profile.
                                                  Unconfined - no AppArmor enforcement.
                                              type: string
                                          required:
                                          - type
                                          type: object
                                        capabilities:
                                          description: |-
                                            The capabilities to add/drop when running containers.
                                            Defaults to the default set of capabilities granted by the container runtime.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            add:
                                              description: Added capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            drop:
                                              description: Removed capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        privileged:
                                          description: |-
                                            Run container in privileged mode.
                                            Processes in privileged containers are essentially equivalent to root on the host.
                                            Defaults to false.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        procMount:
                                          description: |-
                                            procMount denotes the type of proc mount to use for the containers.
                                            The default value is Default which uses the container runtime defaults for
                                            readonly paths and masked paths.
                                            This requires the ProcMountType feature flag to be enabled.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: string
                                        readOnlyRootFilesystem:
                                          description: |-
                                            Whether this container has a read-only root filesystem.
                                            Default is false.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        runAsGroup:
                                          description: |-
                                            The GID to run the entrypoint of the container process.
                                            Uses runtime default if unset.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        runAsNonRoot:
                                          description: |-
                                            Indicates that the container must run as a non-root user.
                                            If true, the Kubelet will validate the image at runtime to ensure that it
                                            does not run as UID 0 (root) and fail to start the container if it does.
                                            If unset or false, no such validation will be performed.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                          type: boolean
                                        runAsUser:
                                          description: |-
                                            The UID to run the entrypoint of the container process.
                                            Defaults to user specified in image metadata if unspecified.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        seLinuxOptions:
                                          description: |-
                                            The SELinux context to be applied to the container.
                                            If unspecified, the container runtime will allocate a random SELinux context for each
                                            container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            level:
                                              description: Level is SELinux level
                                                label that applies to the container.
                                              type: string
                                            role:
                                              description: Role is a SELinux role
                                                label that applies to the container.
                                              type: string
                                            type:
                                              description: Type is a SELinux type
                                                label that applies to the container.
                                              type: string
                                            user:
                                              description: User is a SELinux user
                                                label that applies to the container.
                                              type: string
                                          type: object
                                        seccompProfile:
                                          description: |-
                                            The seccomp options to use by this container. If seccomp options are
                                            provided at both the pod & container level, the container options
                                            override the pod options.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            localhostProfile:
                                              description: |-
                                                localhostProfile indicates a profile defined in a file on the node should be used.
                                                The profile must be preconfigured on the node to work.
                                                Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                                Must be set if type is "Localhost". Must NOT be set for any other type.
                                              type: string
                                            type:
                                              description: |-
                                                type indicates which kind of seccomp profile will be applied.
                                                Valid options are:

                                                Localhost - a profile defined in a file on the node should be used.
                                                RuntimeDefault - the container runtime default profile should be used.
                                                Unconfined - no profile should be applied.
                                              type: string
                                          required:
                                          - type
                                          type: object
                                        windowsOptions:
                                          description: |-
                                            The Windows specific settings applied to all containers.
                                            If unspecified, the options from the PodSecurityContext will be used.
                                            If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is linux.
                                          properties:
                                            gmsaCredentialSpec:
                                              description: |-
                                                GMSACredentialSpec is where the GMSA admission webhook
                                                (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                                GMSA credential spec named by the GMSACredentialSpecName field.
                                              type: string
                                            gmsaCredentialSpecName:
                                              description: GMSACredentialSpecName
                                                is the name of the GMSA credential
                                                spec to use.
                                              type: string
                                            hostProcess:
                                              description: |-
                                                HostProcess determines if a container should be run as a 'Host Process' container.
                                                All of a Pod's containers must have the same effective HostProcess value
                                                (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                                In addition, if HostProcess is true then HostNetwork must also be set to true.
                                              type: boolean
                                            runAsUserName:
                                              description: |-
                                                The UserName in Windows to run the entrypoint of the container process.
                                                Defaults to the user specified in image metadata if unspecified.
                                                May also be set in PodSecurityContext. If set in both SecurityContext and
                                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                                              type: string
                                          type: object
                                      type: object
                                    startupProbe:
                                      description: Probes are not allowed for ephemeral
                                        containers.
                                      properties:
                                        exec:
                                          description: Exec specifies a command to
                                            execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        failureThreshold:
                                          description: |-
                                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                            Defaults to 3. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies a GRPC HealthCheckRequest.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              default: ""
                                              description: |-
                                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                                If this is not specified, the default behavior is defined by gRPC.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: |-
                                            Number of seconds after the container has started before liveness probes are initiated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: |-
                                            How often (in seconds) to perform the probe.
                                            Default to 10 seconds. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: |-
                                            Minimum consecutive successes for the probe to be considered successful after having failed.
                                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies a connection
                                            to a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: |-
                                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                            The grace period is the duration in seconds after the processes running in the pod are sent
                                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                                            Set this value longer than the expected cleanup time for your process.
                                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                            value overrides the value provided by the pod spec.
                                            Value must be non-negative integer. The value zero indicates stop immediately via
                                            the kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: |-
                                            Number of seconds after which the probe times out.
                                            Defaults to 1 second. Minimum value is 1.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                      type: object
                                    stdin:
                                      description: |-
                                        Whether this container should allocate a buffer for stdin in the container runtime. If this
                                        is not set, reads from stdin in the container will always result in EOF.
                                        Default is false.
                                      type: boolean
                                    stdinOnce:
                                      description: |-
                                        Whether the container runtime should close the stdin channel after it has been opened by
                                        a single attach. When stdin is true the stdin stream will remain open across multiple attach
                                        sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
                                        first client attaches to stdin, and then remains open and accepts data until the client disconnects,
                                        at which time stdin is closed and remains closed until the container is restarted. If this
                                        flag is false, a container processes that reads from stdin will never receive an EOF.
                                        Default is false
                                      type: boolean
                                    targetContainerName:
                                      description: |-
                                        If set, the name of the container from PodSpec that this ephemeral container targets.
                                        The ephemeral container will be run in the namespaces (IPC, PID, etc) of this container.
                                        If not set then the ephemeral container uses the namespaces configured in the Pod spec.

                                        The container runtime must implement support for this feature. If the runtime does not
                                        support namespace targeting then the result of setting this field is undefined.
                                      type: string
                                    terminationMessagePath:
                                      description: |-
                                        Optional: Path at which the file to which the container's termination message
                                        will be written is mounted into the container's filesystem.
                                        Message written is intended to be brief final status, such as an assertion failure message.
                                        Will be truncated by the node if greater than 4096 bytes. The total message length across
                                        all containers will be limited to 12kb.
                                        Defaults to /dev/termination-log.
                                        Cannot be updated.
                                      type: string
                                    terminationMessagePolicy:
                                      description: |-
                                        Indicate how the termination message should be populated. File will use the contents of
                                        terminationMessagePath to populate the container status message on both success and failure.
                                        FallbackToLogsOnError will use the last chunk of container log output if the termination
                                        message file is empty and the container exited with an error.
                                        The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
                                        Defaults to File.
                                        Cannot be updated.
                                      type: string
                                    tty:
                                      description: |-
                                        Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
                                        Default is false.
                                      type: boolean
                                    volumeDevices:
                                      description: volumeDevices is the list of block
                                        devices to be used by the container.
                                      items:
                                        description: volumeDevice describes a mapping
                                          of a raw block device within a container.
                                        properties:
                                          devicePath:
                                            description: devicePath is the path inside
                                              of the container that the device will
                                              be mapped to.
                                            type: string
                                          name:
                                            description: name must match the name
                                              of a persistentVolumeClaim in the pod
                                            type: string
                                        required:
                                        - devicePath
                                        - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - devicePath
                                      x-kubernetes-list-type: map
                                    volumeMounts:
                                      description: |-
                                        Pod volumes to mount into the container's filesystem. Subpath mounts are not allowed for ephemeral containers.
                                        Cannot be updated.
                                      items:
                                        description: VolumeMount describes a mounting
                                          of a Volume within a container.
                                        properties:
                                          mountPath:
                                            description: |-
                                              Path within the container at which the volume should be mounted.  Must
                                              not contain ':'.
                                            type: string
                                          mountPropagation:
                                            description: |-
                                              mountPropagation determines how mounts are propagated from the host
                                              to container and the other way around.
                                              When not set, MountPropagationNone is used.
                                              This field is beta in 1.10.
                                              When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                                              (which defaults to None).
                                            type: string
                                          name:
                                            description: This must match the Name
                                              of a Volume.
                                            type: string
                                          readOnly:
                                            description: |-
                                              Mounted read-only if true, read-write otherwise (false or unspecified).
                                              Defaults to false.
                                            type: boolean
                                          recursiveReadOnly:
                                            description: |-
                                              RecursiveReadOnly specifies whether read-only mounts should be handled
                                              recursively.

                                              If ReadOnly is false, this field has no meaning and must be unspecified.

                                              If ReadOnly is true, and this field is set to Disabled, the mount is not made
                                              recursively read-only.  If this field is set to IfPossible, the mount is made
                                              recursively read-only, if it is supported by the container runtime.  If this
                                              field is set to Enabled, the mount is made recursively read-only if it is
                                              supported by the container runtime, otherwise the pod will not be started and
                                              an error will be generated to indicate the reason.

                                              If this field is set to IfPossible or Enabled, MountPropagation must be set to
                                              None (or be unspecified, which defaults to None).

                                              If this field is not specified, it is treated as an equivalent of Disabled.
                                            type: string
                                          subPath:
                                            description: |-
                                              Path within the volume from which the container's volume should be mounted.
                                              Defaults to "" (volume's root).
                                            type: string
                                          subPathExpr:
                                            description: |-
                                              Expanded path within the volume from which the container's volume should be mounted.
                                              Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                              Defaults to "" (volume's root).
                                              SubPathExpr and SubPath are mutually exclusive.
                                            type: string
                                        required:
                                        - mountPath
                                        - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - mountPath
                                      x-kubernetes-list-type: map
                                    workingDir:
                                      description: |-
                                        Container's working directory.
                                        If not specified, the container runtime's default will be used, which
                                        might be configured in the container image.
                                        Cannot be updated.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              hostAliases:
                                description: |-
                                  HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts
                                  file if specified.
                                items:
                                  description: |-
                                    HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                                    pod's hosts file.
                                  properties:
                                    hostnames:
                                      description: Hostnames for the above IP address.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    ip:
                                      description: IP address of the host file entry.
                                      type: string
                                  required:
                                  - ip
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - ip
                                x-kubernetes-list-type: map
                              hostIPC:
                                description: |-
                                  Use the host's ipc namespace.
                                  Optional: Default to false.
                                type: boolean
                              hostNetwork:
                                description: |-
                                  Host networking requested for this pod. Use the host's network namespace.
                                  If this option is set, the ports that will be used must be specified.
                                  Default to false.
                                type: boolean
                              hostPID:
                                description: |-
                                  Use the host's pid namespace.
                                  Optional: Default to false.
                                type: boolean
                              hostUsers:
                                description: |-
                                  Use the host's user namespace.
                                  Optional: Default to true.
                                  If set to true or not present, the pod will be run in the host user namespace, useful
                                  for when the pod needs a feature only available to the host user namespace, such as
                                  loading a kernel module with CAP_SYS_MODULE.
                                  When set to false, a new userns is created for the pod. Setting false is useful for
                                  mitigating container breakout vulnerabilities even allowing users to run their
                                  containers as root without actually having root privileges on the host.
                                  This field is alpha-level and is only honored by servers that enable the UserNamespacesSupport feature.
                                type: boolean
                              hostname:
                                description: |-
                                  Specifies the hostname of the Pod
                                  If not specified, the pod's hostname will be set to a system-defined value.
                                type: string
                              imagePullSecrets:
                                description: |-
                                  ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.
                                  If specified, these secrets will be passed to individual puller implementations for them to use.
                                  More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod
                                items:
                                  description: |-
                                    LocalObjectReference contains enough information to let you locate the
                                    referenced object inside the same namespace.
                                  properties:
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              initContainers:
                                description: |-
                                  List of initialization containers belonging to the pod.
                                  Init containers are executed in order prior to containers being started. If any
                                  init container fails, the pod is considered to have failed and is handled according
                                  to its restartPolicy. The name for an init container or normal container must be
                                  unique among all containers.
                                  Init containers may not have Lifecycle actions, Readiness probes, Liveness probes, or Startup probes.
                                  The resourceRequirements of an init container are taken into account during scheduling
                                  by finding the highest request/limit for each resource type, and then using the max of
                                  of that value or the sum of the normal containers. Limits are applied to init containers
                                  in a similar fashion.
                                  Init containers cannot currently be added or removed.
                                  Cannot be updated.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
                                items:
                                  description: A single application container that
                                    you want to run within a pod.
                                  properties:
                                    args:
                                      description: |-
                                        Arguments to the entrypoint.
                                        The container image's CMD is used if this is not provided.
                                        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                        of whether the variable exists or not. Cannot be updated.
                                        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    command:
                                      description: |-
                                        Entrypoint array. Not executed within a shell.
                                        The container image's ENTRYPOINT is used if this is not provided.
                                        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                        of whether the variable exists or not. Cannot be updated.
                                        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    env:
                                      description: |-
                                        List of environment variables to set in the container.
                                        Cannot be updated.
                                      items:
                                        description: EnvVar represents an environment
                                          variable present in a Container.
                                        properties:
                                          name:
                                            description: Name of the environment variable.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          value:
                                            description: |-
                                              Variable references $(VAR_NAME) are expanded
                                              using the previously defined environment variables in the container and
                                              any service environment variables. If a variable cannot be resolved,
                                              the reference in the input string will be unchanged. Double $$ are reduced
                                              to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                              "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                              Escaped references will never be expanded, regardless of whether the variable
                                              exists or not.
                                              Defaults to "".
                                            type: string
                                          valueFrom:
                                            description: Source for the environment
                                              variable's value. Cannot be used if
                                              value is not empty.
                                            properties:
                                              configMapKeyRef:
                                                description: Selects a key of a ConfigMap.
                                                properties:
                                                  key:
                                                    description: The key to select.
                                                    type: string
                                                  name:
                                                    default: ""
                                                    description: |-
                                                      Name of the referent.
                                                      This field is effectively required, but due to backwards compatibility is
                                                      allowed to be empty. Instances of this type with an empty value here are
                                                      almost certainly wrong.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      ConfigMap or its key must be
                                                      defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              fieldRef:
                                                description: |-
                                                  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                                  spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema
                                                      the FieldPath is written in
                                                      terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field
                                                      to select in the specified API
                                                      version.
                                                    type: string
                                                required:
                                                - fieldPath
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              resourceFieldRef:
                                                description: |-
                                                  Selects a resource of the container: only resources limits and requests
                                                  (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                                properties:
                                                  containerName:
                                                    description: 'Container name:
                                                      required for volumes, optional
                                                      for env vars'
                                                    type: string
                                                  divisor:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Specifies the output
                                                      format of the exposed resources,
                                                      defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource
                                                      to select'
                                                    type: string
                                                required:
                                                - resource
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              secretKeyRef:
                                                description: Selects a key of a secret
                                                  in the pod's namespace
                                                properties:
                                                  key:
                                                    description: The key of the secret
                                                      to select from.  Must be a valid
                                                      secret key.
                                                    type: string
                                                  name:
                                                    default: ""
                                                    description: |-
                                                      Name of the referent.
                                                      This field is effectively required, but due to backwards compatibility is
                                                      allowed to be empty. Instances of this type with an empty value here are
                                                      almost certainly wrong.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      Secret or its key must be defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                            type: object
                                        required:
                                        - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    envFrom:
                                      description: |-
                                        List of sources to populate environment variables in the container.
                                        The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                                        will be reported as an event when the container is starting. When a key exists in multiple
                                        sources, the value associated with the last source will take precedence.
                                        Values defined by an Env with a duplicate key will take precedence.
                                        Cannot be updated.
                                      items:
                                        description: EnvFromSource represents the
                                          source of a set of ConfigMaps
                                        properties:
                                          configMapRef:
                                            description: The ConfigMap to select from
                                            properties:
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          prefix:
                                            description: An optional identifier to
                                              prepend to each key in the ConfigMap.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          secretRef:
                                            description: The Secret to select from
                                            properties:
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    image:
                                      description: |-
                                        Container image name.
                                        More info: https://kubernetes.io/docs/concepts/containers/images
                                        This field is optional to allow higher level config management to default or override
                                        container images in workload controllers like Deployments and StatefulSets.
                                      type: string
                                    imagePullPolicy:
                                      description: |-
                                        Image pull policy.
                                        One of Always, Never, IfNotPresent.
                                        Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                                        Cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                                      type: string
                                    lifecycle:
                                      description: |-
                                        Actions that the management system should take in response to container lifecycle events.
                                        Cannot be updated.
                                      properties:
                                        postStart:
                                          description: |-
                                            PostStart is called immediately after a container is created. If the handler fails,
                                            the container is terminated and restarted according to its restart policy.
                                            Other management of the container blocks until the hook completes.
                                            More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                          properties:
                                            exec:
                                              description: Exec specifies a command
                                                to execute in the container.
                                              properties:
                                                command:
                                                  description: |-
                                                    Command is the command line to execute inside the container, the working directory for the
                                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                    a shell, you need to explicitly call out to that shell.
                                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies an HTTP
                                                GET request to perform.
                                              properties:
                                                host:
                                                  description: |-
                                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                                    "Host" in httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set
                                                    in the request. HTTP allows repeated
                                                    headers.
                                                  items:
                                                    description: HTTPHeader describes
                                                      a custom header to be used in
                                                      HTTP probes
                                                    properties:
                                                      name:
                                                        description: |-
                                                          The header field name.
                                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                        type: string
                                                      value:
                                                        description: The header field
                                                          value
                                                        type: string
                                                    required:
                                                    - name
                                                    - value
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                path:
                                                  description: Path to access on the
                                                    HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Name or number of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: |-
                                                    Scheme to use for connecting to the host.
                                                    Defaults to HTTP.
                                                  type: string
                                              required:
                                              - port
                                              type: object
                                            sleep:
                                              description: Sleep represents a duration
                                                that the container should sleep.
                                              properties:
                                                seconds:
                                                  description: Seconds is the number
                                                    of seconds to sleep.
                                                  format: int64
                                                  type: integer
                                              required:
                                              - seconds
                                              type: object
                                            tcpSocket:
                                              description: |-
                                                Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                                for backward compatibility. There is no validation of this field and
                                                lifecycle hooks will fail at runtime when it is specified.
                                              properties:
                                                host:
                                                  description: 'Optional: Host name
                                                    to connect to, defaults to the
                                                    pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Number or name of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                              - port
                                              type: object
                                          type: object
                                        preStop:
                                          description: |-
                                            PreStop is called immediately before a container is terminated due to an
                                            API request or management event such as liveness/startup probe failure,
                                            preemption, resource contention, etc. The handler is not called if the
                                            container crashes or exits. The Pod's termination grace period countdown begins before the
                                            PreStop hook is executed. Regardless of the outcome of the handler, the
                                            container will eventually terminate within the Pod's termination grace
                                            period (unless delayed by finalizers). Other management of the container blocks until the hook completes
                                            or until the termination grace period is reached.
                                            More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                          properties:
                                            exec:
                                              description: Exec specifies a command
                                                to execute in the container.
                                              properties:
                                                command:
                                                  description: |-
                                                    Command is the command line to execute inside the container, the working directory for the
                                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                    a shell, you need to explicitly call out to that shell.
                                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies an HTTP
                                                GET request to perform.
                                              properties:
                                                host:
                                                  description: |-
                                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                                    "Host" in httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set
                                                    in the request. HTTP allows repeated
                                                    headers.
                                                  items:
                                                    description: HTTPHeader describes
                                                      a custom header to be used in
                                                      HTTP probes
                                                    properties:
                                                      name:
                                                        description: |-
                                                          The header field name.
                                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                        type: string
                                                      value:
                                                        description: The header field
                                                          value
                                                        type: string
                                                    required:
                                                    - name
                                                    - value
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                path:
                                                  description: Path to access on the
                                                    HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Name or number of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: |-
                                                    Scheme to use for connecting to the host.
                                                    Defaults to HTTP.
                                                  type: string
                                              required:
                                              - port
                                              type: object
                                            sleep:
                                              description: Sleep represents a duration
                                                that the container should sleep.
                                              properties:
                                                seconds:
                                                  description: Seconds is the number
                                                    of seconds to sleep.
                                                  format: int64
                                                  type: integer
                                              required:
                                              - seconds
                                              type: object
                                            tcpSocket:
                                              description: |-
                                                Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                                for backward compatibility. There is no validation of this field and
                                                lifecycle hooks will fail at runtime when it is specified.
                                              properties:
                                                host:
                                                  description: 'Optional: Host name
                                                    to connect to, defaults to the
                                                    pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: |-
                                                    Number or name of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                              - port
                                              type: object
                                          type: object
                                      type: object
                                    livenessProbe:
                                      description: |-
                                        Periodic probe of container liveness.
                                        Container will be restarted if the probe fails.
                                        Cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      properties:
                                        exec:
                                          description: Exec specifies a command to
                                            execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        failureThreshold:
                                          description: |-
                                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                            Defaults to 3. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies a GRPC HealthCheckRequest.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              default: ""
                                              description: |-
                                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                                If this is not specified, the default behavior is defined by gRPC.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: |-
                                            Number of seconds after the container has started before liveness probes are initiated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: |-
                                            How often (in seconds) to perform the probe.
                                            Default to 10 seconds. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: |-
                                            Minimum consecutive successes for the probe to be considered successful after having failed.
                                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies a connection
                                            to a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: |-
                                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                            The grace period is the duration in seconds after the processes running in the pod are sent
                                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                                            Set this value longer than the expected cleanup time for your process.
                                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                            value overrides the value provided by the pod spec.
                                            Value must be non-negative integer. The value zero indicates stop immediately via
                                            the kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: |-
                                            Number of seconds after which the probe times out.
                                            Defaults to 1 second. Minimum value is 1.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                      type: object
                                    name:
                                      description: |-
                                        Name of the container specified as a DNS_LABEL.
                                        Each container in a pod must have a unique name (DNS_LABEL).
                                        Cannot be updated.
                                      type: string
                                    ports:
                                      description: |-
                                        List of ports to expose from the container. Not specifying a port here
                                        DOES NOT prevent that port from being exposed. Any port which is
                                        listening on the default "0.0.0.0" address inside a container will be
                                        accessible from the network.
                                        Modifying this array with strategic merge patch may corrupt the data.
                                        For more information See https://github.com/kubernetes/kubernetes/issues/108255.
                                        Cannot be updated.
                                      items:
                                        description: ContainerPort represents a network
                                          port in a single container.
                                        properties:
                                          containerPort:
                                            description: |-
                                              Number of port to expose on the pod's IP address.
                                              This must be a valid port number, 0 < x < 65536.
                                            format: int32
                                            type: integer
                                          hostIP:
                                            description: What host IP to bind the
                                              external port to.
                                            type: string
                                          hostPort:
                                            description: |-
                                              Number of port to expose on the host.
                                              If specified, this must be a valid port number, 0 < x < 65536.
                                              If HostNetwork is specified, this must match ContainerPort.
                                              Most containers do not need this.
                                            format: int32
                                            type: integer
                                          name:
                                            description: |-
                                              If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                                              named port in a pod must have a unique name. Name for the port that can be
                                              referred to by services.
                                            type: string
                                          protocol:
                                            default: TCP
                                            description: |-
                                              Protocol for port. Must be UDP, TCP, or SCTP.
                                              Defaults to "TCP".
                                            type: string
                                        required:
                                        - containerPort
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - containerPort
                                      - protocol
                                      x-kubernetes-list-type: map
                                    readinessProbe:
                                      description: |-
                                        Periodic probe of container service readiness.
                                        Container will be removed from service endpoints if the probe fails.
                                        Cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      properties:
                                        exec:
                                          description: Exec specifies a command to
                                            execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        failureThreshold:
                                          description: |-
                                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                            Defaults to 3. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies a GRPC HealthCheckRequest.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              default: ""
                                              description: |-
                                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                                If this is not specified, the default behavior is defined by gRPC.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: |-
                                            Number of seconds after the container has started before liveness probes are initiated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: |-
                                            How often (in seconds) to perform the probe.
                                            Default to 10 seconds. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: |-
                                            Minimum consecutive successes for the probe to be considered successful after having failed.
                                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies a connection
                                            to a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: |-
                                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                            The grace period is the duration in seconds after the processes running in the pod are sent
                                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                                            Set this value longer than the expected cleanup time for your process.
                                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                            value overrides the value provided by the pod spec.
                                            Value must be non-negative integer. The value zero indicates stop immediately via
                                            the kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: |-
                                            Number of seconds after which the probe times out.
                                            Defaults to 1 second. Minimum value is 1.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                      type: object
                                    resizePolicy:
                                      description: Resources resize policy for the
                                        container.
                                      items:
                                        description: ContainerResizePolicy represents
                                          resource resize policy for the container.
                                        properties:
                                          resourceName:
                                            description: |-
                                              Name of the resource to which this resource resize policy applies.
                                              Supported values: cpu, memory.
                                            type: string
                                          restartPolicy:
                                            description: |-
                                              Restart policy to apply when specified resource is resized.
                                              If not specified, it defaults to NotRequired.
                                            type: string
                                        required:
                                        - resourceName
                                        - restartPolicy
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    resources:
                                      description: |-
                                        Compute Resources required by this container.
                                        Cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                      properties:
                                        claims:
                                          description: |-
                                            Claims lists the names of resources, defined in spec.resourceClaims,
                                            that are used by this container.

                                            This is an alpha field and requires enabling the
                                            DynamicResourceAllocation feature gate.

                                            This field is immutable. It can only be set for containers.
                                          items:
                                            description: ResourceClaim references
                                              one entry in PodSpec.ResourceClaims.
                                            properties:
                                              name:
                                                description: |-
                                                  Name must match the name of one entry in pod.spec.resourceClaims of
                                                  the Pod where this field is used. It makes that resource available
                                                  inside a container.
                                                type: string
                                              request:
                                                description: |-
                                                  Request is the name chosen for a request in the referenced claim.
                                                  If empty, everything from the claim is made available, otherwise
                                                  only the result of this request.
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          type: array
                                          x-kubernetes-list-map-keys:
                                          - name
                                          x-kubernetes-list-type: map
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Limits describes the maximum amount of compute resources allowed.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Requests describes the minimum amount of compute resources required.
                                            If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                            otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                      type: object
                                    restartPolicy:
                                      description: |-
                                        RestartPolicy defines the restart behavior of individual containers in a pod.
                                        This field may only be set for init containers, and the only allowed value is "Always".
                                        For non-init containers or when this field is not specified,
                                        the restart behavior is defined by the Pod's restart policy and the container type.
                                        Setting the RestartPolicy as "Always" for the init container will have the following effect:
                                        this init container will be continually restarted on
                                        exit until all regular containers have terminated. Once all regular
                                        containers have completed, all init containers with restartPolicy "Always"
                                        will be shut down. This lifecycle differs from normal init containers and
                                        is often referred to as a "sidecar" container. Although this init
                                        container still starts in the init container sequence, it does not wait
                                        for the container to complete before proceeding to the next init
                                        container. Instead, the next init container starts immediately after this
                                        init container is started, or after any startupProbe has successfully
                                        completed.
                                      type: string
                                    securityContext:
                                      description: |-
                                        SecurityContext defines the security options the container should be run with.
                                        If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
                                        More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
                                      properties:
                                        allowPrivilegeEscalation:
                                          description: |-
                                            AllowPrivilegeEscalation controls whether a process can gain more
                                            privileges than its parent process. This bool directly controls if
                                            the no_new_privs flag will be set on the container process.
                                            AllowPrivilegeEscalation is true always when the container is:
                                            1) run as Privileged
                                            2) has CAP_SYS_ADMIN
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        appArmorProfile:
                                          description: |-
                                            appArmorProfile is the AppArmor options to use by this container. If set, this profile
                                            overrides the pod's appArmorProfile.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            localhostProfile:
                                              description: |-
                                                localhostProfile indicates a profile loaded on the node that should be used.
                                                The profile must be preconfigured on the node to work.
                                                Must match the loaded name of the profile.
                                                Must be set if and only if type is "Localhost".
                                              type: string
                                            type:
                                              description: |-
                                                type indicates which kind of AppArmor profile will be applied.
                                                Valid options are:
                                                  Localhost - a profile pre-loaded on the node.
                                                  RuntimeDefault - the container runtime's default profile.
                                                  Unconfined - no AppArmor enforcement.
                                              type: string
                                          required:
                                          - type
                                          type: object
                                        capabilities:
                                          description: |-
                                            The capabilities to add/drop when running containers.
                                            Defaults to the default set of capabilities granted by the container runtime.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            add:
                                              description: Added capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            drop:
                                              description: Removed capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        privileged:
                                          description: |-
                                            Run container in privileged mode.
                                            Processes in privileged containers are essentially equivalent to root on the host.
                                            Defaults to false.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        procMount:
                                          description: |-
                                            procMount denotes the type of proc mount to use for the containers.
                                            The default value is Default which uses the container runtime defaults for
                                            readonly paths and masked paths.
                                            This requires the ProcMountType feature flag to be enabled.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: string
                                        readOnlyRootFilesystem:
                                          description: |-
                                            Whether this container has a read-only root filesystem.
                                            Default is false.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: boolean
                                        runAsGroup:
                                          description: |-
                                            The GID to run the entrypoint of the container process.
                                            Uses runtime default if unset.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        runAsNonRoot:
                                          description: |-
                                            Indicates that the container must run as a non-root user.
                                            If true, the Kubelet will validate the image at runtime to ensure that it
                                            does not run as UID 0 (root) and fail to start the container if it does.
                                            If unset or false, no such validation will be performed.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                          type: boolean
                                        runAsUser:
                                          description: |-
                                            The UID to run the entrypoint of the container process.
                                            Defaults to user specified in image metadata if unspecified.
                                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        seLinuxOptions:
                                          description: |-
                                            The SELinux context to be applied to the container.
                                            If unspecified, the container runtime will allocate a random SELinux context for each
                                            container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            level:
                                              description: Level is SELinux level
                                                label that applies to the container.
                                              type: string
                                            role:
                                              description: Role is a SELinux role
                                                label that applies to the container.
                                              type: string
                                            type:
                                              description: Type is a SELinux type
                                                label that applies to the container.
                                              type: string
                                            user:
                                              description: User is a SELinux user
                                                label that applies to the container.
                                              type: string
                                          type: object
                                        seccompProfile:
                                          description: |-
                                            The seccomp options to use by this container. If seccomp options are
                                            provided at both the pod & container level, the container options
                                            override the pod options.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            localhostProfile:
                                              description: |-
                                                localhostProfile indicates a profile defined in a file on the node should be used.
                                                The profile must be preconfigured on the node to work.
                                                Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                                Must be set if type is "Localhost". Must NOT be set for any other type.
                                              type: string
                                            type:
                                              description: |-
                                                type indicates which kind of seccomp profile will be applied.
                                                Valid options are:

                                                Localhost - a profile defined in a file on the node should be used.
                                                RuntimeDefault - the container runtime default profile should be used.
                                                Unconfined - no profile should be applied.
                                              type: string
                                          required:
                                          - type
                                          type: object
                                        windowsOptions:
                                          description: |-
                                            The Windows specific settings applied to all containers.
                                            If unspecified, the options from the PodSecurityContext will be used.
                                            If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            Note that this field cannot be set when spec.os.name is linux.
                                          properties:
                                            gmsaCredentialSpec:
                                              description: |-
                                                GMSACredentialSpec is where the GMSA admission webhook
                                                (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                                GMSA credential spec named by the GMSACredentialSpecName field.
                                              type: string
                                            gmsaCredentialSpecName:
                                              description: GMSACredentialSpecName
                                                is the name of the GMSA credential
                                                spec to use.
                                              type: string
                                            hostProcess:
                                              description: |-
                                                HostProcess determines if a container should be run as a 'Host Process' container.
                                                All of a Pod's containers must have the same effective HostProcess value
                                                (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                                In addition, if HostProcess is true then HostNetwork must also be set to true.
                                              type: boolean
                                            runAsUserName:
                                              description: |-
                                                The UserName in Windows to run the entrypoint of the container process.
                                                Defaults to the user specified in image metadata if unspecified.
                                                May also be set in PodSecurityContext. If set in both SecurityContext and
                                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                                              type: string
                                          type: object
                                      type: object
                                    startupProbe:
                                      description: |-
                                        StartupProbe indicates that the Pod has successfully initialized.
                                        If specified, no other probes are executed until this completes successfully.
                                        If this probe fails, the Pod will be restarted, just as if the livenessProbe failed.
                                        This can be used to provide different probe parameters at the beginning of a Pod's lifecycle,
                                        when it might take a long time to load data or warm a cache, than during steady-state operation.
                                        This cannot be updated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      properties:
                                        exec:
                                          description: Exec specifies a command to
                                            execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        failureThreshold:
                                          description: |-
                                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                            Defaults to 3. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        grpc:
                                          description: GRPC specifies a GRPC HealthCheckRequest.
                                          properties:
                                            port:
                                              description: Port number of the gRPC
                                                service. Number must be in the range
                                                1 to 65535.
                                              format: int32
                                              type: integer
                                            service:
                                              default: ""
                                              description: |-
                                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                                If this is not specified, the default behavior is defined by gRPC.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET
                                            request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        initialDelaySeconds:
                                          description: |-
                                            Number of seconds after the container has started before liveness probes are initiated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: |-
                                            How often (in seconds) to perform the probe.
                                            Default to 10 seconds. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: |-
                                            Minimum consecutive successes for the probe to be considered successful after having failed.
                                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies a connection
                                            to a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                        terminationGracePeriodSeconds:
                                          description: |-
                                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                            The grace period is the duration in seconds after the processes running in the pod are sent
                                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                                            Set this value longer than the expected cleanup time for your process.
                                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                            value overrides the value provided by the pod spec.
                                            Value must be non-negative integer. The value zero indicates stop immediately via
                                            the kill signal (no opportunity to shut down).
                                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                          format: int64
                                          type: integer
                                        timeoutSeconds:
                                          description: |-
                                            Number of seconds after which the probe times out.
                                            Defaults to 1 second. Minimum value is 1.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          format: int32
                                          type: integer
                                      type: object
                                    stdin:
                                      description: |-
                                        Whether this container should allocate a buffer for stdin in the container runtime. If this
                                        is not set, reads from stdin in the container will always result in EOF.
                                        Default is false.
                                      type: boolean
                                    stdinOnce:
                                      description: |-
                                        Whether the container runtime should close the stdin channel after it has been opened by
                                        a single attach. When stdin is true the stdin stream will remain open across multiple attach
                                        sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
                                        first client attaches to stdin, and then remains open and accepts data until the client disconnects,
                                        at which time stdin is closed and remains closed until the container is restarted. If this
                                        flag is false, a container processes that reads from stdin will never receive an EOF.
                                        Default is false
                                      type: boolean
                                    terminationMessagePath:
                                      description: |-
                                        Optional: Path at which the file to which the container's termination message
                                        will be written is mounted into the container's filesystem.
                                        Message written is intended to be brief final status, such as an assertion failure message.
                                        Will be truncated by the node if greater than 4096 bytes. The total message length across
                                        all containers will be limited to 12kb.
                                        Defaults to /dev/termination-log.
                                        Cannot be updated.
                                      type: string
                                    terminationMessagePolicy:
                                      description: |-
                                        Indicate how the termination message should be populated. File will use the contents of
                                        terminationMessagePath to populate the container status message on both success and failure.
                                        FallbackToLogsOnError will use the last chunk of container log output if the termination
                                        message file is empty and the container exited with an error.
                                        The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
                                        Defaults to File.
                                        Cannot be updated.
                                      type: string
                                    tty:
                                      description: |-
                                        Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
                                        Default is false.
                                      type: boolean
                                    volumeDevices:
                                      description: volumeDevices is the list of block
                                        devices to be used by the container.
                                      items:
                                        description: volumeDevice describes a mapping
                                          of a raw block device within a container.
                                        properties:
                                          devicePath:
                                            description: devicePath is the path inside
                                              of the container that the device will
                                              be mapped to.
                                            type: string
                                          name:
                                            description: name must match the name
                                              of a persistentVolumeClaim in the pod
                                            type: string
                                        required:
                                        - devicePath
                                        - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - devicePath
                                      x-kubernetes-list-type: map
                                    volumeMounts:
                                      description: |-
                                        Pod volumes to mount into the container's filesystem.
                                        Cannot be updated.
                                      items:
                                        description: VolumeMount describes a mounting
                                          of a Volume within a container.
                                        properties:
                                          mountPath:
                                            description: |-
                                              Path within the container at which the volume should be mounted.  Must
                                              not contain ':'.
                                            type: string
                                          mountPropagation:
                                            description: |-
                                              mountPropagation determines how mounts are propagated from the host
                                              to container and the other way around.
                                              When not set, MountPropagationNone is used.
                                              This field is beta in 1.10.
                                              When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                                              (which defaults to None).
                                            type: string
                                          name:
                                            description: This must match the Name
                                              of a Volume.
                                            type: string
                                          readOnly:
                                            description: |-
                                              Mounted read-only if true, read-write otherwise (false or unspecified).
                                              Defaults to false.
                                            type: boolean
                                          recursiveReadOnly:
                                            description: |-
                                              RecursiveReadOnly specifies whether read-only mounts should be handled
                                              recursively.

                                              If ReadOnly is false, this field has no meaning and must be unspecified.

                                              If ReadOnly is true, and this field is set to Disabled, the mount is not made
                                              recursively read-only.  If this field is set to IfPossible, the mount is made
                                              recursively read-only, if it is supported by the container runtime.  If this
                                              field is set to Enabled, the mount is made recursively read-only if it is
                                              supported by the container runtime, otherwise the pod will not be started and
                                              an error will be generated to indicate the reason.

                                              If this field is set to IfPossible or Enabled, MountPropagation must be set to
                                              None (or be unspecified, which defaults to None).

                                              If this field is not specified, it is treated as an equivalent of Disabled.
                                            type: string
                                          subPath:
                                            description: |-
                                              Path within the volume from which the container's volume should be mounted.
                                              Defaults to "" (volume's root).
                                            type: string
                                          subPathExpr:
                                            description: |-
                                              Expanded path within the volume from which the container's volume should be mounted.
                                              Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                              Defaults to "" (volume's root).
                                              SubPathExpr and SubPath are mutually exclusive.
                                            type: string
                                        required:
                                        - mountPath
                                        - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - mountPath
                                      x-kubernetes-list-type: map
                                    workingDir:
                                      description: |-
                                        Container's working directory.
                                        If not specified, the container runtime's default will be used, which
                                        might be configured in the container image.
                                        Cannot be updated.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              nodeName:
                                description: |-
                                  NodeName indicates in which node this pod is scheduled.
                                  If empty, this pod is a candidate for scheduling by the scheduler defined in schedulerName.
                                  Once this field is set, the kubelet for this node becomes responsible for the lifecycle of this pod.
                                  This field should not be used to express a desire for the pod to be scheduled on a specific node.
                                  https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodename
                                type: string
                              nodeSelector:
                                additionalProperties:
                                  type: string
                                description: |-
                                  NodeSelector is a selector which must be true for the pod to fit on a node.
                                  Selector which must match a node's labels for the pod to be scheduled on that node.
                                  More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                                type: object
                                x-kubernetes-map-type: atomic
                              os:
                                description: |-
                                  Specifies the OS of the containers in the pod.
                                  Some pod and container fields are restricted if this is set.

                                  If the OS field is set to linux, the following fields must be unset:
                                  -securityContext.windowsOptions

                                  If the OS field is set to windows, following fields must be unset:
                                  - spec.hostPID
                                  - spec.hostIPC
                                  - spec.hostUsers
                                  - spec.securityContext.appArmorProfile
                                  - spec.securityContext.seLinuxOptions
                                  - spec.securityContext.seccompProfile
                                  - spec.securityContext.fsGroup
                                  - spec.securityContext.fsGroupChangePolicy
                                  - spec.securityContext.sysctls
                                  - spec.shareProcessNamespace
                                  - spec.securityContext.runAsUser
                                  - spec.securityContext.runAsGroup
                                  - spec.securityContext.supplementalGroups
                                  - spec.securityContext.supplementalGroupsPolicy
                                  - spec.containers[*].securityContext.appArmorProfile
                                  - spec.containers[*].securityContext.seLinuxOptions
                                  - spec.containers[*].securityContext.seccompProfile
                                  - spec.containers[*].securityContext.capabilities
                                  - spec.containers[*].securityContext.readOnlyRootFilesystem
                                  - spec.containers[*].securityContext.privileged
                                  - spec.containers[*].securityContext.allowPrivilegeEscalation
                                  - spec.containers[*].securityContext.procMount
                                  - spec.containers[*].securityContext.runAsUser
                                  - spec.containers[*].securityContext.runAsGroup
                                properties:
                                  name:
                                    description: |-
                                      Name is the name of the operating system. The currently supported values are linux and windows.
                                      Additional value may be defined in future and can be one of:
                                      https://github.com/opencontainers/runtime-spec/blob/master/config.md#platform-specific-configuration
                                      Clients should expect to handle additional values and treat unrecognized values in this field as os: null
                                    type: string
                                required:
                                - name
                                type: object
                              overhead:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Overhead represents the resource overhead associated with running a pod for a given RuntimeClass.
                                  This field will be autopopulated at admission time by the RuntimeClass admission controller. If
                                  the RuntimeClass admission controller is enabled, overhead must not be set in Pod create requests.
                                  The RuntimeClass admission controller will reject Pod create requests which have the overhead already
                                  set. If RuntimeClass is configured and selected in the PodSpec, Overhead will be set to the value
                                  defined in the corresponding RuntimeClass, otherwise it will remain unset and treated as zero.
                                  More info: https://git.k8s.io/enhancements/keps/sig-node/688-pod-overhead/README.md
                                type: object
                              preemptionPolicy:
                                description: |-
                                  PreemptionPolicy is the Policy for preempting pods with lower priority.
                                  One of Never, PreemptLowerPriority.
                                  Defaults to PreemptLowerPriority if unset.
                                type: string
                              priority:
                                description: |-
                                  The priority value. Various system components use this field to find the
                                  priority of the pod. When Priority Admission Controller is enabled, it
                                  prevents users from setting this field. The admission controller populates
                                  this field from PriorityClassName.
                                  The higher the value, the higher the priority.
                                format: int32
                                type: integer
                              priorityClassName:
                                description: |-
                                  If specified, indicates the pod's priority. "system-node-critical" and
                                  "system-cluster-critical" are two special keywords which indicate the
                                  highest priorities with the former being the highest priority. Any other
                                  name must be defined by creating a PriorityClass object with that name.
                                  If not specified, the pod priority will be default or zero if there is no
                                  default.
                                type: string
                              readinessGates:
                                description: |-
                                  If specified, all readiness gates will be evaluated for pod readiness.
                                  A pod is ready when all its containers are ready AND
                                  all conditions specified in the readiness gates have status equal to "True"
                                  More info: https://git.k8s.io/enhancements/keps/sig-network/580-pod-readiness-gates
                                items:
                                  description: PodReadinessGate contains the reference
                                    to a pod condition
                                  properties:
                                    conditionType:
                                      description: ConditionType refers to a condition
                                        in the pod's condition list with matching
                                        type.
                                      type: string
                                  required:
                                  - conditionType
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              resourceClaims:
                                description: |-
                                  ResourceClaims defines which ResourceClaims must be allocated
                                  and reserved before the Pod is allowed to start. The resources
                                  will be made available to those containers which consume them
                                  by name.

                                  This is an alpha field and requires enabling the
                                  DynamicResourceAllocation feature gate.

                                  This field is immutable.
                                items:
                                  description: |-
                                    PodResourceClaim references exactly one ResourceClaim, either directly
                                    or by naming a ResourceClaimTemplate which is then turned into a ResourceClaim
                                    for the pod.

                                    It adds a name to it that uniquely identifies the ResourceClaim inside the Pod.
                                    Containers that need access to the ResourceClaim reference it with this name.
                                  properties:
                                    name:
                                      description: |-
                                        Name uniquely identifies this resource claim inside the pod.
                                        This must be a DNS_LABEL.
                                      type: string
                                    resourceClaimName:
                                      description: |-
                                        ResourceClaimName is the name of a ResourceClaim object in the same
                                        namespace as this pod.

                                        Exactly one of ResourceClaimName and ResourceClaimTemplateName must
                                        be set.
                                      type: string
                                    resourceClaimTemplateName:
                                      description: |-
                                        ResourceClaimTemplateName is the name of a ResourceClaimTemplate
                                        object in the same namespace as this pod.

                                        The template will be used to create a new ResourceClaim, which will
                                        be bound to this pod. When this pod is deleted, the ResourceClaim
                                        will also be deleted. The pod name and resource name, along with a
                                        generated component, will be used to form a unique name for the
                                        ResourceClaim, which will be recorded in pod.status.resourceClaimStatuses.

                                        This field is immutable and no changes will be made to the
                                        corresponding ResourceClaim by the control plane after creating the
                                        ResourceClaim.

                                        Exactly one of ResourceClaimName and ResourceClaimTemplateName must
                                        be set.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              resources:
                                description: |-
                                  Resources is the total amount of CPU and Memory resources required by all
                                  containers in the pod. It supports specifying Requests and Limits for
                                  "cpu" and "memory" resource names only. ResourceClaims are not supported.

                                  This field enables fine-grained control over resource allocation for the
                                  entire pod, allowing resource sharing among containers in a pod.

                                  This is an alpha field and requires enabling the PodLevelResources feature
                                  gate.
                                properties:
                                  claims:
                                    description: |-
                                      Claims lists the names of resources, defined in spec.resourceClaims,
                                      that are used by this container.

                                      This is an alpha field and requires enabling the
                                      DynamicResourceAllocation feature gate.

                                      This field is immutable. It can only be set for containers.
                                    items:
                                      description: ResourceClaim references one entry
                                        in PodSpec.ResourceClaims.
                                      properties:
                                        name:
                                          description: |-
                                            Name must match the name of one entry in pod.spec.resourceClaims of
                                            the Pod where this field is used. It makes that resource available
                                            inside a container.
                                          type: string
                                        request:
                                          description: |-
                                            Request is the name chosen for a request in the referenced claim.
                                            If empty, everything from the claim is made available, otherwise
                                            only the result of this request.
                                          type: string
                                      required:
                                      - name
                                      type: object
                                    type: array
                                    x-kubernetes-list-map-keys:
                                    - name
                                    x-kubernetes-list-type: map
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: |-
                                      Limits describes the maximum amount of compute resources allowed.
                                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: |-
                                      Requests describes the minimum amount of compute resources required.
                                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                    type: object
                                type: object
                              restartPolicy:
                                description: |-
                                  Restart policy for all containers within the pod.
                                  One of Always, OnFailure, Never. In some contexts, only a subset of those values may be permitted.
                                  Default to Always.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy
                                type: string
                              runtimeClassName:
                                description: |-
                                  RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used
                                  to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run.
                                  If unset or empty, the "legacy" RuntimeClass will be used, which is an implicit class with an
                                  empty definition that uses the default runtime handler.
                                  More info: https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class
                                type: string
                              schedulerName:
                                description: |-
                                  If specified, the pod will be dispatched by specified scheduler.
                                  If not specified, the pod will be dispatched by default scheduler.
                                type: string
                              schedulingGates:
                                description: |-
                                  SchedulingGates is an opaque list of values that if specified will block scheduling the pod.
                                  If schedulingGates is not empty, the pod will stay in the SchedulingGated state and the
                                  scheduler will not attempt to schedule the pod.

                                  SchedulingGates can only be set at pod creation time, and be removed only afterwards.
                                items:
                                  description: PodSchedulingGate is associated to
                                    a Pod to guard its scheduling.
                                  properties:
                                    name:
                                      description: |-
                                        Name of the scheduling gate.
                                        Each scheduling gate must have a unique name field.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              securityContext:
                                description: |-
                                  SecurityContext holds pod-level security attributes and common container settings.
                                  Optional: Defaults to empty.  See type description for default values of each field.
                                properties:
                                  appArmorProfile:
                                    description: |-
                                      appArmorProfile is the AppArmor options to use by the containers in this pod.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    properties:
                                      localhostProfile:
                                        description: |-
                                          localhostProfile indicates a profile loaded on the node that should be used.
                                          The profile must be preconfigured on the node to work.
                                          Must match the loaded name of the profile.
                                          Must be set if and only if type is "Localhost".
                                        type: string
                                      type:
                                        description: |-
                                          type indicates which kind of AppArmor profile will be applied.
                                          Valid options are:
                                            Localhost - a profile pre-loaded on the node.
                                            RuntimeDefault - the container runtime's default profile.
                                            Unconfined - no AppArmor enforcement.
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  fsGroup:
                                    description: |-
                                      A special supplemental group that applies to all containers in a pod.
                                      Some volume types allow the Kubelet to change the ownership of that volume
                                      to be owned by the pod:

                                      1. The owning GID will be the FSGroup
                                      2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                                      3. The permission bits are OR'd with rw-rw----

                                      If unset, the Kubelet will not modify the ownership and permissions of any volume.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  fsGroupChangePolicy:
                                    description: |-
                                      fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                                      before being exposed inside Pod. This field will only apply to
                                      volume types which support fsGroup based ownership(and permissions).
                                      It will have no effect on ephemeral volume types such as: secret, configmaps
                                      and emptydir.
                                      Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    type: string
                                  runAsGroup:
                                    description: |-
                                      The GID to run the entrypoint of the container process.
                                      Uses runtime default if unset.
                                      May also be set in SecurityContext.  If set in both SecurityContext and
                                      PodSecurityContext, the value specified in SecurityContext takes precedence
                                      for that container.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  runAsNonRoot:
                                    description: |-
                                      Indicates that the container must run as a non-root user.
                                      If true, the Kubelet will validate the image at runtime to ensure that it
                                      does not run as UID 0 (root) and fail to start the container if it does.
                                      If unset or false, no such validation will be performed.
                                      May also be set in SecurityContext.  If set in both SecurityContext and
                                      PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    type: boolean
                                  runAsUser:
                                    description: |-
                                      The UID to run the entrypoint of the container process.
                                      Defaults to user specified in image metadata if unspecified.
                                      May also be set in SecurityContext.  If set in both SecurityContext and
                                      PodSecurityContext, the value specified in SecurityContext takes precedence
                                      for that container.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  seLinuxChangePolicy:
                                    description: |-
                                      seLinuxChangePolicy defines how the container's SELinux label is applied to all volumes used by the Pod.
                                      It has no effect on nodes that do not support SELinux or to volumes does not support SELinux.
                                      Valid values are "MountOption" and "Recursive".

                                      "Recursive" means relabeling of all files on all Pod volumes by the container runtime.
                                      This may be slow for large volumes, but allows mixing privileged and unprivileged Pods sharing the same volume on the same node.

                                      "MountOption" mounts all eligible Pod volumes with `-o context` mount option.
                                      This requires all Pods that share the same volume to use the same SELinux label.
                                      It is not possible to share the same volume among privileged and unprivileged Pods.
                                      Eligible volumes are in-tree FibreChannel and iSCSI volumes, and all CSI volumes
                                      whose CSI driver announces SELinux support by setting spec.seLinuxMount: true in their
                                      CSIDriver instance. Other volumes are always re-labelled recursively.
                                      "MountOption" value is allowed only when SELinuxMount feature gate is enabled.

                                      If not specified and SELinuxMount feature gate is enabled, "MountOption" is used.
                                      If not specified and SELinuxMount feature gate is disabled, "MountOption" is used for ReadWriteOncePod volumes
                                      and "Recursive" for all other volumes.

                                      This field affects only Pods that have SELinux label set, either in PodSecurityContext or in SecurityContext of all containers.

                                      All Pods that use the same volume should use the same seLinuxChangePolicy, otherwise some pods can get stuck in ContainerCreating state.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    type: string
                                  seLinuxOptions:
                                    description: |-
                                      The SELinux context to be applied to all containers.
                                      If unspecified, the container runtime will allocate a random SELinux context for each
                                      container.  May also be set in SecurityContext.  If set in
                                      both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                                      takes precedence for that container.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    properties:
                                      level:
                                        description: Level is SELinux level label
                                          that applies to the container.
                                        type: string
                                      role:
                                        description: Role is a SELinux role label
                                          that applies to the container.
                                        type: string
                                      type:
                                        description: Type is a SELinux type label
                                          that applies to the container.
                                        type: string
                                      user:
                                        description: User is a SELinux user label
                                          that applies to the container.
                                        type: string
                                    type: object
                                  seccompProfile:
                                    description: |-
                                      The seccomp options to use by the containers in this pod.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    properties:
                                      localhostProfile:
                                        description: |-
                                          localhostProfile indicates a profile defined in a file on the node should be used.
                                          The profile must be preconfigured on the node to work.
                                          Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                          Must be set if type is "Localhost". Must NOT be set for any other type.
                                        type: string
                                      type:
                                        description: |-
                                          type indicates which kind of seccomp profile will be applied.
                                          Valid options are:

                                          Localhost - a profile defined in a file on the node should be used.
                                          RuntimeDefault - the container runtime default profile should be used.
                                          Unconfined - no profile should be applied.
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  supplementalGroups:
                                    description: |-
                                      A list of groups applied to the first process run in each container, in
                                      addition to the container's primary GID and fsGroup (if specified).  If
                                      the SupplementalGroupsPolicy feature is enabled, the
                                      supplementalGroupsPolicy field determines whether these are in addition
                                      to or instead of any group memberships defined in the container image.
                                      If unspecified, no additional groups are added, though group memberships
                                      defined in the container image may still be used, depending on the
                                      supplementalGroupsPolicy field.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    items:
                                      format: int64
                                      type: integer
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  supplementalGroupsPolicy:
                                    description: |-
                                      Defines how supplemental groups of the first container processes are calculated.
                                      Valid values are "Merge" and "Strict". If not specified, "Merge" is used.
                                      (Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled
                                      and the container runtime must implement support for this feature.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    type: string
                                  sysctls:
                                    description: |-
                                      Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                                      sysctls (by the container runtime) might fail to launch.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    items:
                                      description: Sysctl defines a kernel parameter
                                        to be set
                                      properties:
                                        name:
                                          description: Name of a property to set
                                          type: string
                                        value:
                                          description: Value of a property to set
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  windowsOptions:
                                    description: |-
                                      The Windows specific settings applied to all containers.
                                      If unspecified, the options within a container's SecurityContext will be used.
                                      If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                      Note that this field cannot be set when spec.os.name is linux.
                                    properties:
                                      gmsaCredentialSpec:
                                        description: |-
                                          GMSACredentialSpec is where the GMSA admission webhook
                                          (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                          GMSA credential spec named by the GMSACredentialSpecName field.
                                        type: string
                                      gmsaCredentialSpecName:
                                        description: GMSACredentialSpecName is the
                                          name of the GMSA credential spec to use.
                                        type: string
                                      hostProcess:
                                        description: |-
                                          HostProcess determines if a container should be run as a 'Host Process' container.
                                          All of a Pod's containers must have the same effective HostProcess value
                                          (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                          In addition, if HostProcess is true then HostNetwork must also be set to true.
                                        type: boolean
                                      runAsUserName:
                                        description: |-
                                          The UserName in Windows to run the entrypoint of the container process.
                                          Defaults to the user specified in image metadata if unspecified.
                                          May also be set in PodSecurityContext. If set in both SecurityContext and
                                          PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        type: string
                                    type: object
                                type: object
                              serviceAccount:
                                description: |-
                                  DeprecatedServiceAccount is a deprecated alias for ServiceAccountName.
                                  Deprecated: Use serviceAccountName instead.
                                type: string
                              serviceAccountName:
                                description: |-
                                  ServiceAccountName is the name of the ServiceAccount to use to run this pod.
                                  More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
                                type: string
                              setHostnameAsFQDN:
                                description: |-
                                  If true the pod's hostname will be configured as the pod's FQDN, rather than the leaf name (the default).
                                  In Linux containers, this means setting the FQDN in the hostname field of the kernel (the nodename field of struct utsname).
                                  In Windows containers, this means setting the registry value of hostname for the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters to FQDN.
                                  If a pod does not have FQDN, this has no effect.
                                  Default to false.
                                type: boolean
                              shareProcessNamespace:
                                description: |-
                                  Share a single process namespace between all of the containers in a pod.
                                  When this is set containers will be able to view and signal processes from other containers
                                  in the same pod, and the first process in each container will not be assigned PID 1.
                                  HostPID and ShareProcessNamespace cannot both be set.
                                  Optional: Default to false.
                                type: boolean
                              subdomain:
                                description: |-
                                  If specified, the fully qualified Pod hostname will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>".
                                  If not specified, the pod will not have a domainname at all.
                                type: string
                              terminationGracePeriodSeconds:
                                description: |-
                                  Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request.
                                  Value must be non-negative integer. The value zero indicates stop immediately via
                                  the kill signal (no opportunity to shut down).
                                  If this value is nil, the default grace period will be used instead.
                                  The grace period is the duration in seconds after the processes running in the pod are sent
                                  a termination signal and the time when the processes are forcibly halted with a kill signal.
                                  Set this value longer than the expected cleanup time for your process.
                                  Defaults to 30 seconds.
                                format: int64
                                type: integer
                              tolerations:
                                description: If specified, the pod's tolerations.
                                items:
                                  description: |-
                                    The pod this Toleration is attached to tolerates any taint that matches
                                    the triple <key,value,effect> using the matching operator <operator>.
                                  properties:
                                    effect:
                                      description: |-
                                        Effect indicates the taint effect to match. Empty means match all taint effects.
                                        When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                      type: string
                                    key:
                                      description: |-
                                        Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                        If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                      type: string
                                    operator:
                                      description: |-
                                        Operator represents a key's relationship to the value.
                                        Valid operators are Exists and Equal. Defaults to Equal.
                                        Exists is equivalent to wildcard for value, so that a pod can
                                        tolerate all taints of a particular category.
                                      type: string
                                    tolerationSeconds:
                                      description: |-
                                        TolerationSeconds represents the period of time the toleration (which must be
                                        of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                        it is not set, which means tolerate the taint forever (do not evict). Zero and
                                        negative values will be treated as 0 (evict immediately) by the system.
                                      format: int64
                                      type: integer
                                    value:
                                      description: |-
                                        Value is the taint value the toleration matches to.
                                        If the operator is Exists, the value should be empty, otherwise just a regular string.
                                      type: string
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              topologySpreadConstraints:
                                description: |-
                                  TopologySpreadConstraints describes how a group of pods ought to spread across topology
                                  domains. Scheduler will schedule pods in a way which abides by the constraints.
                                  All topologySpreadConstraints are ANDed.
                                items:
                                  description: TopologySpreadConstraint specifies
                                    how to spread matching pods among the given topology.
                                  properties:
                                    labelSelector:
                                      description: |-
                                        LabelSelector is used to find matching pods.
                                        Pods that match this label selector are counted to determine the number of pods
                                        in their corresponding topology domain.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: |-
                                              A label selector requirement is a selector that contains values, a key, and an operator that
                                              relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  operator represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: |-
                                                  values is an array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    matchLabelKeys:
                                      description: |-
                                        MatchLabelKeys is a set of pod label keys to select the pods over which
                                        spreading will be calculated. The keys are used to lookup values from the
                                        incoming pod labels, those key-value labels are ANDed with labelSelector
                                        to select the group of existing pods over which spreading will be calculated
                                        for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                        MatchLabelKeys cannot be set when LabelSelector isn't set.
                                        Keys that don't exist in the incoming pod labels will
                                        be ignored. A null or empty list means only match against labelSelector.

                                        This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    maxSkew:
                                      description: |-
                                        MaxSkew describes the degree to which pods may be unevenly distributed.
                                        When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference
                                        between the number of matching pods in the target topology and the global minimum.
                                        The global minimum is the minimum number of matching pods in an eligible domain
                                        or zero if the number of eligible domains is less than MinDomains.
                                        For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                                        labelSelector spread as 2/2/1:
                                        In this case, the global minimum is 1.
                                        | zone1 | zone2 | zone3 |
                                        |  P P  |  P P  |   P   |
                                        - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;
                                        scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)
                                        violate MaxSkew(1).
                                        - if MaxSkew is 2, incoming pod can be scheduled onto any zone.
                                        When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence
                                        to topologies that satisfy it.
                                        It's a required field. Default value is 1 and 0 is not allowed.
                                      format: int32
                                      type: integer
                                    minDomains:
                                      description: |-
                                        MinDomains indicates a minimum number of eligible domains.
                                        When the number of eligible domains with matching topology keys is less than minDomains,
                                        Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed.
                                        And when the number of eligible domains with matching topology keys equals or greater than minDomains,
                                        this value has no effect on scheduling.
                                        As a result, when the number of eligible domains is less than minDomains,
                                        scheduler won't schedule more than maxSkew Pods to those domains.
                                        If value is nil, the constraint behaves as if MinDomains is equal to 1.
                                        Valid values are integers greater than 0.
                                        When value is not nil, WhenUnsatisfiable must be DoNotSchedule.

                                        For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same
                                        labelSelector spread as 2/2/2:
                                        | zone1 | zone2 | zone3 |
                                        |  P P  |  P P  |  P P  |
                                        The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0.
                                        In this situation, new pod with the same labelSelector cannot be scheduled,
                                        because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,
                                        it will violate MaxSkew.
                                      format: int32
                                      type: integer
                                    nodeAffinityPolicy:
                                      description: |-
                                        NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector
                                        when calculating pod topology spread skew. Options are:
                                        - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.
                                        - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.

                                        If this value is nil, the behavior is equivalent to the Honor policy.
                                        This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                                      type: string
                                    nodeTaintsPolicy:
                                      description: |-
                                        NodeTaintsPolicy indicates how we will treat node taints when calculating
                                        pod topology spread skew. Options are:
                                        - Honor: nodes without taints, along with tainted nodes for which the incoming pod
                                        has a toleration, are included.
                                        - Ignore: node taints are ignored. All nodes are included.

                                        If this value is nil, the behavior is equivalent to the Ignore policy.
                                        This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                                      type: string
                                    topologyKey:
                                      description: |-
                                        TopologyKey is the key of node labels. Nodes that have a label with this key
                                        and identical values are considered to be in the same topology.
                                        We consider each <key, value> as a "bucket", and try to put balanced number
                                        of pods into each bucket.
                                        We define a domain as a particular instance of a topology.
                                        Also, we define an eligible domain as a domain whose nodes meet the requirements of
                                        nodeAffinityPolicy and nodeTaintsPolicy.
                                        e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology.
                                        And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology.
                                        It's a required field.
                                      type: string
                                    whenUnsatisfiable:
                                      description: |-
                                        WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy
                                        the spread constraint.
                                        - DoNotSchedule (default) tells the scheduler not to schedule it.
                                        - ScheduleAnyway tells the scheduler to schedule the pod in any location,
                                          but giving higher precedence to topologies that would help reduce the
                                          skew.
                                        A constraint is considered "Unsatisfiable" for an incoming pod
                                        if and only if every possible node assignment for that pod would violate
                                        "MaxSkew" on some topology.
                                        For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                                        labelSelector spread as 3/1/1:
                                        | zone1 | zone2 | zone3 |
                                        | P P P |   P   |   P   |
                                        If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled
                                        to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies
                                        MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler
                                        won't make it *more* imbalanced.
                                        It's a required field.
                                      type: string
                                  required:
                                  - maxSkew
                                  - topologyKey
                                  - whenUnsatisfiable
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - topologyKey
                                - whenUnsatisfiable
                                x-kubernetes-list-type: map
                              volumes:
                                description: |-
                                  List of volumes that can be mounted by containers belonging to the pod.
                                  More info: https://kubernetes.io/docs/concepts/storage/volumes
                                items:
                                  description: Volume represents a named volume in
                                    a pod that may be accessed by any container in
                                    the pod.
                                  properties:
                                    awsElasticBlockStore:
                                      description: |-
                                        awsElasticBlockStore represents an AWS Disk resource that is attached to a
                                        kubelet's host machine and then exposed to the pod.
                                        Deprecated: AWSElasticBlockStore is deprecated. All operations for the in-tree
                                        awsElasticBlockStore type are redirected to the ebs.csi.aws.com CSI driver.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                      properties:
                                        fsType:
                                          description: |-
                                            fsType is the filesystem type of the volume that you want to mount.
                                            Tip: Ensure that the filesystem type is supported by the host operating system.
                                            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                          type: string
                                        partition:
                                          description: |-
                                            partition is the partition in the volume that you want to mount.
                                            If omitted, the default is to mount by volume name.
                                            Examples: For volume /dev/sda1, you specify the partition as "1".
                                            Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                                          format: int32
                                          type: integer
                                        readOnly:
                                          description: |-
                                            readOnly value true will force the readOnly setting in VolumeMounts.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                          type: boolean
                                        volumeID:
                                          description: |-
                                            volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                          type: string
                                      required:
                                      - volumeID
                                      type: object
                                    azureDisk:
                                      description: |-
                                        azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
                                        Deprecated: AzureDisk is deprecated. All operations for the in-tree azureDisk type
                                        are redirected to the disk.csi.azure.com CSI driver.
                                      properties:
                                        cachingMode:
                                          description: 'cachingMode is the Host Caching
                                            mode: None, Read Only, Read Write.'
                                          type: string
                                        diskName:
                                          description: diskName is the Name of the
                                            data disk in the blob storage
                                          type: string
                                        diskURI:
                                          description: diskURI is the URI of data
                                            disk in the blob storage
                                          type: string
                                        fsType:
                                          default: ext4
                                          description: |-
                                            fsType is Filesystem type to mount.
                                            Must be a filesystem type supported by the host operating system.
                                            Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                          type: string
                                        kind:
                                          description: 'kind expected values are Shared:
                                            multiple blob disks per storage account  Dedicated:
                                            single blob disk per storage account  Managed:
                                            azure managed data disk (only in managed
                                            availability set). defaults to shared'
                                          type: string
                                        readOnly:
                                          default: false
                                          description: |-
                                            readOnly Defaults to false (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                      required:
                                      - diskName
                                      - diskURI
                                      type: object
                                    azureFile:
                                      description: |-
                                        azureFile represents an Azure File Service mount on the host and bind mount to the pod.
                                        Deprecated: AzureFile is deprecated. All operations for the in-tree azureFile type
                                        are redirected to the file.csi.azure.com CSI driver.
                                      properties:
                                        readOnly:
                                          description: |-
                                            readOnly defaults to false (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        secretName:
                                          description: secretName is the  name of
                                            secret that contains Azure Storage Account
                                            Name and Key
                                          type: string
                                        shareName:
                                          description: shareName is the azure share
                                            Name
                                          type: string
                                      required:
                                      - secretName
                                      - shareName
                                      type: object
                                    cephfs:
                                      description: |-
                                        cephFS represents a Ceph FS mount on the host that shares a pod's lifetime.
                                        Deprecated: CephFS is deprecated and the in-tree cephfs type is no longer supported.
                                      properties:
                                        monitors:
                                          description: |-
                                            monitors is Required: Monitors is a collection of Ceph monitors
                                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        path:
                                          description: 'path is Optional: Used as
                                            the mounted root, rather than the full
                                            Ceph tree, default is /'
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                          type: boolean
                                        secretFile:
                                          description: |-
                                            secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
                                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                          type: string
                                        secretRef:
                                          description: |-
                                            secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.
                                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                          properties:
                                            name:
                                              default: ""
                                              description: |-
                                                Name of the referent.
                                                This field is effectively required, but due to backwards compatibility is
                                                allowed to be empty. Instances of this type with an empty value here are
                                                almost certainly wrong.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        user:
                                          description: |-
                                            user is optional: User is the rados user name, default is admin
                                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                          type: string
                                      required:
                                      - monitors
                                      type: object
                                    cinder:
                                      description: |-
                                        cinder represents a cinder volume attached and mounted on kubelets host machine.
                                        Deprecated: Cinder is deprecated. All operations for the in-tree cinder type
                                        are redirected to the cinder.csi.openstack.org CSI driver.
                                        More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                      properties:
                                        fsType:
                                          description: |-
                                            fsType is the filesystem type to mount.
                                            Must be a filesystem type supported by the host operating system.
                                            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                            More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly defaults to false (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                            More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                          type: boolean
                                        secretRef:
                                          description: |-
                                            secretRef is optional: points to a secret object containing parameters used to connect
                                            to OpenStack.
                                          properties:
                                            name:
                                              default: ""
                                              description: |-
                                                Name of the referent.
                                                This field is effectively required, but due to backwards compatibility is
                                                allowed to be empty. Instances of this type with an empty value here are
                                                almost certainly wrong.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        volumeID:
                                          description: |-
                                            volumeID used to identify the volume in cinder.
                                            More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                          type: string
                                      required:
                                      - volumeID
                                      type: object
                                    configMap:
                                      description: configMap represents a configMap
                                        that should populate this volume
                                      properties:
                                        defaultMode:
                                          description: |-
                                            defaultMode is optional: mode bits used to set permissions on created files by default.
                                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                            Defaults to 0644.
                                            Directories within the path are not affected by this setting.
                                            This might be in conflict with other options that affect the file
                                            mode, like fsGroup, and the result can be other mode bits set.
                                          format: int32
                                          type: integer
                                        items:
                                          description: |-
                                            items if unspecified, each key-value pair in the Data field of the referenced
                                            ConfigMap will be projected into the volume as a file whose name is the
                                            key and content is the value. If specified, the listed keys will be
                                            projected into the specified paths, and unlisted keys will not be
                                            present. If a key is specified which is not present in the ConfigMap,
                                            the volume setup will error unless it is marked optional. Paths must be
                                            relative and may not contain the '..' path or start with '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: |-
                                                  mode is Optional: mode bits used to set permissions on this file.
                                                  Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                  YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                  If not specified, the volume defaultMode will be used.
                                                  This might be in conflict with other options that affect the file
                                                  mode, like fsGroup, and the result can be other mode bits set.
                                                format: int32
                                                type: integer
                                              path:
                                                description: |-
                                                  path is the relative path of the file to map the key to.
                                                  May not be an absolute path.
                                                  May not contain the path element '..'.
                                                  May not start with the string '..'.
                                                type: string
                                            required:
                                            - key
                                            - path
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                        optional:
                                          description: optional specify whether the
                                            ConfigMap or its keys must be defined
                                          type: boolean
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    csi:
                                      description: csi (Container Storage Interface)
                                        represents ephemeral storage that is handled
                                        by certain external CSI drivers.
                                      properties:
                                        driver:
                                          description: |-
                                            driver is the name of the CSI driver that handles this volume.
                                            Consult with your admin for the correct name as registered in the cluster.
                                          type: string
                                        fsType:
                                          description: |-
                                            fsType to mount. Ex. "ext4", "xfs", "ntfs".
                                            If not provided, the empty value is passed to the associated CSI driver
                                            which will determine the default filesystem to apply.
                                          type: string
                                        nodePublishSecretRef:
                                          description: |-
                                            nodePublishSecretRef is a reference to the secret object containing
                                            sensitive information to pass to the CSI driver to complete the CSI
                                            NodePublishVolume and NodeUnpublishVolume calls.
                                            This field is optional, and  may be empty if no secret is required. If the
                                            secret object contains more than one secret, all secret references are passed.
                                          properties:
                                            name:
                                              default: ""
                                              description: |-
                                                Name of the referent.
                                                This field is effectively required, but due to backwards compatibility is
                                                allowed to be empty. Instances of this type with an empty value here are
                                                almost certainly wrong.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        readOnly:
                                          description: |-
                                            readOnly specifies a read-only configuration for the volume.
                                            Defaults to false (read/write).
                                          type: boolean
                                        volumeAttributes:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            volumeAttributes stores driver-specific properties that are passed to the CSI
                                            driver. Consult your driver's documentation for supported values.
                                          type: object
                                      required:
                                      - driver
                                      type: object
                                    downwardAPI:
                                      description: downwardAPI represents downward
                                        API about the pod that should populate this
                                        volume
                                      properties:
                                        defaultMode:
                                          description: |-
                                            Optional: mode bits to use on created files by default. Must be a
                                            Optional: mode bits used to set permissions on created files by default.
                                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                            Defaults to 0644.
                                            Directories within the path are not affected by this setting.
                                            This might be in conflict with other options that affect the file
                                            mode, like fsGroup, and the result can be other mode bits set.
                                          format: int32
                                          type: integer
                                        items:
                                          description: Items is a list of downward
                                            API volume file
                                          items:
                                            description: DownwardAPIVolumeFile represents
                                              information to create the file containing
                                              the pod field
                                            properties:
                                              fieldRef:
                                                description: 'Required: Selects a
                                                  field of the pod: only annotations,
                                                  labels, name, namespace and uid
                                                  are supported.'
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema
                                                      the FieldPath is written in
                                                      terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field
                                                      to select in the specified API
                                                      version.
                                                    type: string
                                                required:
                                                - fieldPath
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              mode:
                                                description: |-
                                                  Optional: mode bits used to set permissions on this file, must be an octal value
                                                  between 0000 and 0777 or a decimal value between 0 and 511.
                                                  YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                  If not specified, the volume defaultMode will be used.
                                                  This might be in conflict with other options that affect the file
                                                  mode, like fsGroup, and the result can be other mode bits set.
                                                format: int32
                                                type: integer
                                              path:
                                                description: 'Required: Path is  the
                                                  relative path name of the file to
                                                  be created. Must not be absolute
                                                  or contain the ''..'' path. Must
                                                  be utf-8 encoded. The first item
                                                  of the relative path must not start
                                                  with ''..'''
                                                type: string
                                              resourceFieldRef:
                                                description: |-
                                                  Selects a resource of the container: only resources limits and requests
                                                  (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                                properties:
                                                  containerName:
                                                    description: 'Container name:
                                                      required for volumes, optional
                                                      for env vars'
                                                    type: string
                                                  divisor:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Specifies the output
                                                      format of the exposed resources,
                                                      defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource
                                                      to select'
                                                    type: string
                                                required:
                                                - resource
                                                type: object
                                                x-kubernetes-map-type: atomic
                                            required:
                                            - path
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    emptyDir:
                                      description: |-
                                        emptyDir represents a temporary directory that shares a pod's lifetime.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                                      properties:
                                        medium:
                                          description: |-
                                            medium represents what type of storage medium should back this directory.
                                            The default is "" which means to use the node's default medium.
                                            Must be an empty string (default) or Memory.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                                          type: string
                                        sizeLimit:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            sizeLimit is the total amount of local storage required for this EmptyDir volume.
                                            The size limit is also applicable for memory medium.
                                            The maximum usage on memory medium EmptyDir would be the minimum value between
                                            the SizeLimit specified here and the sum of memory limits of all containers in a pod.
                                            The default is nil which means that the limit is undefined.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                      type: object
                                    ephemeral:
                                      description: |-
                                        ephemeral represents a volume that is handled by a cluster storage driver.
                                        The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
                                        and deleted when the pod is removed.

                                        Use this if:
                                        a) the volume is only needed while the pod runs,
                                        b) features of normal volumes like restoring from snapshot or capacity
                                           tracking are needed,
                                        c) the storage driver is specified through a storage class, and
                                        d) the storage driver supports dynamic volume provisioning through
                                           a PersistentVolumeClaim (see EphemeralVolumeSource for more
                                           information on the connection between this volume type
                                           and PersistentVolumeClaim).

                                        Use PersistentVolumeClaim or one of the vendor-specific
                                        APIs for volumes that persist for longer than the lifecycle
                                        of an individual pod.

                                        Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
                                        be used that way - see the documentation of the driver for
                                        more information.

                                        A pod can use both types of ephemeral volumes and
                                        persistent volumes at the same time.
                                      properties:
                                        volumeClaimTemplate:
                                          description: |-
                                            Will be used to create a stand-alone PVC to provision the volume.
                                            The pod in which this EphemeralVolumeSource is embedded will be the
                                            owner of the PVC, i.e. the PVC will be deleted together with the
                                            pod.  The name of the PVC will be `<pod name>-<volume name>` where
                                            `<volume name>` is the name from the `PodSpec.Volumes` array
                                            entry. Pod validation will reject the pod if the concatenated name
                                            is not valid for a PVC (for example, too long).

                                            An existing PVC with that name that is not owned by the pod
                                            will *not* be used for the pod to avoid using an unrelated
                                            volume by mistake. Starting the pod is then blocked until
                                            the unrelated PVC is removed. If such a pre-created PVC is
                                            meant to be used by the pod, the PVC has to updated with an
                                            owner reference to the pod once the pod exists. Normally
                                            this should not be necessary, but it may be useful when
                                            manually reconstructing a broken cluster.

                                            This field is read-only and no changes will be made by Kubernetes
                                            to the PVC after it has been created.

                                            Required, must not be nil.
                                          properties:
                                            metadata:
                                              description: |-
                                                May contain labels and annotations that will be copied into the PVC
                                                when creating it. No other fields are allowed and will be rejected during
                                                validation.
                                              properties:
                                                annotations:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                                finalizers:
                                                  items:
                                                    type: string
                                                  type: array
                                                labels:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                                name:
                                                  type: string
                                                namespace:
                                                  type: string
                                              type: object
                                            spec:
                                              description: |-
                                                The specification for the PersistentVolumeClaim. The entire content is
                                                copied unchanged into the PVC that gets created from this
                                                template. The same fields as in a PersistentVolumeClaim
                                                are also valid here.
                                              properties:
                                                accessModes:
                                                  description: |-
                                                    accessModes contains the desired access modes the volume should have.
                                                    More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                dataSource:
                                                  description: |-
                                                    dataSource field can be used to specify either:
                                                    * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                                    * An existing PVC (PersistentVolumeClaim)
                                                    If the provisioner or an external controller can support the specified data source,
                                                    it will create a new volume based on the contents of the specified data source.
                                                    When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
                                                    and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
                                                    If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                                                  properties:
                                                    apiGroup:
                                                      description: |-
                                                        APIGroup is the group for the resource being referenced.
                                                        If APIGroup is not specified, the specified Kind must be in the core API group.
                                                        For any other third-party types, APIGroup is required.
                                                      type: string
                                                    kind:
                                                      description: Kind is the type
                                                        of resource being referenced
                                                      type: string
                                                    name:
                                                      description: Name is the name
                                                        of resource being referenced
                                                      type: string
                                                  required:
                                                  - kind
                                                  - name
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                dataSourceRef:
                                                  description: |-
                                                    dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
                                                    volume is desired. This may be any object from a non-empty API group (non
                                                    core object) or a PersistentVolumeClaim object.
                                                    When this field is specified, volume binding will only succeed if the type of
                                                    the specified object matches some installed volume populator or dynamic
                                                    provisioner.
                                                    This field will replace the functionality of the dataSource field and as such
                                                    if both fields are non-empty, they must have the same value. For backwards
                                                    compatibility, when namespace isn't specified in dataSourceRef,
                                                    both fields (dataSource and dataSourceRef) will be set to the same
                                                    value automatically if one of them is empty and the other is non-empty.
                                                    When namespace is specified in dataSourceRef,
                                                    dataSource isn't set to the same value and must be empty.
                                                    There are three important differences between dataSource and dataSourceRef:
                                                    * While dataSource only allows two specific types of objects, dataSourceRef
                                                      allows any non-core object, as well as PersistentVolumeClaim objects.
                                                    * While dataSource ignores disallowed values (dropping them), dataSourceRef
                                                      preserves all values, and generates an error if a disallowed value is
                                                      specified.
                                                    * While dataSource only allows local objects, dataSourceRef allows objects
                                                      in any namespaces.
                                                    (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                                                    (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                                  properties:
                                                    apiGroup:
                                                      description: |-
                                                        APIGroup is the group for the resource being referenced.
                                                        If APIGroup is not specified, the specified Kind must be in the core API group.
                                                        For any other third-party types, APIGroup is required.
                                                      type: string
                                                    kind:
                                                      description: Kind is the type
                                                        of resource being referenced
                                                      type: string
                                                    name:
                                                      description: Name is the name
                                                        of resource being referenced
                                                      type: string
                                                    namespace:
                                                      description: |-
                                                        Namespace is the namespace of resource being referenced
                                                        Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                                                        (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                                      type: string
                                                  required:
                                                  - kind
                                                  - name
                                                  type: object
                                                resources:
                                                  description: |-
                                                    resources represents the minimum resources the volume should have.
                                                    If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
                                                    that are lower than previous value but must still be higher than capacity recorded in the
                                                    status field of the claim.
                                                    More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                                                  properties:
                                                    limits:
                                                      additionalProperties:
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                        x-kubernetes-int-or-string: true
                                                      description: |-
                                                        Limits describes the maximum amount of compute resources allowed.
                                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                                      type: object
                                                    requests:
                                                      additionalProperties:
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                        x-kubernetes-int-or-string: true
                                                      description: |-
                                                        Requests describes the minimum amount of compute resources required.
                                                        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                                        otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                                      type: object
                                                  type: object
                                                selector:
                                                  description: selector is a label
                                                    query over volumes to consider
                                                    for binding.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: |-
                                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: |-
                                                              operator represents a key's relationship to a set of values.
                                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: |-
                                                              values is an array of string values. If the operator is In or NotIn,
                                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                              the values array must be empty. This array is replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: |-
                                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                storageClassName:
                                                  description: |-
                                                    storageClassName is the name of the StorageClass required by the claim.
                                                    More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                                                  type: string
                                                volumeAttributesClassName:
                                                  description: |-
                                                    volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
                                                    If specified, the CSI driver will create or update the volume with the attributes defined
                                                    in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
                                                    it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
                                                    will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
                                                    If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
                                                    will be set by the persistentvolume controller if it exists.
                                                    If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
                                                    set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
                                                    exists.
                                                    More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
                                                    (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).
                                                  type: string
                                                volumeMode:
                                                  description: |-
                                                    volumeMode defines what type of volume is required by the claim.
                                                    Value of Filesystem is implied when not included in claim spec.
                                                  type: string
                                                volumeName:
                                                  description: volumeName is the binding
                                                    reference to the PersistentVolume
                                                    backing this claim.
                                                  type: string
                                              type: object
                                          required:
                                          - spec
                                          type: object
                                      type: object
                                    fc:
                                      description: fc represents a Fibre Channel resource
                                        that is attached to a kubelet's host machine
                                        and then exposed to the pod.
                                      properties:
                                        fsType:
                                          description: |-
                                            fsType is the filesystem type to mount.
                                            Must be a filesystem type supported by the host operating system.
                                            Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                          type: string
                                        lun:
                                          description: 'lun is Optional: FC target
                                            lun number'
                                          format: int32
                                          type: integer
                                        readOnly:
                                          description: |-
                                            readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        targetWWNs:
                                          description: 'targetWWNs is Optional: FC
                                            target worldwide names (WWNs)'
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        wwids:
                                          description: |-
                                            wwids Optional: FC volume world wide identifiers (wwids)
                                            Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    flexVolume:
                                      description: |-
                                        flexVolume represents a generic volume resource that is
                                        provisioned/attached using an exec based plugin.
                                        Deprecated: FlexVolume is deprecated. Consider using a CSIDriver instead.
                                      properties:
                                        driver:
                                          description: driver is the name of the driver
                                            to use for this volume.
                                          type: string
                                        fsType:
                                          description: |-
                                            fsType is the filesystem type to mount.
                                            Must be a filesystem type supported by the host operating system.
                                            Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
                                          type: string
                                        options:
                                          additionalProperties:
                                            type: string
                                          description: 'options is Optional: this
                                            field holds extra command options if any.'
                                          type: object
                                        readOnly:
                                          description: |-
                                            readOnly is Optional: defaults to false (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        secretRef:
                                          description: |-
                                            secretRef is Optional: secretRef is reference to the secret object containing
                                            sensitive information to pass to the plugin scripts. This may be
                                            empty if no secret object is specified. If the secret object
                                            contains more than one secret, all secrets are passed to the plugin
                                            scripts.
                                          properties:
                                            name:
                                              default: ""
                                              description: |-
                                                Name of the referent.
                                                This field is effectively required, but due to backwards compatibility is
                                                allowed to be empty. Instances of this type with an empty value here are
                                                almost certainly wrong.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      required:
                                      - driver
                                      type: object
                                    flocker:
                                      description: |-
                                        flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running.
                                        Deprecated: Flocker is deprecated and the in-tree flocker type is no longer supported.
                                      properties:
                                        datasetName:
                                          description: |-
                                            datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
                                            should be considered as deprecated
                                          type: string
                                        datasetUUID:
                                          description: datasetUUID is the UUID of
                                            the dataset. This is unique identifier
                                            of a Flocker dataset
                                          type: string
                                      type: object
                                    gcePersistentDisk:
                                      description: |-
                                        gcePersistentDisk represents a GCE Disk resource that is attached to a
                                        kubelet's host machine and then exposed to the pod.
                                        Deprecated: GCEPersistentDisk is deprecated. All operations for the in-tree
                                        gcePersistentDisk type are redirected to the pd.csi.storage.gke.io CSI driver.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                      properties:
                                        fsType:
                                          description: |-
                                            fsType is filesystem type of the volume that you want to mount.
                                            Tip: Ensure that the filesystem type is supported by the host operating system.
                                            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                          type: string
                                        partition:
                                          description: |-
                                            partition is the partition in the volume that you want to mount.
                                            If omitted, the default is to mount by volume name.
                                            Examples: For volume /dev/sda1, you specify the partition as "1".
                                            Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                          format: int32
                                          type: integer
                                        pdName:
                                          description: |-
                                            pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly here will force the ReadOnly setting in VolumeMounts.
                                            Defaults to false.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                          type: boolean
                                      required:
                                      - pdName
                                      type: object
                                    gitRepo:
                                      description: |-
                                        gitRepo represents a git repository at a particular revision.
                                        Deprecated: GitRepo is deprecated. To provision a container with a git repo, mount an
                                        EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
                                        into the Pod's container.
                                      properties:
                                        directory:
                                          description: |-
                                            directory is the target directory name.
                                            Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
                                            git repository.  Otherwise, if specified, the volume will contain the git repository in
                                            the subdirectory with the given name.
                                          type: string
                                        repository:
                                          description: repository is the URL
                                          type: string
                                        revision:
                                          description: revision is the commit hash
                                            for the specified revision.
                                          type: string
                                      required:
                                      - repository
                                      type: object
                                    glusterfs:
                                      description: |-
                                        glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
                                        Deprecated: Glusterfs is deprecated and the in-tree glusterfs type is no longer supported.
                                        More info: https://examples.k8s.io/volumes/glusterfs/README.md
                                      properties:
                                        endpoints:
                                          description: |-
                                            endpoints is the endpoint name that details Glusterfs topology.
                                            More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                          type: string
                                        path:
                                          description: |-
                                            path is the Glusterfs volume path.
                                            More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
                                            Defaults to false.
                                            More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                          type: boolean
                                      required:
                                      - endpoints
                                      - path
                                      type: object
                                    hostPath:
                                      description: |-
                                        hostPath represents a pre-existing file or directory on the host
                                        machine that is directly exposed to the container. This is generally
                                        used for system agents or other privileged things that are allowed
                                        to see the host machine. Most containers will NOT need this.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                      properties:
                                        path:
                                          description: |-
                                            path of the directory on the host.
                                            If the path is a symlink, it will follow the link to the real path.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                          type: string
                                        type:
                                          description: |-
                                            type for HostPath Volume
                                            Defaults to ""
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                          type: string
                                      required:
                                      - path
                                      type: object
                                    image:
                                      description: |-
                                        image represents an OCI object (a container image or artifact) pulled and mounted on the kubelet's host machine.
                                        The volume is resolved at pod startup depending on which PullPolicy value is provided:

                                        - Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
                                        - Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
                                        - IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.

                                        The volume gets re-resolved if the pod gets deleted and recreated, which means that new remote content will become available on pod recreation.
                                        A failure to resolve or pull the image during pod startup will block containers from starting and may add significant latency. Failures will be retried using normal volume backoff and will be reported on the pod reason and message.
                                        The types of objects that may be mounted by this volume are defined by the container runtime implementation on a host machine and at minimum must include all valid types supported by the container image field.
                                        The OCI object gets mounted in a single directory (spec.containers[*].volumeMounts.mountPath) by merging the manifest layers in the same way as for container images.
                                        The volume will be mounted read-only (ro) and non-executable files (noexec).
                                        Sub path mounts for containers are not supported (spec.containers[*].volumeMounts.subpath).
                                        The field spec.securityContext.fsGroupChangePolicy has no effect on this volume type.
                                      properties:
                                        pullPolicy:
                                          description: |-
                                            Policy for pulling OCI objects. Possible values are:
                                            Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
                                            Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
                                            IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.
                                            Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                                          type: string
                                        reference:
                                          description: |-
                                            Required: Image or artifact reference to be used.
                                            Behaves in the same way as pod.spec.containers[*].image.
                                            Pull secrets will be assembled in the same way as for the container image by looking up node credentials, SA image pull secrets, and pod spec image pull secrets.
                                            More info: https://kubernetes.io/docs/concepts/containers/images
                                            This field is optional to allow higher level config management to default or override
                                            container images in workload controllers like Deployments and StatefulSets.
                                          type: string
                                      type: object
                                    iscsi:
                                      description: |-
                                        iscsi represents an ISCSI Disk resource that is attached to a
                                        kubelet's host machine and then exposed to the pod.
                                        More info: https://examples.k8s.io/volumes/iscsi/README.md
                                      properties:
                                        chapAuthDiscovery:
                                          description: chapAuthDiscovery defines whether
                                            support iSCSI Discovery CHAP authentication
                                          type: boolean
                                        chapAuthSession:
                                          description: chapAuthSession defines whether
                                            support iSCSI Session CHAP authentication
                                          type: boolean
                                        fsType:
                                          description: |-
                                            fsType is the filesystem type of the volume that you want to mount.
                                            Tip: Ensure that the filesystem type is supported by the host operating system.
                                            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                          type: string
                                        initiatorName:
                                          description: |-
                                            initiatorName is the custom iSCSI Initiator Name.
                                            If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
                                            <target portal>:<volume name> will be created for the connection.
                                          type: string
                                        iqn:
                                          description: iqn is the target iSCSI Qualified
                                            Name.
                                          type: string
                                        iscsiInterface:
                                          default: default
                                          description: |-
                                            iscsiInterface is the interface Name that uses an iSCSI transport.
                                            Defaults to 'default' (tcp).
                                          type: string
                                        lun:
                                          description: lun represents iSCSI Target
                                            Lun number.
                                          format: int32
                                          type: integer
                                        portals:
                                          description: |-
                                            portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
                                            is other than default (typically TCP ports 860 and 3260).
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        readOnly:
                                          description: |-
                                            readOnly here will force the ReadOnly setting in VolumeMounts.
                                            Defaults to false.
                                          type: boolean
                                        secretRef:
                                          description: secretRef is the CHAP Secret
                                            for iSCSI target and initiator authentication
                                          properties:
                                            name:
                                              default: ""
                                              description: |-
                                                Name of the referent.
                                                This field is effectively required, but due to backwards compatibility is
                                                allowed to be empty. Instances of this type with an empty value here are
                                                almost certainly wrong.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        targetPortal:
                                          description: |-
                                            targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
                                            is other than default (typically TCP ports 860 and 3260).
                                          type: string
                                      required:
                                      - iqn
                                      - lun
                                      - targetPortal
                                      type: object
                                    name:
                                      description: |-
                                        name of the volume.
                                        Must be a DNS_LABEL and unique within the pod.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    nfs:
                                      description: |-
                                        nfs represents an NFS mount on the host that shares a pod's lifetime
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                      properties:
                                        path:
                                          description: |-
                                            path that is exported by the NFS server.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly here will force the NFS export to be mounted with read-only permissions.
                                            Defaults to false.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                          type: boolean
                                        server:
                                          description: |-
                                            server is the hostname or IP address of the NFS server.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                          type: string
                                      required:
                                      - path
                                      - server
                                      type: object
                                    persistentVolumeClaim:
                                      description: |-
                                        persistentVolumeClaimVolumeSource represents a reference to a
                                        PersistentVolumeClaim in the same namespace.
                                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                      properties:
                                        claimName:
                                          description: |-
                                            claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly Will force the ReadOnly setting in VolumeMounts.
                                            Default false.
                                          type: boolean
                                      required:
                                      - claimName
                                      type: object
                                    photonPersistentDisk:
                                      description: |-
                                        photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine.
                                        Deprecated: PhotonPersistentDisk is deprecated and the in-tree photonPersistentDisk type is no longer supported.
                                      properties:
                                        fsType:
                                          description: |-
                                            fsType is the filesystem type to mount.
                                            Must be a filesystem type supported by the host operating system.
                                            Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                          type: string
                                        pdID:
                                          description: pdID is the ID that identifies
                                            Photon Controller persistent disk
                                          type: string
                                      required:
                                      - pdID
                                      type: object
                                    portworxVolume:
                                      description: |-
                                        portworxVolume represents a portworx volume attached and mounted on kubelets host machine.
                                        Deprecated: PortworxVolume is deprecated. All operations for the in-tree portworxVolume type
                                        are redirected to the pxd.portworx.com CSI driver when the CSIMigrationPortworx feature-gate
                                        is on.
                                      properties:
                                        fsType:
                                          description: |-
                                            fSType represents the filesystem type to mount
                                            Must be a filesystem type supported by the host operating system.
                                            Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly defaults to false (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        volumeID:
                                          description: volumeID uniquely identifies
                                            a Portworx volume
                                          type: string
                                      required:
                                      - volumeID
                                      type: object
                                    projected:
                                      description: projected items for all in one
                                        resources secrets, configmaps, and downward
                                        API
                                      properties:
                                        defaultMode:
                                          description: |-
                                            defaultMode are the mode bits used to set permissions on created files by default.
                                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                            Directories within the path are not affected by this setting.
                                            This might be in conflict with other options that affect the file
                                            mode, like fsGroup, and the result can be other mode bits set.
                                          format: int32
                                          type: integer
                                        sources:
                                          description: |-
                                            sources is the list of volume projections. Each entry in this list
                                            handles one source.
                                          items:
                                            description: |-
                                              Projection that may be projected along with other supported volume types.
                                              Exactly one of these fields must be set.
                                            properties:
                                              clusterTrustBundle:
                                                description: |-
                                                  ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
                                                  of ClusterTrustBundle objects in an auto-updating file.

                                                  Alpha, gated by the ClusterTrustBundleProjection feature gate.

                                                  ClusterTrustBundle objects can either be selected by name, or by the
                                                  combination of signer name and a label selector.

                                                  Kubelet performs aggressive normalization of the PEM contents written
                                                  into the pod filesystem.  Esoteric PEM features such as inter-block
                                                  comments and block headers are stripped.  Certificates are deduplicated.
                                                  The ordering of certificates within the file is arbitrary, and Kubelet
                                                  may change the order over time.
                                                properties:
                                                  labelSelector:
                                                    description: |-
                                                      Select all ClusterTrustBundles that match this label selector.  Only has
                                                      effect if signerName is set.  Mutually-exclusive with name.  If unset,
                                                      interpreted as "match nothing".  If set but empty, interpreted as "match
                                                      everything".
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: |-
                                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                                            relates the key and values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: |-
                                                                operator represents a key's relationship to a set of values.
                                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: |-
                                                                values is an array of string values. If the operator is In or NotIn,
                                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                the values array must be empty. This array is replaced during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: |-
                                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  name:
                                                    description: |-
                                                      Select a single ClusterTrustBundle by object name.  Mutually-exclusive
                                                      with signerName and labelSelector.
                                                    type: string
                                                  optional:
                                                    description: |-
                                                      If true, don't block pod startup if the referenced ClusterTrustBundle(s)
                                                      aren't available.  If using name, then the named ClusterTrustBundle is
                                                      allowed not to exist.  If using signerName, then the combination of
                                                      signerName and labelSelector is allowed to match zero
                                                      ClusterTrustBundles.
                                                    type: boolean
                                                  path:
                                                    description: Relative path from
                                                      the volume root to write the
                                                      bundle.
                                                    type: string
                                                  signerName:
                                                    description: |-
                                                      Select all ClusterTrustBundles that match this signer name.
                                                      Mutually-exclusive with name.  The contents of all selected
                                                      ClusterTrustBundles will be unified and deduplicated.
                                                    type: string
                                                required:
                                                - path
                                                type: object
                                              configMap:
                                                description: configMap information
                                                  about the configMap data to project
                                                properties:
                                                  items:
                                                    description: |-
                                                      items if unspecified, each key-value pair in the Data field of the referenced
                                                      ConfigMap will be projected into the volume as a file whose name is the
                                                      key and content is the value. If specified, the listed keys will be
                                                      projected into the specified paths, and unlisted keys will not be
                                                      present. If a key is specified which is not present in the ConfigMap,
                                                      the volume setup will error unless it is marked optional. Paths must be
                                                      relative and may not contain the '..' path or start with '..'.
                                                    items:
                                                      description: Maps a string key
                                                        to a path within a volume.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            key to project.
                                                          type: string
                                                        mode:
                                                          description: |-
                                                            mode is Optional: mode bits used to set permissions on this file.
                                                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                            If not specified, the volume defaultMode will be used.
                                                            This might be in conflict with other options that affect the file
                                                            mode, like fsGroup, and the result can be other mode bits set.
                                                          format: int32
                                                          type: integer
                                                        path:
                                                          description: |-
                                                            path is the relative path of the file to map the key to.
                                                            May not be an absolute path.
                                                            May not contain the path element '..'.
                                                            May not start with the string '..'.
                                                          type: string
                                                      required:
                                                      - key
                                                      - path
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  name:
                                                    default: ""
                                                    description: |-
                                                      Name of the referent.
                                                      This field is effectively required, but due to backwards compatibility is
                                                      allowed to be empty. Instances of this type with an empty value here are
                                                      almost certainly wrong.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    type: string
                                                  optional:
                                                    description: optional specify
                                                      whether the ConfigMap or its
                                                      keys must be defined
                                                    type: boolean
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              downwardAPI:
                                                description: downwardAPI information
                                                  about the downwardAPI data to project
                                                properties:
                                                  items:
                                                    description: Items is a list of
                                                      DownwardAPIVolume file
                                                    items:
                                                      description: DownwardAPIVolumeFile
                                                        represents information to
                                                        create the file containing
                                                        the pod field
                                                      properties:
                                                        fieldRef:
                                                          description: 'Required:
                                                            Selects a field of the
                                                            pod: only annotations,
                                                            labels, name, namespace
                                                            and uid are supported.'
                                                          properties:
                                                            apiVersion:
                                                              description: Version
                                                                of the schema the
                                                                FieldPath is written
                                                                in terms of, defaults
                                                                to "v1".
                                                              type: string
                                                            fieldPath:
                                                              description: Path of
                                                                the field to select
                                                                in the specified API
                                                                version.
                                                              type: string
                                                          required:
                                                          - fieldPath
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        mode:
                                                          description: |-
                                                            Optional: mode bits used to set permissions on this file, must be an octal value
                                                            between 0000 and 0777 or a decimal value between 0 and 511.
                                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                            If not specified, the volume defaultMode will be used.
                                                            This might be in conflict with other options that affect the file
                                                            mode, like fsGroup, and the result can be other mode bits set.
                                                          format: int32
                                                          type: integer
                                                        path:
                                                          description: 'Required:
                                                            Path is  the relative
                                                            path name of the file
                                                            to be created. Must not
                                                            be absolute or contain
                                                            the ''..'' path. Must
                                                            be utf-8 encoded. The
                                                            first item of the relative
                                                            path must not start with
                                                            ''..'''
                                                          type: string
                                                        resourceFieldRef:
                                                          description: |-
                                                            Selects a resource of the container: only resources limits and requests
                                                            (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                                          properties:
                                                            containerName:
                                                              description: 'Container
                                                                name: required for
                                                                volumes, optional
                                                                for env vars'
                                                              type: string
                                                            divisor:
                                                              anyOf:
                                                              - type: integer
                                                              - type: string
                                                              description: Specifies
                                                                the output format
                                                                of the exposed resources,
                                                                defaults to "1"
                                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                              x-kubernetes-int-or-string: true
                                                            resource:
                                                              description: 'Required:
                                                                resource to select'
                                                              type: string
                                                          required:
                                                          - resource
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                      required:
                                                      - path
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                type: object
                                              secret:
                                                description: secret information about
                                                  the secret data to project
                                                properties:
                                                  items:
                                                    description: |-
                                                      items if unspecified, each key-value pair in the Data field of the referenced
                                                      Secret will be projected into the volume as a file whose name is the
                                                      key and content is the value. If specified, the listed keys will be
                                                      projected into the specified paths, and unlisted keys will not be
                                                      present. If a key is specified which is not present in the Secret,
                                                      the volume setup will error unless it is marked optional. Paths must be
                                                      relative and may not contain the '..' path or start with '..'.
                                                    items:
                                                      description: Maps a string key
                                                        to a path within a volume.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            key to project.
                                                          type: string
                                                        mode:
                                                          description: |-
                                                            mode is Optional: mode bits used to set permissions on this file.
                                                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                            If not specified, the volume defaultMode will be used.
                                                            This might be in conflict with other options that affect the file
                                                            mode, like fsGroup, and the result can be other mode bits set.
                                                          format: int32
                                                          type: integer
                                                        path:
                                                          description: |-
                                                            path is the relative path of the file to map the key to.
                                                            May not be an absolute path.
                                                            May not contain the path element '..'.
                                                            May not start with the string '..'.
                                                          type: string
                                                      required:
                                                      - key
                                                      - path
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  name:
                                                    default: ""
                                                    description: |-
                                                      Name of the referent.
                                                      This field is effectively required, but due to backwards compatibility is
                                                      allowed to be empty. Instances of this type with an empty value here are
                                                      almost certainly wrong.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    type: string
                                                  optional:
                                                    description: optional field specify
                                                      whether the Secret or its key
                                                      must be defined
                                                    type: boolean
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              serviceAccountToken:
                                                description: serviceAccountToken is
                                                  information about the serviceAccountToken
                                                  data to project
                                                properties:
                                                  audience:
                                                    description: |-
                                                      audience is the intended audience of the token. A recipient of a token
                                                      must identify itself with an identifier specified in the audience of the
                                                      token, and otherwise should reject the token. The audience defaults to the
                                                      identifier of the apiserver.
                                                    type: string
                                                  expirationSeconds:
                                                    description: |-
                                                      expirationSeconds is the requested duration of validity of the service
                                                      account token. As the token approaches expiration, the kubelet volume
                                                      plugin will proactively rotate the service account token. The kubelet will
                                                      start trying to rotate the token if the token is older than 80 percent of
                                                      its time to live or if the token is older than 24 hours.Defaults to 1 hour
                                                      and must be at least 10 minutes.
                                                    format: int64
                                                    type: integer
                                                  path:
                                                    description: |-
                                                      path is the path relative to the mount point of the file to project the
                                                      token into.
                                                    type: string
                                                required:
                                                - path
                                                type: object
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    quobyte:
                                      description: |-
                                        quobyte represents a Quobyte mount on the host that shares a pod's lifetime.
                                        Deprecated: Quobyte is deprecated and the in-tree quobyte type is no longer supported.
                                      properties:
                                        group:
                                          description: |-
                                            group to map volume access to
                                            Default is no group
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly here will force the Quobyte volume to be mounted with read-only permissions.
                                            Defaults to false.
                                          type: boolean
                                        registry:
                                          description: |-
                                            registry represents a single or multiple Quobyte Registry services
                                            specified as a string as host:port pair (multiple entries are separated with commas)
                                            which acts as the central registry for volumes
                                          type: string
                                        tenant:
                                          description: |-
                                            tenant owning the given Quobyte volume in the Backend
                                            Used with dynamically provisioned Quobyte volumes, value is set by the plugin
                                          type: string
                                        user:
                                          description: |-
                                            user to map volume access to
                                            Defaults to serivceaccount user
                                          type: string
                                        volume:
                                          description: volume is a string that references
                                            an already created Quobyte volume by name.
                                          type: string
                                      required:
                                      - registry
                                      - volume
                                      type: object
                                    rbd:
                                      description: |-
                                        rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.
                                        Deprecated: RBD is deprecated and the in-tree rbd type is no longer supported.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md
                                      properties:
                                        fsType:
                                          description: |-
                                            fsType is the filesystem type of the volume that you want to mount.
                                            Tip: Ensure that the filesystem type is supported by the host operating system.
                                            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                          type: string
                                        image:
                                          description: |-
                                            image is the rados image name.
                                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                          type: string
                                        keyring:
                                          default: /etc/ceph/keyring
                                          description: |-
                                            keyring is the path to key ring for RBDUser.
                                            Default is /etc/ceph/keyring.
                                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                          type: string
                                        monitors:
                                          description: |-
                                            monitors is a collection of Ceph monitors.
                                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        pool:
                                          default: rbd
                                          description: |-
                                            pool is the rados pool name.
                                            Default is rbd.
                                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly here will force the ReadOnly setting in VolumeMounts.
                                            Defaults to false.
                                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                          type: boolean
                                        secretRef:
                                          description: |-
                                            secretRef is name of the authentication secret for RBDUser. If provided
                                            overrides keyring.
                                            Default is nil.
                                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                          properties:
                                            name:
                                              default: ""
                                              description: |-
                                                Name of the referent.
                                                This field is effectively required, but due to backwards compatibility is
                                                allowed to be empty. Instances of this type with an empty value here are
                                                almost certainly wrong.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        user:
                                          default: admin
                                          description: |-
                                            user is the rados user name.
                                            Default is admin.
                                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                          type: string
                                      required:
                                      - image
                                      - monitors
                                      type: object
                                    scaleIO:
                                      description: |-
                                        scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
                                        Deprecated: ScaleIO is deprecated and the in-tree scaleIO type is no longer supported.
                                      properties:
                                        fsType:
                                          default: xfs
                                          description: |-
                                            fsType is the filesystem type to mount.
                                            Must be a filesystem type supported by the host operating system.
                                            Ex. "ext4", "xfs", "ntfs".
                                            Default is "xfs".
                                          type: string
                                        gateway:
                                          description: gateway is the host address
                                            of the ScaleIO API Gateway.
                                          type: string
                                        protectionDomain:
                                          description: protectionDomain is the name
                                            of the ScaleIO Protection Domain for the
                                            configured storage.
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly Defaults to false (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        secretRef:
                                          description: |-
                                            secretRef references to the secret for ScaleIO user and other
                                            sensitive information. If this is not provided, Login operation will fail.
                                          properties:
                                            name:
                                              default: ""
                                              description: |-
                                                Name of the referent.
                                                This field is effectively required, but due to backwards compatibility is
                                                allowed to be empty. Instances of this type with an empty value here are
                                                almost certainly wrong.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        sslEnabled:
                                          description: sslEnabled Flag enable/disable
                                            SSL communication with Gateway, default
                                            false
                                          type: boolean
                                        storageMode:
                                          default: ThinProvisioned
                                          description: |-
                                            storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
                                            Default is ThinProvisioned.
                                          type: string
                                        storagePool:
                                          description: storagePool is the ScaleIO
                                            Storage Pool associated with the protection
                                            domain.
                                          type: string
                                        system:
                                          description: system is the name of the storage
                                            system as configured in ScaleIO.
                                          type: string
                                        volumeName:
                                          description: |-
                                            volumeName is the name of a volume already created in the ScaleIO system
                                            that is associated with this volume source.
                                          type: string
                                      required:
                                      - gateway
                                      - secretRef
                                      - system
                                      type: object
                                    secret:
                                      description: |-
                                        secret represents a secret that should populate this volume.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                                      properties:
                                        defaultMode:
                                          description: |-
                                            defaultMode is Optional: mode bits used to set permissions on created files by default.
                                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                            YAML accepts both octal and decimal values, JSON requires decimal values
                                            for mode bits. Defaults to 0644.
                                            Directories within the path are not affected by this setting.
                                            This might be in conflict with other options that affect the file
                                            mode, like fsGroup, and the result can be other mode bits set.
                                          format: int32
                                          type: integer
                                        items:
                                          description: |-
                                            items If unspecified, each key-value pair in the Data field of the referenced
                                            Secret will be projected into the volume as a file whose name is the
                                            key and content is the value. If specified, the listed keys will be
                                            projected into the specified paths, and unlisted keys will not be
                                            present. If a key is specified which is not present in the Secret,
                                            the volume setup will error unless it is marked optional. Paths must be
                                            relative and may not contain the '..' path or start with '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: |-
                                                  mode is Optional: mode bits used to set permissions on this file.
                                                  Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                  YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                  If not specified, the volume defaultMode will be used.
                                                  This might be in conflict with other options that affect the file
                                                  mode, like fsGroup, and the result can be other mode bits set.
                                                format: int32
                                                type: integer
                                              path:
                                                description: |-
                                                  path is the relative path of the file to map the key to.
                                                  May not be an absolute path.
                                                  May not contain the path element '..'.
                                                  May not start with the string '..'.
                                                type: string
                                            required:
                                            - key
                                            - path
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        optional:
                                          description: optional field specify whether
                                            the Secret or its keys must be defined
                                          type: boolean
                                        secretName:
                                          description: |-
                                            secretName is the name of the secret in the pod's namespace to use.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                                          type: string
                                      type: object
                                    storageos:
                                      description: |-
                                        storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
                                        Deprecated: StorageOS is deprecated and the in-tree storageos type is no longer supported.
                                      properties:
                                        fsType:
                                          description: |-
                                            fsType is the filesystem type to mount.
                                            Must be a filesystem type supported by the host operating system.
                                            Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                          type: string
                                        readOnly:
                                          description: |-
                                            readOnly defaults to false (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        secretRef:
                                          description: |-
                                            secretRef specifies the secret to use for obtaining the StorageOS API
                                            credentials.  If not specified, default values will be attempted.
                                          properties:
                                            name:
                                              default: ""
                                              description: |-
                                                Name of the referent.
                                                This field is effectively required, but due to backwards compatibility is
                                                allowed to be empty. Instances of this type with an empty value here are
                                                almost certainly wrong.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        volumeName:
                                          description: |-
                                            volumeName is the human-readable name of the StorageOS volume.  Volume
                                            names are only unique within a namespace.
                                          type: string
                                        volumeNamespace:
                                          description: |-
                                            volumeNamespace specifies the scope of the volume within StorageOS.  If no
                                            namespace is specified then the Pod's namespace will be used.  This allows the
                                            Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
                                            Set VolumeName to any name to override the default behaviour.
                                            Set to "default" if you are not using namespaces within StorageOS.
                                            Namespaces that do not pre-exist within StorageOS will be created.
                                          type: string
                                      type: object
                                    vsphereVolume:
                                      description: |-
                                        vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine.
                                        Deprecated: VsphereVolume is deprecated. All operations for the in-tree vsphereVolume type
                                        are redirected to the csi.vsphere.vmware.com CSI driver.
                                      properties:
                                        fsType:
                                          description: |-
                                            fsType is filesystem type to mount.
                                            Must be a filesystem type supported by the host operating system.
                                            Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                          type: string
                                        storagePolicyID:
                                          description: storagePolicyID is the storage
                                            Policy Based Management (SPBM) profile
                                            ID associated with the StoragePolicyName.
                                          type: string
                                        storagePolicyName:
                                          description: storagePolicyName is the storage
                                            Policy Based Management (SPBM) profile
                                            name.
                                          type: string
                                        volumePath:
                                          description: volumePath is the path that
                                            identifies vSphere volume vmdk
                                          type: string
                                      required:
                                      - volumePath
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            required:
                            - containers
                            type: object
                        type: object
                      replicas:
                        description: |-
                          Replicas describes the number of desired pods.
                          This is a pointer to distinguish between explicit zero and not specified.
                          This is effectively shorthand for setting a scaling minimum and maximum
                          to the same value. This field and the scaling field are mutually exclusive:
                          You can only configure one or the other.
                        format: int32
                        type: integer
                      rollout:
                        description: Rollout describes a custom rollout strategy.
                        properties:
                          strategy:
                            description: Strategy contains the deployment strategy
                              for rollout.
                            properties:
                              blueGreen:
                                description: BlueGreen holds the options specific
                                  for Blue Green Deployments.
                                properties:
                                  promotion:
                                    description: Promotion defines how the operator
                                      handles promotion of resources.
                                    properties:
                                      strategy:
                                        default: BreakBeforePromotion
                                        description: |-
                                          Strategy indicates how you want the operator to handle the promotion of
                                          the preview (green) resources (Deployments and Services) after all workflows
                                          and tests succeed, OR if you even want it to break before performing
                                          the promotion to allow manual inspection.
                                        enum:
                                        - BreakBeforePromotion
                                        type: string
                                    required:
                                    - strategy
                                    type: object
                                  resources:
                                    default:
                                      plan:
                                        deployment: ScaleDownOnPromotionScaleUpOnRollout
                                    description: |-
                                      Resources controls what happens to operator managed resources during or
                                      after a rollout.
                                    properties:
                                      plan:
                                        default:
                                          deployment: ScaleDownOnPromotionScaleUpOnRollout
                                        description: Plan defines the resource plan
                                          for managing resources during and after
                                          a rollout.
                                        properties:
                                          deployment:
                                            default: ScaleDownOnPromotionScaleUpOnRollout
                                            description: Deployment describes how
                                              the operator manages Deployments during
                                              and after a rollout.
                                            enum:
                                            - ScaleDownOnPromotionScaleUpOnRollout
                                            type: string
                                        type: object
                                    type: object
                                required:
                                - promotion
                                type: object
                            type: object
                        required:
                        - strategy
                        type: object
                      scaling:
                        description: Scaling defines the scaling options for the deployment.
                        properties:
                          horizontal:
                            description: HorizontalScaling defines horizontal scaling
                              options for the deployment.
                            properties:
                              behavior:
                                description: |-
                                  behavior configures the scaling behavior of the target
                                  in both Up and Down directions (scaleUp and scaleDown fields respectively).
                                  If not set, the default HPAScalingRules for scale up and scale down are used.
                                properties:
                                  scaleDown:
                                    description: |-
                                      scaleDown is scaling policy for scaling Down.
                                      If not set, the default value is to allow to scale down to minReplicas pods, with a
                                      300 second stabilization window (i.e., the highest recommendation for
                                      the last 300sec is used).
                                    properties:
                                      policies:
                                        description: |-
                                          policies is a list of potential scaling polices which can be used during scaling.
                                          At least one policy must be specified, otherwise the HPAScalingRules will be discarded as invalid
                                        items:
                                          description: HPAScalingPolicy is a single
                                            policy which must hold true for a specified
                                            past interval.
                                          properties:
                                            periodSeconds:
                                              description: |-
                                                periodSeconds specifies the window of time for which the policy should hold true.
                                                PeriodSeconds must be greater than zero and less than or equal to 1800 (30 min).
                                              format: int32
                                              type: integer
                                            type:
                                              description: type is used to specify
                                                the scaling policy.
                                              type: string
                                            value:
                                              description: |-
                                                value contains the amount of change which is permitted by the policy.
                                                It must be greater than zero
                                              format: int32
                                              type: integer
                                          required:
                                          - periodSeconds
                                          - type
                                          - value
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      selectPolicy:
                                        description: |-
                                          selectPolicy is used to specify which policy should be used.
                                          If not set, the default value Max is used.
                                        type: string
                                      stabilizationWindowSeconds:
                                        description: |-
                                          stabilizationWindowSeconds is the number of seconds for which past recommendations should be
                                          considered while scaling up or scaling down.
                                          StabilizationWindowSeconds must be greater than or equal to zero and less than or equal to 3600 (one hour).
                                          If not set, use the default values:
                                          - For scale up: 0 (i.e. no stabilization is done).
                                          - For scale down: 300 (i.e. the stabilization window is 300 seconds long).
                                        format: int32
                                        type: integer
                                    type: object
                                  scaleUp:
                                    description: |-
                                      scaleUp is scaling policy for scaling Up.
                                      If not set, the default value is the higher of:
                                        * increase no more than 4 pods per 60 seconds
                                        * double the number of pods per 60 seconds
                                      No stabilization is used.
                                    properties:
                                      policies:
                                        description: |-
                                          policies is a list of potential scaling polices which can be used during scaling.
                                          At least one policy must be specified, otherwise the HPAScalingRules will be discarded as invalid
                                        items:
                                          description: HPAScalingPolicy is a single
                                            policy which must hold true for a specified
                                            past interval.
                                          properties:
                                            periodSeconds:
                                              description: |-
                                                periodSeconds specifies the window of time for which the policy should hold true.
                                                PeriodSeconds must be greater than zero and less than or equal to 1800 (30 min).
                                              format: int32
                                              type: integer
                                            type:
                                              description: type is used to specify
                                                the scaling policy.
                                              type: string
                                            value:
                                              description: |-
                                                value contains the amount of change which is permitted by the policy.
                                                It must be greater than zero
                                              format: int32
                                              type: integer
                                          required:
                                          - periodSeconds
                                          - type
                                          - value
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      selectPolicy:
                                        description: |-
                                          selectPolicy is used to specify which policy should be used.
                                          If not set, the default value Max is used.
                                        type: string
                                      stabilizationWindowSeconds:
                                        description: |-
                                          stabilizationWindowSeconds is the number of seconds for which past recommendations should be
                                          considered while scaling up or scaling down.
                                          StabilizationWindowSeconds must be greater than or equal to zero and less than or equal to 3600 (one hour).
                                          If not set, use the default values:
                                          - For scale up: 0 (i.e. no stabilization is done).
                                          - For scale down: 300 (i.e. the stabilization window is 300 seconds long).
                                        format: int32
                                        type: integer
                                    type: object
                                type: object
                              maxReplicas:
                                description: |-
                                  maxReplicas is the upper limit for the number of replicas to which the autoscaler can scale up.
                                  It cannot be less that minReplicas.
                                format: int32
                                type: integer
                              metrics:
                                description: |-
                                  metrics contains the specifications for which to use to calculate the
                                  desired replica count (the maximum replica count across all metrics will
                                  be used).  The desired replica count is calculated multiplying the
                                  ratio between the target value and the current value by the current
                                  number of pods.  Ergo, metrics used must decrease as the pod count is
                                  increased, and vice-versa.  See the individual metric source types for
                                  more information about how each type of metric must respond.
                                  If not set, the default metric will be set to 80% average CPU utilization.
                                items:
                                  description: |-
                                    MetricSpec specifies how to scale based on a single metric
                                    (only `type` and one other matching field should be set at once).
                                  properties:
                                    containerResource:
                                      description: |-
                                        containerResource refers to a resource metric (such as those specified in
                                        requests and limits) known to Kubernetes describing a single container in
                                        each pod of the current scale target (e.g. CPU or memory). Such metrics are
                                        built in to Kubernetes, and have special scaling options on top of those
                                        available to normal per-pod metrics using the "pods" source.
                                      properties:
                                        container:
                                          description: container is the name of the
                                            container in the pods of the scaling target
                                          type: string
                                        name:
                                          description: name is the name of the resource
                                            in question.
                                          type: string
                                        target:
                                          description: target specifies the target
                                            value for the given metric
                                          properties:
                                            averageUtilization:
                                              description: |-
                                                averageUtilization is the target value of the average of the
                                                resource metric across all relevant pods, represented as a percentage of
                                                the requested value of the resource for the pods.
                                                Currently only valid for Resource metric source type
                                              format: int32
                                              type: integer
                                            averageValue:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                averageValue is the target value of the average of the
                                                metric across all relevant pods (as a quantity)
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            type:
                                              description: type represents whether
                                                the metric type is Utilization, Value,
                                                or AverageValue
                                              type: string
                                            value:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: value is the target value
                                                of the metric (as a quantity).
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - type
                                          type: object
                                      required:
                                      - container
                                      - name
                                      - target
                                      type: object
                                    external:
                                      description: |-
                                        external refers to a global metric that is not associated
                                        with any Kubernetes object. It allows autoscaling based on information
                                        coming from components running outside of cluster
                                        (for example length of queue in cloud messaging service, or
                                        QPS from loadbalancer running outside of cluster).
                                      properties:
                                        metric:
                                          description: metric identifies the target
                                            metric by name and selector
                                          properties:
                                            name:
                                              description: name is the name of the
                                                given metric
                                              type: string
                                            selector:
                                              description: |-
                                                selector is the string-encoded form of a standard kubernetes label selector for the given metric
                                                When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping.
                                                When unset, just the metricName will be used to gather metrics.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                          required:
                                          - name
                                          type: object
                                        target:
                                          description: target specifies the target
                                            value for the given metric
                                          properties:
                                            averageUtilization:
                                              description: |-
                                                averageUtilization is the target value of the average of the
                                                resource metric across all relevant pods, represented as a percentage of
                                                the requested value of the resource for the pods.
                                                Currently only valid for Resource metric source type
                                              format: int32
                                              type: integer
                                            averageValue:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                averageValue is the target value of the average of the
                                                metric across all relevant pods (as a quantity)
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            type:
                                              description: type represents whether
                                                the metric type is Utilization, Value,
                                                or AverageValue
                                              type: string
                                            value:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: value is the target value
                                                of the metric (as a quantity).
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - type
                                          type: object
                                      required:
                                      - metric
                                      - target
                                      type: object
                                    object:
                                      description: |-
                                        object refers to a metric describing a single kubernetes object
                                        (for example, hits-per-second on an Ingress object).
                                      properties:
                                        describedObject:
                                          description: describedObject specifies the
                                            descriptions of a object,such as kind,name
                                            apiVersion
                                          properties:
                                            apiVersion:
                                              description: apiVersion is the API version
                                                of the referent
                                              type: string
                                            kind:
                                              description: 'kind is the kind of the
                                                referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                              type: string
                                            name:
                                              description: 'name is the name of the
                                                referent; More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                              type: string
                                          required:
                                          - kind
                                          - name
                                          type: object
                                        metric:
                                          description: metric identifies the target
                                            metric by name and selector
                                          properties:
                                            name:
                                              description: name is the name of the
                                                given metric
                                              type: string
                                            selector:
                                              description: |-
                                                selector is the string-encoded form of a standard kubernetes label selector for the given metric
                                                When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping.
                                                When unset, just the metricName will be used to gather metrics.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                          required:
                                          - name
                                          type: object
                                        target:
                                          description: target specifies the target
                                            value for the given metric
                                          properties:
                                            averageUtilization:
                                              description: |-
                                                averageUtilization is the target value of the average of the
                                                resource metric across all relevant pods, represented as a percentage of
                                                the requested value of the resource for the pods.
                                                Currently only valid for Resource metric source type
                                              format: int32
                                              type: integer
                                            averageValue:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                averageValue is the target value of the average of the
                                                metric across all relevant pods (as a quantity)
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            type:
                                              description: type represents whether
                                                the metric type is Utilization, Value,
                                                or AverageValue
                                              type: string
                                            value:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: value is the target value
                                                of the metric (as a quantity).
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - type
                                          type: object
                                      required:
                                      - describedObject
                                      - metric
                                      - target
                                      type: object
                                    pods:
                                      description: |-
                                        pods refers to a metric describing each pod in the current scale target
                                        (for example, transactions-processed-per-second).  The values will be
                                        averaged together before being compared to the target value.
                                      properties:
                                        metric:
                                          description: metric identifies the target
                                            metric by name and selector
                                          properties:
                                            name:
                                              description: name is the name of the
                                                given metric
                                              type: string
                                            selector:
                                              description: |-
                                                selector is the string-encoded form of a standard kubernetes label selector for the given metric
                                                When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping.
                                                When unset, just the metricName will be used to gather metrics.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                          required:
                                          - name
                                          type: object
                                        target:
                                          description: target specifies the target
                                            value for the given metric
                                          properties:
                                            averageUtilization:
                                              description: |-
                                                averageUtilization is the target value of the average of the
                                                resource metric across all relevant pods, represented as a percentage of
                                                the requested value of the resource for the pods.
                                                Currently only valid for Resource metric source type
                                              format: int32
                                              type: integer
                                            averageValue:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                averageValue is the target value of the average of the
                                                metric across all relevant pods (as a quantity)
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            type:
                                              description: type represents whether
                                                the metric type is Utilization, Value,
                                                or AverageValue
                                              type: string
                                            value:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: value is the target value
                                                of the metric (as a quantity).
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - type
                                          type: object
                                      required:
                                      - metric
                                      - target
                                      type: object
                                    resource:
                                      description: |-
                                        resource refers to a resource metric (such as those specified in
                                        requests and limits) known to Kubernetes describing each pod in the
                                        current scale target (e.g. CPU or memory). Such metrics are built in to
                                        Kubernetes, and have special scaling options on top of those available
                                        to normal per-pod metrics using the "pods" source.
                                      properties:
                                        name:
                                          description: name is the name of the resource
                                            in question.
                                          type: string
                                        target:
                                          description: target specifies the target
                                            value for the given metric
                                          properties:
                                            averageUtilization:
                                              description: |-
                                                averageUtilization is the target value of the average of the
                                                resource metric across all relevant pods, represented as a percentage of
                                                the requested value of the resource for the pods.
                                                Currently only valid for Resource metric source type
                                              format: int32
                                              type: integer
                                            averageValue:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                averageValue is the target value of the average of the
                                                metric across all relevant pods (as a quantity)
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            type:
                                              description: type represents whether
                                                the metric type is Utilization, Value,
                                                or AverageValue
                                              type: string
                                            value:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: value is the target value
                                                of the metric (as a quantity).
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - type
                                          type: object
                                      required:
                                      - name
                                      - target
                                      type: object
                                    type:
                                      description: |-
                                        type is the type of metric source.  It should be one of "ContainerResource", "External",
                                        "Object", "Pods" or "Resource", each mapping to a matching field in the object.
                                      type: string
                                  required:
                                  - type
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              minReplicas:
                                description: |-
                                  minReplicas is the lower limit for the number of replicas to which the autoscaler
                                  can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the
                                  alpha feature gate HPAScaleToZero is enabled and at least one Object or External
                                  metric is configured.  Scaling is active as long as at least one metric value is
                                  available.
                                format: int32
                                type: integer
                            required:
                            - maxReplicas
                            type: object
                        type: object
                    type: object
                    x-kubernetes-validations:
                    - message: Using both replicas and scaling fields is not allowed.
                      rule: '!(has(self.scaling) && has(self.replicas))'
                  extensions:
                    description: |-
                      Extensions provide additional or replacement features for the DataPlane
                      resources to influence or enhance functionality.
                      NOTE: since we have one extension only (KonnectExtension), we limit the amount of extensions to 1.
                    items:
                      description: |-
                        ExtensionRef corresponds to another resource in the Kubernetes cluster which
                        defines extended behavior for a resource (e.g. ControlPlane).
                      properties:
                        group:
                          default: gateway-operator.konghq.com
                          description: Group is the group of the extension resource.
                          type: string
                        kind:
                          description: Kind is kind of the extension resource.
                          type: string
                        name:
                          description: Name is the name of the referred resource.
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace is the namespace of the referred resource.

                            For namespace-scoped resources if no Namespace is provided then the
                            namespace of the parent object MUST be used.

                            This field MUST not be set when referring to cluster-scoped resources.
                          type: string
                      required:
                      - kind
                      - name
                      type: object
                    maxItems: 1
                    minItems: 0
                    type: array
                  network:
                    description: GatewayConfigDataPlaneNetworkOptions defines network
                      related options for a DataPlane.
                    properties:
                      services:
                        description: |-
                          Services indicates the configuration of Kubernetes Services needed for
                          the topology of various forms of traffic (including ingress, etc.) to
                          and from the DataPlane.
                        properties:
                          ingress:
                            description: |-
                              Ingress is the Kubernetes Service that will be used to expose ingress
                              traffic for the DataPlane. Here you can determine whether the DataPlane
                              will be exposed outside the cluster (e.g. using a LoadBalancer type
                              Services) or only internally (e.g. ClusterIP), and inject any additional
                              annotations you need on the service (for instance, if you need to
                              influence a cloud provider LoadBalancer configuration).
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: |-
                                  Annotations is an unstructured key value map stored with a resource that may be
                                  set by external tools to store and retrieve arbitrary metadata. They are not
                                  queryable and should be preserved when modifying objects.

                                  More info: http://kubernetes.io/docs/user-guide/annotations
                                type: object
                              externalTrafficPolicy:
                                description: |-
                                  ExternalTrafficPolicy describes how nodes distribute service traffic they
                                  receive on one of the Service's "externally-facing" addresses (NodePorts,
                                  ExternalIPs, and LoadBalancer IPs). If set to "Local", the proxy will configure
                                  the service in a way that assumes that external load balancers will take care
                                  of balancing the service traffic between nodes, and so each node will deliver
                                  traffic only to the node-local endpoints of the service, without masquerading
                                  the client source IP. (Traffic mistakenly sent to a node with no endpoints will
                                  be dropped.) The default value, "Cluster", uses the standard behavior of
                                  routing to all endpoints evenly (possibly modified by topology and other
                                  features). Note that traffic sent to an External IP or LoadBalancer IP from
                                  within the cluster will always get "Cluster" semantics, but clients sending to
                                  a NodePort from within the cluster may need to take traffic policy into account
                                  when picking a node.

                                  More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
                                enum:
                                - Cluster
                                - Local
                                type: string
                              name:
                                description: |-
                                  Name defines the name of the service.
                                  If Name is empty, the controller will generate a service name from the owning object.
                                type: string
                              type:
                                default: LoadBalancer
                                description: |-
                                  Type determines how the Service is exposed.
                                  Defaults to `LoadBalancer`.

                                  Valid options are `LoadBalancer` and `ClusterIP`.

                                  `ClusterIP` allocates a cluster-internal IP address for load-balancing
                                  to endpoints.

                                  `LoadBalancer` builds on NodePort and creates an external load-balancer
                                  (if supported in the current cloud) which routes to the same endpoints
                                  as the clusterIP.

                                  More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
                                enum:
                                - LoadBalancer
                                - ClusterIP
                                type: string
                            type: object
                            x-kubernetes-validations:
                            - message: Cannot set ExternalTrafficPolicy for ClusterIP
                                service.
                              rule: 'has(self.type) && self.type == ''ClusterIP''
                                ? !has(self.externalTrafficPolicy) : true'
                        type: object
                    type: object
                  pluginsToInstall:
                    description: |-
                      PluginsToInstall is a list of KongPluginInstallation resources that
                      will be installed and available in the Gateways (DataPlanes) that
                      use this GatewayConfig.
                    items:
                      description: NamespacedName is a resource identified by name
                        and optional namespace.
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                type: object
                x-kubernetes-validations:
                - message: Extension not allowed for DataPlane
                  rule: 'has(self.extensions) ? self.extensions.all(e, (e.group ==
                    ''konnect.konghq.com'' || e.group == ''gateway-operator.konghq.com'')
                    && e.kind == ''KonnectExtension'') : true'
              extensions:
                description: |-
                  Extensions provide additional or replacement features for the Gateway
                  resource to influence or enhance functionality.
                  NOTE: currently, there's only 1 extension that can be attached
                  at the Gateway level (KonnectExtension), so the amount of extensions
                  is limited to 1.
                items:
                  description: |-
                    ExtensionRef corresponds to another resource in the Kubernetes cluster which
                    defines extended behavior for a resource (e.g. ControlPlane).
                  properties:
                    group:
                      default: gateway-operator.konghq.com
                      description: Group is the group of the extension resource.
                      type: string
                    kind:
                      description: Kind is kind of the extension resource.
                      type: string
                    name:
                      description: Name is the name of the referred resource.
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace is the namespace of the referred resource.

                        For namespace-scoped resources if no Namespace is provided then the
                        namespace of the parent object MUST be used.

                        This field MUST not be set when referring to cluster-scoped resources.
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                maxItems: 1
                minItems: 0
                type: array
            type: object
            x-kubernetes-validations:
            - message: KonnectExtension must be set at the Gateway level
              rule: 'has(self.dataPlaneOptions.extensions) ? self.dataPlaneOptions.extensions.all(e,
                (e.group != ''konnect.konghq.com'' && e.group != ''gateway-operator.konghq.com'')
                || e.kind != ''KonnectExtension'') : true'
            - message: KonnectExtension must be set at the Gateway level
              rule: 'has(self.controlPlaneOptions.extensions) ? self.controlPlaneOptions.extensions.all(e,
                (e.group != ''konnect.konghq.com'' && e.group != ''gateway-operator.konghq.com'')
                || e.kind != ''KonnectExtension'') : true'
          status:
            description: GatewayConfigurationStatus defines the observed state of
              GatewayConfiguration
            properties:
              conditions:
                description: Conditions describe the current conditions of the GatewayConfigurationStatus.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
        x-kubernetes-validations:
        - message: Extension not allowed for GatewayConfiguration
          rule: 'has(self.spec.extensions) ? self.spec.extensions.all(e, (e.group
            == ''konnect.konghq.com'' && e.kind == ''KonnectExtension'') || (e.group
            == ''gateway-operator.konghq.com'' && e.kind == ''DataPlaneMetricsExtension''))
            : true'
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: kongcacertificates.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong
    kind: KongCACertificate
    listKind: KongCACertificateList
    plural: kongcacertificates
    singular: kongcacertificate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The Resource is Programmed on Konnect
      jsonPath: .status.conditions[?(@.type=='Programmed')].status
      name: Programmed
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KongCACertificate is the schema for CACertificate API which defines
          a Kong CA Certificate.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: KongCACertificateSpec contains the specification for the
              KongCACertificate.
            properties:
              cert:
                description: Cert is the PEM-encoded CA certificate.
                type: string
              controlPlaneRef:
                description: ControlPlaneRef references the Konnect Control Plane
                  that this KongCACertificate should be created in.
                properties:
                  konnectID:
                    description: |-
                      KonnectID is the schema for the KonnectID type.
                      This field is required when the Type is konnectID.
                    type: string
                  konnectNamespacedRef:
                    description: |-
                      KonnectNamespacedRef is a reference to a Konnect Control Plane entity inside the cluster.
                      It contains the name of the Konnect Control Plane.
                      This field is required when the Type is konnectNamespacedRef.
                    properties:
                      name:
                        description: Name is the name of the Konnect Control Plane.
                        type: string
                      namespace:
                        description: |-
                          Namespace is the namespace where the Konnect Control Plane is in.
                          Currently only cluster scoped resources (KongVault) are allowed to set `konnectNamespacedRef.namespace`.
                        type: string
                    required:
                    - name
                    type: object
                  type:
                    default: kic
                    description: |-
                      Type indicates the type of the control plane being referenced. Allowed values:
                      - konnectID
                      - konnectNamespacedRef
                      - kic

                      The default is kic, which implies that the Control Plane is KIC.
                    enum:
                    - konnectID
                    - konnectNamespacedRef
                    - kic
                    type: string
                type: object
                x-kubernetes-validations:
                - message: '''konnectID'' type is not supported'
                  rule: self.type != 'konnectID'
                - message: when type is konnectNamespacedRef, konnectNamespacedRef
                    must be set
                  rule: '(has(self.type) && self.type == ''konnectNamespacedRef'')
                    ? has(self.konnectNamespacedRef) : true'
                - message: when type is konnectNamespacedRef, konnectID must not be
                    set
                  rule: '(has(self.type) && self.type == ''konnectNamespacedRef'')
                    ? !has(self.konnectID) : true'
                - message: when type is konnectID, konnectID must be set
                  rule: '(has(self.type) && self.type == ''konnectID'') ? has(self.konnectID)
                    : true'
                - message: when type is konnectID, konnectNamespacedRef must not be
                    set
                  rule: '(has(self.type) && self.type == ''konnectID'') ? !has(self.konnectNamespacedRef)
                    : true'
                - message: when type is kic, konnectID must not be set
                  rule: '(has(self.type) && self.type == ''kic'') ? !has(self.konnectID)
                    : true'
                - message: when type is kic, konnectNamespacedRef must not be set
                  rule: '(has(self.type) && self.type == ''kic'') ? !has(self.konnectNamespacedRef)
                    : true'
                - message: when type is unset, konnectID must not be set
                  rule: '!has(self.type) ? !has(self.konnectID) : true'
                - message: when type is unset, konnectNamespacedRef must not be set
                  rule: '!has(self.type) ? !has(self.konnectNamespacedRef) : true'
              tags:
                description: Tags is an optional set of tags applied to the certificate.
                items:
                  type: string
                maxItems: 20
                type: array
                x-kubernetes-validations:
                - message: tags entries must not be longer than 128 characters
                  rule: self.all(tag, size(tag) >= 1 && size(tag) <= 128)
            required:
            - cert
            - controlPlaneRef
            type: object
            x-kubernetes-validations:
            - message: KIC is not supported as control plane
              rule: '!has(self.controlPlaneRef) ? true : self.controlPlaneRef.type
                != ''kic'''
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Programmed
            description: KongCACertificateStatus defines the observed state of KongCACertificate.
            properties:
              conditions:
                description: Conditions describe the status of the Konnect entity.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              konnect:
                description: Konnect contains the Konnect entity status.
                properties:
                  controlPlaneID:
                    description: ControlPlaneID is the Konnect ID of the ControlPlane
                      this Route is associated with.
                    type: string
                  id:
                    description: |-
                      ID is the unique identifier of the Konnect entity as assigned by Konnect API.
                      If it's unset (empty string), it means the Konnect entity hasn't been created yet.
                    type: string
                  organizationID:
                    description: OrgID is ID of Konnect Org that this entity has been
                      created in.
                    type: string
                  serverURL:
                    description: ServerURL is the URL of the Konnect server in which
                      the entity exists.
                    type: string
                type: object
            type: object
        required:
        - spec
        type: object
        x-kubernetes-validations:
        - message: controlPlaneRef is required once set
          rule: '!has(oldSelf.spec.controlPlaneRef) || has(self.spec.controlPlaneRef)'
        - message: spec.controlPlaneRef cannot specify namespace for namespaced resource
          rule: '(!has(self.spec.controlPlaneRef) || !has(self.spec.controlPlaneRef.konnectNamespacedRef))
            ? true : !has(self.spec.controlPlaneRef.konnectNamespacedRef.__namespace__)'
        - message: spec.controlPlaneRef is immutable when an entity is already Programmed
          rule: '(!self.status.conditions.exists(c, c.type == ''Programmed'' && c.status
            == ''True'')) ? true : oldSelf.spec.controlPlaneRef == self.spec.controlPlaneRef'
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: kongcertificates.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong
    kind: KongCertificate
    listKind: KongCertificateList
    plural: kongcertificates
    singular: kongcertificate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The Resource is Programmed on Konnect
      jsonPath: .status.conditions[?(@.type=='Programmed')].status
      name: Programmed
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KongCertificate is the schema for Certificate API which defines
          a Kong Certificate.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: KongCertificateSpec contains the specification for the KongCertificate.
            properties:
              cert:
                description: Cert is the PEM-encoded certificate.
                type: string
              cert_alt:
                description: |-
                  CertAlt is the PEM-encoded certificate.
                  This should only be set if you have both RSA and ECDSA types of
                  certificate available and would like Kong to prefer serving using ECDSA certs
                  when client advertises support for it.
                type: string
              controlPlaneRef:
                description: ControlPlaneRef references the Konnect Control Plane
                  that this KongCertificate should be created in.
                properties:
                  konnectID:
                    description: |-
                      KonnectID is the schema for the KonnectID type.
                      This field is required when the Type is konnectID.
                    type: string
                  konnectNamespacedRef:
                    description: |-
                      KonnectNamespacedRef is a reference to a Konnect Control Plane entity inside the cluster.
                      It contains the name of the Konnect Control Plane.
                      This field is required when the Type is konnectNamespacedRef.
                    properties:
                      name:
                        description: Name is the name of the Konnect Control Plane.
                        type: string
                      namespace:
                        description: |-
                          Namespace is the namespace where the Konnect Control Plane is in.
                          Currently only cluster scoped resources (KongVault) are allowed to set `konnectNamespacedRef.namespace`.
                        type: string
                    required:
                    - name
                    type: object
                  type:
                    default: kic
                    description: |-
                      Type indicates the type of the control plane being referenced. Allowed values:
                      - konnectID
                      - konnectNamespacedRef
                      - kic

                      The default is kic, which implies that the Control Plane is KIC.
                    enum:
                    - konnectID
                    - konnectNamespacedRef
                    - kic
                    type: string
                type: object
                x-kubernetes-validations:
                - message: '''konnectID'' type is not supported'
                  rule: self.type != 'konnectID'
                - message: when type is konnectNamespacedRef, konnectNamespacedRef
                    must be set
                  rule: '(has(self.type) && self.type == ''konnectNamespacedRef'')
                    ? has(self.konnectNamespacedRef) : true'
                - message: when type is konnectNamespacedRef, konnectID must not be
                    set
                  rule: '(has(self.type) && self.type == ''konnectNamespacedRef'')
                    ? !has(self.konnectID) : true'
                - message: when type is konnectID, konnectID must be set
                  rule: '(has(self.type) && self.type == ''konnectID'') ? has(self.konnectID)
                    : true'
                - message: when type is konnectID, konnectNamespacedRef must not be
                    set
                  rule: '(has(self.type) && self.type == ''konnectID'') ? !has(self.konnectNamespacedRef)
                    : true'
                - message: when type is kic, konnectID must not be set
                  rule: '(has(self.type) && self.type == ''kic'') ? !has(self.konnectID)
                    : true'
                - message: when type is kic, konnectNamespacedRef must not be set
                  rule: '(has(self.type) && self.type == ''kic'') ? !has(self.konnectNamespacedRef)
                    : true'
                - message: when type is unset, konnectID must not be set
                  rule: '!has(self.type) ? !has(self.konnectID) : true'
                - message: when type is unset, konnectNamespacedRef must not be set
                  rule: '!has(self.type) ? !has(self.konnectNamespacedRef) : true'
              key:
                description: Key is the PEM-encoded private key.
                type: string
              key_alt:
                description: |-
                  KeyAlt is the PEM-encoded private key.
                  This should only be set if you have both RSA and ECDSA types of
                  certificate available and would like Kong to prefer serving using ECDSA certs
                  when client advertises support for it.
                type: string
              tags:
                description: Tags is an optional set of tags applied to the certificate.
                items:
                  type: string
                maxItems: 20
                type: array
                x-kubernetes-validations:
                - message: tags entries must not be longer than 128 characters
                  rule: self.all(tag, size(tag) >= 1 && size(tag) <= 128)
            required:
            - cert
            - controlPlaneRef
            - key
            type: object
            x-kubernetes-validations:
            - message: KIC is not supported as control plane
              rule: '!has(self.controlPlaneRef) ? true : self.controlPlaneRef.type
                != ''kic'''
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Programmed
            description: KongCertificateStatus defines the observed state of KongCertificate.
            properties:
              conditions:
                description: Conditions describe the status of the Konnect entity.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              konnect:
                description: Konnect contains the Konnect entity status.
                properties:
                  controlPlaneID:
                    description: ControlPlaneID is the Konnect ID of the ControlPlane
                      this Route is associated with.
                    type: string
                  id:
                    description: |-
                      ID is the unique identifier of the Konnect entity as assigned by Konnect API.
                      If it's unset (empty string), it means the Konnect entity hasn't been created yet.
                    type: string
                  organizationID:
                    description: OrgID is ID of Konnect Org that this entity has been
                      created in.
                    type: string
                  serverURL:
                    description: ServerURL is the URL of the Konnect server in which
                      the entity exists.
                    type: string
                type: object
            type: object
        required:
        - spec
        type: object
        x-kubernetes-validations:
        - message: controlPlaneRef is required once set
          rule: '!has(oldSelf.spec.controlPlaneRef) || has(self.spec.controlPlaneRef)'
        - message: spec.controlPlaneRef cannot specify namespace for namespaced resource
          rule: '(!has(self.spec.controlPlaneRef) || !has(self.spec.controlPlaneRef.konnectNamespacedRef))
            ? true : !has(self.spec.controlPlaneRef.konnectNamespacedRef.__namespace__)'
        - message: spec.controlPlaneRef is immutable when an entity is already Programmed
          rule: '(!self.status.conditions.exists(c, c.type == ''Programmed'' && c.status
            == ''True'')) ? true : oldSelf.spec.controlPlaneRef == self.spec.controlPlaneRef'
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: ingress-controller,gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: kongconsumergroups.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong-ingress-controller
    - kong
    kind: KongConsumerGroup
    listKind: KongConsumerGroupList
    plural: kongconsumergroups
    shortNames:
    - kcg
    singular: kongconsumergroup
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Age
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.conditions[?(@.type=="Programmed")].status
      name: Programmed
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: KongConsumerGroup is the Schema for the kongconsumergroups API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: KongConsumerGroupSpec defines the desired state of KongConsumerGroup.
            properties:
              controlPlaneRef:
                description: ControlPlaneRef is a reference to a ControlPlane this
                  ConsumerGroup is associated with.
                properties:
                  konnectID:
                    description: |-
                      KonnectID is the schema for the KonnectID type.
                      This field is required when the Type is konnectID.
                    type: string
                  konnectNamespacedRef:
                    description: |-
                      KonnectNamespacedRef is a reference to a Konnect Control Plane entity inside the cluster.
                      It contains the name of the Konnect Control Plane.
                      This field is required when the Type is konnectNamespacedRef.
                    properties:
                      name:
                        description: Name is the name of the Konnect Control Plane.
                        type: string
                      namespace:
                        description: |-
                          Namespace is the namespace where the Konnect Control Plane is in.
                          Currently only cluster scoped resources (KongVault) are allowed to set `konnectNamespacedRef.namespace`.
                        type: string
                    required:
                    - name
                    type: object
                  type:
                    default: kic
                    description: |-
                      Type indicates the type of the control plane being referenced. Allowed values:
                      - konnectID
                      - konnectNamespacedRef
                      - kic

                      The default is kic, which implies that the Control Plane is KIC.
                    enum:
                    - konnectID
                    - konnectNamespacedRef
                    - kic
                    type: string
                type: object
                x-kubernetes-validations:
                - message: '''konnectID'' type is not supported'
                  rule: self.type != 'konnectID'
                - message: when type is konnectNamespacedRef, konnectNamespacedRef
                    must be set
                  rule: '(has(self.type) && self.type == ''konnectNamespacedRef'')
                    ? has(self.konnectNamespacedRef) : true'
                - message: when type is konnectNamespacedRef, konnectID must not be
                    set
                  rule: '(has(self.type) && self.type == ''konnectNamespacedRef'')
                    ? !has(self.konnectID) : true'
                - message: when type is konnectID, konnectID must be set
                  rule: '(has(self.type) && self.type == ''konnectID'') ? has(self.konnectID)
                    : true'
                - message: when type is konnectID, konnectNamespacedRef must not be
                    set
                  rule: '(has(self.type) && self.type == ''konnectID'') ? !has(self.konnectNamespacedRef)
                    : true'
                - message: when type is kic, konnectID must not be set
                  rule: '(has(self.type) && self.type == ''kic'') ? !has(self.konnectID)
                    : true'
                - message: when type is kic, konnectNamespacedRef must not be set
                  rule: '(has(self.type) && self.type == ''kic'') ? !has(self.konnectNamespacedRef)
                    : true'
                - message: when type is unset, konnectID must not be set
                  rule: '!has(self.type) ? !has(self.konnectID) : true'
                - message: when type is unset, konnectNamespacedRef must not be set
                  rule: '!has(self.type) ? !has(self.konnectNamespacedRef) : true'
              name:
                description: Name is the name of the ConsumerGroup in Kong.
                type: string
              tags:
                description: Tags is an optional set of tags applied to the ConsumerGroup.
                items:
                  type: string
                maxItems: 20
                type: array
                x-kubernetes-validations:
                - message: tags entries must not be longer than 128 characters
                  rule: self.all(tag, size(tag) >= 1 && size(tag) <= 128)
            type: object
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Programmed
            description: Status represents the current status of the KongConsumerGroup
              resource.
            properties:
              conditions:
                description: |-
                  Conditions describe the current conditions of the KongConsumerGroup.

                  Known condition types are:

                  * "Programmed"
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              konnect:
                description: Konnect contains the Konnect entity status.
                properties:
                  controlPlaneID:
                    description: ControlPlaneID is the Konnect ID of the ControlPlane
                      this Route is associated with.
                    type: string
                  id:
                    description: |-
                      ID is the unique identifier of the Konnect entity as assigned by Konnect API.
                      If it's unset (empty string), it means the Konnect entity hasn't been created yet.
                    type: string
                  organizationID:
                    description: OrgID is ID of Konnect Org that this entity has been
                      created in.
                    type: string
                  serverURL:
                    description: ServerURL is the URL of the Konnect server in which
                      the entity exists.
                    type: string
                type: object
            type: object
        type: object
        x-kubernetes-validations:
        - message: controlPlaneRef is required once set
          rule: (!has(oldSelf.spec) || !has(oldSelf.spec.controlPlaneRef)) || has(self.spec.controlPlaneRef)
        - message: spec.controlPlaneRef cannot specify namespace for namespaced resource
          rule: '(!has(self.spec) || !has(self.spec.controlPlaneRef) || !has(self.spec.controlPlaneRef.konnectNamespacedRef))
            ? true : !has(self.spec.controlPlaneRef.konnectNamespacedRef.__namespace__)'
        - message: spec.controlPlaneRef is immutable when an entity is already Programmed
          rule: '(!has(oldSelf.spec) || !has(oldSelf.spec.controlPlaneRef)) ? true
            : (!has(self.status) || !self.status.conditions.exists(c, c.type == ''Programmed''
            && c.status == ''True'')) ? true : oldSelf.spec.controlPlaneRef == self.spec.controlPlaneRef'
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: ingress-controller,gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: kongconsumers.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong-ingress-controller
    - kong
    kind: KongConsumer
    listKind: KongConsumerList
    plural: kongconsumers
    shortNames:
    - kc
    singular: kongconsumer
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Username of a Kong Consumer
      jsonPath: .username
      name: Username
      type: string
    - description: Age
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.conditions[?(@.type=="Programmed")].status
      name: Programmed
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: KongConsumer is the Schema for the kongconsumers API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          consumerGroups:
            description: |-
              ConsumerGroups are references to consumer groups (that consumer wants to be part of)
              provisioned in Kong.
            items:
              type: string
            type: array
            x-kubernetes-list-type: set
          credentials:
            description: |-
              Credentials are references to secrets containing a credential to be
              provisioned in Kong.
            items:
              type: string
            type: array
            x-kubernetes-list-type: set
          custom_id:
            description: |-
              CustomID is a Kong cluster-unique existing ID for the consumer - useful for mapping
              Kong with users in your existing database.
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: KongConsumerSpec defines the specification of the KongConsumer.
            properties:
              controlPlaneRef:
                description: ControlPlaneRef is a reference to a ControlPlane this
                  Consumer is associated with.
                properties:
                  konnectID:
                    description: |-
                      KonnectID is the schema for the KonnectID type.
                      This field is required when the Type is konnectID.
                    type: string
                  konnectNamespacedRef:
                    description: |-
                      KonnectNamespacedRef is a reference to a Konnect Control Plane entity inside the cluster.
                      It contains the name of the Konnect Control Plane.
                      This field is required when the Type is konnectNamespacedRef.
                    properties:
                      name:
                        description: Name is the name of the Konnect Control Plane.
                        type: string
                      namespace:
                        description: |-
                          Namespace is the namespace where the Konnect Control Plane is in.
                          Currently only cluster scoped resources (KongVault) are allowed to set `konnectNamespacedRef.namespace`.
                        type: string
                    required:
                    - name
                    type: object
                  type:
                    default: kic
                    description: |-
                      Type indicates the type of the control plane being referenced. Allowed values:
                      - konnectID
                      - konnectNamespacedRef
                      - kic

                      The default is kic, which implies that the Control Plane is KIC.
                    enum:
                    - konnectID
                    - konnectNamespacedRef
                    - kic
                    type: string
                type: object
                x-kubernetes-validations:
                - message: '''konnectID'' type is not supported'
                  rule: self.type != 'konnectID'
                - message: when type is konnectNamespacedRef, konnectNamespacedRef
                    must be set
                  rule: '(has(self.type) && self.type == ''konnectNamespacedRef'')
                    ? has(self.konnectNamespacedRef) : true'
                - message: when type is konnectNamespacedRef, konnectID must not be
                    set
                  rule: '(has(self.type) && self.type == ''konnectNamespacedRef'')
                    ? !has(self.konnectID) : true'
                - message: when type is konnectID, konnectID must be set
                  rule: '(has(self.type) && self.type == ''konnectID'') ? has(self.konnectID)
                    : true'
                - message: when type is konnectID, konnectNamespacedRef must not be
                    set
                  rule: '(has(self.type) && self.type == ''konnectID'') ? !has(self.konnectNamespacedRef)
                    : true'
                - message: when type is kic, konnectID must not be set
                  rule: '(has(self.type) && self.type == ''kic'') ? !has(self.konnectID)
                    : true'
                - message: when type is kic, konnectNamespacedRef must not be set
                  rule: '(has(self.type) && self.type == ''kic'') ? !has(self.konnectNamespacedRef)
                    : true'
                - message: when type is unset, konnectID must not be set
                  rule: '!has(self.type) ? !has(self.konnectID) : true'
                - message: when type is unset, konnectNamespacedRef must not be set
                  rule: '!has(self.type) ? !has(self.konnectNamespacedRef) : true'
              tags:
                description: Tags is an optional set of tags applied to the consumer.
                items:
                  type: string
                maxItems: 20
                type: array
                x-kubernetes-validations:
                - message: tags entries must not be longer than 128 characters
                  rule: self.all(tag, size(tag) >= 1 && size(tag) <= 128)
            type: object
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Programmed
            description: Status represents the current status of the KongConsumer
              resource.
            properties:
              conditions:
                description: |-
                  Conditions describe the current conditions of the KongConsumer.

                  Known condition types are:

                  * "Programmed"
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              konnect:
                description: Konnect contains the Konnect entity status.
                properties:
                  controlPlaneID:
                    description: ControlPlaneID is the Konnect ID of the ControlPlane
                      this Route is associated with.
                    type: string
                  id:
                    description: |-
                      ID is the unique identifier of the Konnect entity as assigned by Konnect API.
                      If it's unset (empty string), it means the Konnect entity hasn't been created yet.
                    type: string
                  organizationID:
                    description: OrgID is ID of Konnect Org that this entity has been
                      created in.
                    type: string
                  serverURL:
                    description: ServerURL is the URL of the Konnect server in which
                      the entity exists.
                    type: string
                type: object
            type: object
          username:
            description: Username is a Kong cluster-unique username of the consumer.
            type: string
        type: object
        x-kubernetes-validations:
        - message: Need to provide either username or custom_id
          rule: has(self.username) || has(self.custom_id)
        - message: controlPlaneRef is required once set
          rule: (!has(oldSelf.spec) || !has(oldSelf.spec.controlPlaneRef)) || has(self.spec.controlPlaneRef)
        - message: spec.controlPlaneRef cannot specify namespace for namespaced resource
          rule: '(!has(self.spec) || !has(self.spec.controlPlaneRef) || !has(self.spec.controlPlaneRef.konnectNamespacedRef))
            ? true : !has(self.spec.controlPlaneRef.konnectNamespacedRef.__namespace__)'
        - message: spec.controlPlaneRef is immutable when an entity is already Programmed
          rule: '(!has(self.spec) || !has(self.spec.controlPlaneRef)) ? true : (!has(self.status)
            || !self.status.conditions.exists(c, c.type == ''Programmed'' && c.status
            == ''True'')) ? true : oldSelf.spec.controlPlaneRef == self.spec.controlPlaneRef'
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: kongcredentialacls.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong
    kind: KongCredentialACL
    listKind: KongCredentialACLList
    plural: kongcredentialacls
    singular: kongcredentialacl
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The Resource is Programmed on Konnect
      jsonPath: .status.conditions[?(@.type=='Programmed')].status
      name: Programmed
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KongCredentialACL is the schema for ACL credentials API which
          defines a ACL credential for consumers.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec contains the ACL credential specification.
            properties:
              consumerRef:
                description: ConsumerRef is a reference to a Consumer this KongCredentialACL
                  is associated with.
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              group:
                description: Group is the name for the ACL credential.
                type: string
              tags:
                description: Tags is a list of tags for the ACL credential.
                items:
                  type: string
                maxItems: 20
                type: array
                x-kubernetes-validations:
                - message: tags entries must not be longer than 128 characters
                  rule: self.all(tag, size(tag) >= 1 && size(tag) <= 128)
            required:
            - consumerRef
            - group
            type: object
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Programmed
            description: Status contains the ACL credential status.
            properties:
              conditions:
                description: Conditions describe the status of the Konnect entity.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              konnect:
                description: Konnect contains the Konnect entity status.
                properties:
                  consumerID:
                    description: ConsumerID is the Konnect ID of the Consumer this
                      entity is associated with.
                    type: string
                  controlPlaneID:
                    description: ControlPlaneID is the Konnect ID of the ControlPlane
                      this Route is associated with.
                    type: string
                  id:
                    description: |-
                      ID is the unique identifier of the Konnect entity as assigned by Konnect API.
                      If it's unset (empty string), it means the Konnect entity hasn't been created yet.
                    type: string
                  organizationID:
                    description: OrgID is ID of Konnect Org that this entity has been
                      created in.
                    type: string
                  serverURL:
                    description: ServerURL is the URL of the Konnect server in which
                      the entity exists.
                    type: string
                type: object
            type: object
        required:
        - spec
        type: object
        x-kubernetes-validations:
        - message: spec.consumerRef is immutable when an entity is already Programmed
          rule: '(!self.status.conditions.exists(c, c.type == ''Programmed'' && c.status
            == ''True'')) ? true : oldSelf.spec.consumerRef == self.spec.consumerRef'
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: kongcredentialapikeys.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong
    kind: KongCredentialAPIKey
    listKind: KongCredentialAPIKeyList
    plural: kongcredentialapikeys
    singular: kongcredentialapikey
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The Resource is Programmed on Konnect
      jsonPath: .status.conditions[?(@.type=='Programmed')].status
      name: Programmed
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KongCredentialAPIKey is the schema for API key credentials API
          which defines a API key credential for consumers.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec contains the API Key credential specification.
            properties:
              consumerRef:
                description: ConsumerRef is a reference to a Consumer this KongCredentialAPIKey
                  is associated with.
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              key:
                description: Key is the key for the API Key credential.
                type: string
              tags:
                description: Tags is a list of tags for the API Key credential.
                items:
                  type: string
                maxItems: 20
                type: array
                x-kubernetes-validations:
                - message: tags entries must not be longer than 128 characters
                  rule: self.all(tag, size(tag) >= 1 && size(tag) <= 128)
            required:
            - consumerRef
            - key
            type: object
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Programmed
            description: Status contains the API Key credential status.
            properties:
              conditions:
                description: Conditions describe the status of the Konnect entity.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              konnect:
                description: Konnect contains the Konnect entity status.
                properties:
                  consumerID:
                    description: ConsumerID is the Konnect ID of the Consumer this
                      entity is associated with.
                    type: string
                  controlPlaneID:
                    description: ControlPlaneID is the Konnect ID of the ControlPlane
                      this Route is associated with.
                    type: string
                  id:
                    description: |-
                      ID is the unique identifier of the Konnect entity as assigned by Konnect API.
                      If it's unset (empty string), it means the Konnect entity hasn't been created yet.
                    type: string
                  organizationID:
                    description: OrgID is ID of Konnect Org that this entity has been
                      created in.
                    type: string
                  serverURL:
                    description: ServerURL is the URL of the Konnect server in which
                      the entity exists.
                    type: string
                type: object
            type: object
        required:
        - spec
        type: object
        x-kubernetes-validations:
        - message: spec.consumerRef is immutable when an entity is already Programmed
          rule: '(!self.status.conditions.exists(c, c.type == ''Programmed'' && c.status
            == ''True'')) ? true : oldSelf.spec.consumerRef == self.spec.consumerRef'
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: kongcredentialbasicauths.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong
    kind: KongCredentialBasicAuth
    listKind: KongCredentialBasicAuthList
    plural: kongcredentialbasicauths
    singular: kongcredentialbasicauth
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The Resource is Programmed on Konnect
      jsonPath: .status.conditions[?(@.type=='Programmed')].status
      name: Programmed
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KongCredentialBasicAuth is the schema for BasicAuth credentials
          API which defines a BasicAuth credential for consumers.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec contains the BasicAuth credential specification.
            properties:
              consumerRef:
                description: ConsumerRef is a reference to a Consumer this CredentialBasicAuth
                  is associated with.
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              password:
                description: Password is the password for the BasicAuth credential.
                type: string
              tags:
                description: Tags is a list of tags for the BasicAuth credential.
                items:
                  type: string
                maxItems: 20
                type: array
                x-kubernetes-validations:
                - message: tags entries must not be longer than 128 characters
                  rule: self.all(tag, size(tag) >= 1 && size(tag) <= 128)
              username:
                description: Username is the username for the BasicAuth credential.
                type: string
            required:
            - consumerRef
            - password
            - username
            type: object
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Programmed
            description: Status contains the BasicAuth credential status.
            properties:
              conditions:
                description: Conditions describe the status of the Konnect entity.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              konnect:
                description: Konnect contains the Konnect entity status.
                properties:
                  consumerID:
                    description: ConsumerID is the Konnect ID of the Consumer this
                      entity is associated with.
                    type: string
                  controlPlaneID:
                    description: ControlPlaneID is the Konnect ID of the ControlPlane
                      this Route is associated with.
                    type: string
                  id:
                    description: |-
                      ID is the unique identifier of the Konnect entity as assigned by Konnect API.
                      If it's unset (empty string), it means the Konnect entity hasn't been created yet.
                    type: string
                  organizationID:
                    description: OrgID is ID of Konnect Org that this entity has been
                      created in.
                    type: string
                  serverURL:
                    description: ServerURL is the URL of the Konnect server in which
                      the entity exists.
                    type: string
                type: object
            type: object
        required:
        - spec
        type: object
        x-kubernetes-validations:
        - message: spec.consumerRef is immutable when an entity is already Programmed
          rule: '(!self.status.conditions.exists(c, c.type == ''Programmed'' && c.status
            == ''True'')) ? true : oldSelf.spec.consumerRef == self.spec.consumerRef'
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: kongcredentialhmacs.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong
    kind: KongCredentialHMAC
    listKind: KongCredentialHMACList
    plural: kongcredentialhmacs
    singular: kongcredentialhmac
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The Resource is Programmed on Konnect
      jsonPath: .status.conditions[?(@.type=='Programmed')].status
      name: Programmed
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KongCredentialHMAC is the schema for HMAC credentials API which
          defines a HMAC credential for consumers.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec contains the HMAC credential specification.
            properties:
              consumerRef:
                description: ConsumerRef is a reference to a Consumer this KongCredentialHMAC
                  is associated with.
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              id:
                description: ID is the unique identifier for the HMAC credential.
                type: string
              secret:
                description: Secret is the secret for the HMAC credential.
                type: string
              tags:
                description: Tags is a list of tags for the HMAC credential.
                items:
                  type: string
                maxItems: 20
                type: array
                x-kubernetes-validations:
                - message: tags entries must not be longer than 128 characters
                  rule: self.all(tag, size(tag) >= 1 && size(tag) <= 128)
              username:
                description: Username is the username for the HMAC credential.
                type: string
            required:
            - consumerRef
            - username
            type: object
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Programmed
            description: Status contains the HMAC credential status.
            properties:
              conditions:
                description: Conditions describe the status of the Konnect entity.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              konnect:
                description: Konnect contains the Konnect entity status.
                properties:
                  consumerID:
                    description: ConsumerID is the Konnect ID of the Consumer this
                      entity is associated with.
                    type: string
                  controlPlaneID:
                    description: ControlPlaneID is the Konnect ID of the ControlPlane
                      this Route is associated with.
                    type: string
                  id:
                    description: |-
                      ID is the unique identifier of the Konnect entity as assigned by Konnect API.
                      If it's unset (empty string), it means the Konnect entity hasn't been created yet.
                    type: string
                  organizationID:
                    description: OrgID is ID of Konnect Org that this entity has been
                      created in.
                    type: string
                  serverURL:
                    description: ServerURL is the URL of the Konnect server in which
                      the entity exists.
                    type: string
                type: object
            type: object
        required:
        - spec
        type: object
        x-kubernetes-validations:
        - message: spec.consumerRef is immutable when an entity is already Programmed
          rule: '(!self.status.conditions.exists(c, c.type == ''Programmed'' && c.status
            == ''True'')) ? true : oldSelf.spec.consumerRef == self.spec.consumerRef'
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: kongcredentialjwts.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong
    kind: KongCredentialJWT
    listKind: KongCredentialJWTList
    plural: kongcredentialjwts
    singular: kongcredentialjwt
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The Resource is Programmed on Konnect
      jsonPath: .status.conditions[?(@.type=='Programmed')].status
      name: Programmed
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KongCredentialJWT is the schema for JWT credentials API which
          defines a JWT credential for consumers.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec contains the JWT credential specification.
            properties:
              algorithm:
                default: HS256
                description: Algorithm is the algorithm used to sign the JWT token.
                enum:
                - HS256
                - HS384
                - HS512
                - RS256
                - RS384
                - RS512
                - ES256
                - ES384
                - ES512
                - PS256
                - PS384
                - PS512
                - EdDSA
                type: string
              consumerRef:
                description: ConsumerRef is a reference to a Consumer this KongCredentialJWT
                  is associated with.
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              id:
                description: ID is the unique identifier for the JWT credential.
                type: string
              key:
                description: Key is the key for the JWT credential.
                type: string
              rsa_public_key:
                description: RSA PublicKey is the RSA public key for the JWT credential.
                type: string
              secret:
                description: Secret is the secret for the JWT credential.
                type: string
              tags:
                description: Tags is a list of tags for the JWT credential.
                items:
                  type: string
                maxItems: 20
                type: array
                x-kubernetes-validations:
                - message: tags entries must not be longer than 128 characters
                  rule: self.all(tag, size(tag) >= 1 && size(tag) <= 128)
            required:
            - consumerRef
            type: object
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Programmed
            description: Status contains the JWT credential status.
            properties:
              conditions:
                description: Conditions describe the status of the Konnect entity.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              konnect:
                description: Konnect contains the Konnect entity status.
                properties:
                  consumerID:
                    description: ConsumerID is the Konnect ID of the Consumer this
                      entity is associated with.
                    type: string
                  controlPlaneID:
                    description: ControlPlaneID is the Konnect ID of the ControlPlane
                      this Route is associated with.
                    type: string
                  id:
                    description: |-
                      ID is the unique identifier of the Konnect entity as assigned by Konnect API.
                      If it's unset (empty string), it means the Konnect entity hasn't been created yet.
                    type: string
                  organizationID:
                    description: OrgID is ID of Konnect Org that this entity has been
                      created in.
                    type: string
                  serverURL:
                    description: ServerURL is the URL of the Konnect server in which
                      the entity exists.
                    type: string
                type: object
            type: object
        required:
        - spec
        type: object
        x-kubernetes-validations:
        - message: spec.consumerRef is immutable when an entity is already Programmed
          rule: '(!self.status.conditions.exists(c, c.type == ''Programmed'' && c.status
            == ''True'')) ? true : oldSelf.spec.consumerRef == self.spec.consumerRef'
        - message: spec.rsa_public_key is required when algorithm is RS*, ES*, PS*
            or EdDSA*
          rule: 'self.spec.algorithm in [ ''RS256'',''RS384'',''RS512'',''ES256'',''ES384'',''ES512'',''PS256'',''PS384'',''PS512'',''EdDSA'',
            ] ? has(self.spec.rsa_public_key) : true'
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: kongdataplaneclientcertificates.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong
    kind: KongDataPlaneClientCertificate
    listKind: KongDataPlaneClientCertificateList
    plural: kongdataplaneclientcertificates
    singular: kongdataplaneclientcertificate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The Resource is Programmed on Konnect
      jsonPath: .status.conditions[?(@.type=='Programmed')].status
      name: Programmed
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KongDataPlaneClientCertificate is the schema for KongDataPlaneClientCertificate
          API which defines a KongDataPlaneClientCertificate entity.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: KongDataPlaneClientCertificateSpec defines the spec for a
              KongDataPlaneClientCertificate.
            properties:
              cert:
                description: Cert is the certificate in PEM format. Once the certificate
                  gets programmed this field becomes immutable.
                minLength: 1
                type: string
              controlPlaneRef:
                description: ControlPlaneRef is a reference to a Konnect ControlPlane
                  this KongDataPlaneClientCertificate is associated with.
                properties:
                  konnectID:
                    description: |-
                      KonnectID is the schema for the KonnectID type.
                      This field is required when the Type is konnectID.
                    type: string
                  konnectNamespacedRef:
                    description: |-
                      KonnectNamespacedRef is a reference to a Konnect Control Plane entity inside the cluster.
                      It contains the name of the Konnect Control Plane.
                      This field is required when the Type is konnectNamespacedRef.
                    properties:
                      name:
                        description: Name is the name of the Konnect Control Plane.
                        type: string
                      namespace:
                        description: |-
                          Namespace is the namespace where the Konnect Control Plane is in.
                          Currently only cluster scoped resources (KongVault) are allowed to set `konnectNamespacedRef.namespace`.
                        type: string
                    required:
                    - name
                    type: object
                  type:
                    default: kic
                    description: |-
                      Type indicates the type of the control plane being referenced. Allowed values:
                      - konnectID
                      - konnectNamespacedRef
                      - kic

                      The default is kic, which implies that the Control Plane is KIC.
                    enum:
                    - konnectID
                    - konnectNamespacedRef
                    - kic
                    type: string
                type: object
                x-kubernetes-validations:
                - message: '''konnectID'' type is not supported'
                  rule: self.type != 'konnectID'
                - message: when type is konnectNamespacedRef, konnectNamespacedRef
                    must be set
                  rule: '(has(self.type) && self.type == ''konnectNamespacedRef'')
                    ? has(self.konnectNamespacedRef) : true'
                - message: when type is konnectNamespacedRef, konnectID must not be
                    set
                  rule: '(has(self.type) && self.type == ''konnectNamespacedRef'')
                    ? !has(self.konnectID) : true'
                - message: when type is konnectID, konnectID must be set
                  rule: '(has(self.type) && self.type == ''konnectID'') ? has(self.konnectID)
                    : true'
                - message: when type is konnectID, konnectNamespacedRef must not be
                    set
                  rule: '(has(self.type) && self.type == ''konnectID'') ? !has(self.konnectNamespacedRef)
                    : true'
                - message: when type is kic, konnectID must not be set
                  rule: '(has(self.type) && self.type == ''kic'') ? !has(self.konnectID)
                    : true'
                - message: when type is kic, konnectNamespacedRef must not be set
                  rule: '(has(self.type) && self.type == ''kic'') ? !has(self.konnectNamespacedRef)
                    : true'
                - message: when type is unset, konnectID must not be set
                  rule: '!has(self.type) ? !has(self.konnectID) : true'
                - message: when type is unset, konnectNamespacedRef must not be set
                  rule: '!has(self.type) ? !has(self.konnectNamespacedRef) : true'
            required:
            - cert
            - controlPlaneRef
            type: object
            x-kubernetes-validations:
            - message: KIC is not supported as control plane
              rule: '!has(self.controlPlaneRef) ? true : self.controlPlaneRef.type
                != ''kic'''
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Programmed
            description: KongDataPlaneClientCertificateStatus defines the status for
              a KongDataPlaneClientCertificate.
            properties:
              conditions:
                description: Conditions describe the status of the Konnect entity.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              konnect:
                description: Konnect contains the Konnect entity status.
                properties:
                  controlPlaneID:
                    description: ControlPlaneID is the Konnect ID of the ControlPlane
                      this Route is associated with.
                    type: string
                  id:
                    description: |-
                      ID is the unique identifier of the Konnect entity as assigned by Konnect API.
                      If it's unset (empty string), it means the Konnect entity hasn't been created yet.
                    type: string
                  organizationID:
                    description: OrgID is ID of Konnect Org that this entity has been
                      created in.
                    type: string
                  serverURL:
                    description: ServerURL is the URL of the Konnect server in which
                      the entity exists.
                    type: string
                type: object
            type: object
        required:
        - spec
        type: object
        x-kubernetes-validations:
        - message: controlPlaneRef is required once set
          rule: '!has(oldSelf.spec.controlPlaneRef) || has(self.spec.controlPlaneRef)'
        - message: spec.controlPlaneRef is immutable when an entity is already Programmed
          rule: '!has(self.spec.controlPlaneRef) ? true : (!self.status.conditions.exists(c,
            c.type == ''Programmed'' && c.status == ''True'')) ? true : oldSelf.spec.controlPlaneRef
            == self.spec.controlPlaneRef'
        - message: spec.cert is immutable when an entity is already Programmed
          rule: '(!self.status.conditions.exists(c, c.type == ''Programmed'' && c.status
            == ''True'')) ? true : oldSelf.spec.cert == self.spec.cert'
        - message: spec.controlPlaneRef cannot specify namespace for namespaced resource
          rule: '(!has(self.spec.controlPlaneRef) || !has(self.spec.controlPlaneRef.konnectNamespacedRef))
            ? true : !has(self.spec.controlPlaneRef.konnectNamespacedRef.__namespace__)'
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: kongkeys.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong
    kind: KongKey
    listKind: KongKeyList
    plural: kongkeys
    singular: kongkey
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The Resource is Programmed on Konnect
      jsonPath: .status.conditions[?(@.type=='Programmed')].status
      name: Programmed
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KongKey is the schema for KongKey API which defines a KongKey
          entity.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: KongKeySpec defines the spec for a KongKey.
            properties:
              controlPlaneRef:
                description: ControlPlaneRef is a reference to a Konnect ControlPlane
                  this KongKey is associated with.
                properties:
                  konnectID:
                    description: |-
                      KonnectID is the schema for the KonnectID type.
                      This field is required when the Type is konnectID.
                    type: string
                  konnectNamespacedRef:
                    description: |-
                      KonnectNamespacedRef is a reference to a Konnect Control Plane entity inside the cluster.
                      It contains the name of the Konnect Control Plane.
                      This field is required when the Type is konnectNamespacedRef.
                    properties:
                      name:
                        description: Name is the name of the Konnect Control Plane.
                        type: string
                      namespace:
                        description: |-
                          Namespace is the namespace where the Konnect Control Plane is in.
                          Currently only cluster scoped resources (KongVault) are allowed to set `konnectNamespacedRef.namespace`.
                        type: string
                    required:
                    - name
                    type: object
                  type:
                    default: kic
                    description: |-
                      Type indicates the type of the control plane being referenced. Allowed values:
                      - konnectID
                      - konnectNamespacedRef
                      - kic

                      The default is kic, which implies that the Control Plane is KIC.
                    enum:
                    - konnectID
                    - konnectNamespacedRef
                    - kic
                    type: string
                type: object
                x-kubernetes-validations:
                - message: '''konnectID'' type is not supported'
                  rule: self.type != 'konnectID'
                - message: when type is konnectNamespacedRef, konnectNamespacedRef
                    must be set
                  rule: '(has(self.type) && self.type == ''konnectNamespacedRef'')
                    ? has(self.konnectNamespacedRef) : true'
                - message: when type is konnectNamespacedRef, konnectID must not be
                    set
                  rule: '(has(self.type) && self.type == ''konnectNamespacedRef'')
                    ? !has(self.konnectID) : true'
                - message: when type is konnectID, konnectID must be set
                  rule: '(has(self.type) && self.type == ''konnectID'') ? has(self.konnectID)
                    : true'
                - message: when type is konnectID, konnectNamespacedRef must not be
                    set
                  rule: '(has(self.type) && self.type == ''konnectID'') ? !has(self.konnectNamespacedRef)
                    : true'
                - message: when type is kic, konnectID must not be set
                  rule: '(has(self.type) && self.type == ''kic'') ? !has(self.konnectID)
                    : true'
                - message: when type is kic, konnectNamespacedRef must not be set
                  rule: '(has(self.type) && self.type == ''kic'') ? !has(self.konnectNamespacedRef)
                    : true'
                - message: when type is unset, konnectID must not be set
                  rule: '!has(self.type) ? !has(self.konnectID) : true'
                - message: when type is unset, konnectNamespacedRef must not be set
                  rule: '!has(self.type) ? !has(self.konnectNamespacedRef) : true'
              jwk:
                description: |-
                  JWK is a JSON Web Key represented as a string.
                  The JWK must contain a KID field that matches the KID in the KongKey.
                  Either JWK or PEM must be set.
                type: string
              keySetRef:
                description: |-
                  KeySetRef is a reference to a KongKeySet this KongKey is attached to.
                  ControlPlane referenced by a KongKeySet must be the same as the ControlPlane referenced by the KongKey.
                properties:
                  konnectID:
                    description: |-
                      KonnectID is the schema for the KonnectID type.
                      This field is required when the Type is konnectID.
                    type: string
                  namespacedRef:
                    description: |-
                      NamespacedRef is a reference to a KeySet entity inside the cluster.
                      This field is required when the Type is namespacedRef.
                    properties:
                      name:
                        description: Name is the name of the KeySet object.
                        minLength: 1
                        type: string
                    required:
                    - name
                    type: object
                  type:
                    description: |-
                      Type defines type of the KeySet object reference. It can be one of:
                      - konnectID
                      - namespacedRef
                    enum:
                    - konnectID
                    - namespacedRef
                    type: string
                required:
                - type
                type: object
                x-kubernetes-validations:
                - message: when type is namespacedRef, namespacedRef must be set
                  rule: 'self.type == ''namespacedRef'' ? has(self.namespacedRef)
                    : true'
                - message: when type is konnectID, konnectID must be set
                  rule: 'self.type == ''konnectID'' ? has(self.konnectID) : true'
              kid:
                description: |-
                  KID is a unique identifier for a key.
                  When JWK is provided, KID has to match the KID in the JWK.
                minLength: 1
                type: string
              name:
                description: Name is an optional name to associate with the given
                  key.
                type: string
              pem:
                description: |-
                  PEM is a keypair in PEM format.
                  Either JWK or PEM must be set.
                properties:
                  private_key:
                    description: The private key in PEM format.
                    minLength: 1
                    type: string
                  public_key:
                    description: The public key in PEM format.
                    minLength: 1
                    type: string
                required:
                - private_key
                - public_key
                type: object
              tags:
                description: Tags is an optional set of strings associated with the
                  Key for grouping and filtering.
                items:
                  type: string
                maxItems: 20
                type: array
                x-kubernetes-validations:
                - message: tags entries must not be longer than 128 characters
                  rule: self.all(tag, size(tag) >= 1 && size(tag) <= 128)
            required:
            - kid
            type: object
            x-kubernetes-validations:
            - message: KIC is not supported as control plane
              rule: '!has(self.controlPlaneRef) ? true : self.controlPlaneRef.type
                != ''kic'''
            - message: Either 'jwk' or 'pem' must be set
              rule: has(self.jwk) || has(self.pem)
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Programmed
            description: KongKeyStatus defines the status for a KongKey.
            properties:
              conditions:
                description: Conditions describe the status of the Konnect entity.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              konnect:
                description: Konnect contains the Konnect entity status.
                properties:
                  controlPlaneID:
                    description: ControlPlaneID is the Konnect ID of the ControlPlane
                      this entity is associated with.
                    type: string
                  id:
                    description: |-
                      ID is the unique identifier of the Konnect entity as assigned by Konnect API.
                      If it's unset (empty string), it means the Konnect entity hasn't been created yet.
                    type: string
                  keySetID:
                    description: KeySetID is the Konnect ID of the KeySet this entity
                      is associated with.
                    type: string
                  organizationID:
                    description: OrgID is ID of Konnect Org that this entity has been
                      created in.
                    type: string
                  serverURL:
                    description: ServerURL is the URL of the Konnect server in which
                      the entity exists.
                    type: string
                type: object
            type: object
        required:
        - spec
        type: object
        x-kubernetes-validations:
        - message: controlPlaneRef is required once set
          rule: '!has(oldSelf.spec.controlPlaneRef) || has(self.spec.controlPlaneRef)'
        - message: spec.controlPlaneRef is immutable when an entity is already Programmed
          rule: '(!self.status.conditions.exists(c, c.type == ''Programmed'' && c.status
            == ''True'')) ? true : oldSelf.spec.controlPlaneRef == self.spec.controlPlaneRef'
        - message: spec.controlPlaneRef cannot specify namespace for namespaced resource
          rule: '(!has(self.spec.controlPlaneRef) || !has(self.spec.controlPlaneRef.konnectNamespacedRef))
            ? true : !has(self.spec.controlPlaneRef.konnectNamespacedRef.__namespace__)'
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: kongkeysets.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong
    kind: KongKeySet
    listKind: KongKeySetList
    plural: kongkeysets
    singular: kongkeyset
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The Resource is Programmed on Konnect
      jsonPath: .status.conditions[?(@.type=='Programmed')].status
      name: Programmed
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KongKeySet is the schema for KongKeySet API which defines a KongKeySet
          entity.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: KongKeySetSpec defines the spec for a KongKeySet.
            properties:
              controlPlaneRef:
                description: ControlPlaneRef is a reference to a Konnect ControlPlane
                  with which KongKeySet is associated.
                properties:
                  konnectID:
                    description: |-
                      KonnectID is the schema for the KonnectID type.
                      This field is required when the Type is konnectID.
                    type: string
                  konnectNamespacedRef:
                    description: |-
                      KonnectNamespacedRef is a reference to a Konnect Control Plane entity inside the cluster.
                      It contains the name of the Konnect Control Plane.
                      This field is required when the Type is konnectNamespacedRef.
                    properties:
                      name:
                        description: Name is the name of the Konnect Control Plane.
                        type: string
                      namespace:
                        description: |-
                          Namespace is the namespace where the Konnect Control Plane is in.
                          Currently only cluster scoped resources (KongVault) are allowed to set `konnectNamespacedRef.namespace`.
                        type: string
                    required:
                    - name
                    type: object
                  type:
                    default: kic
                    description: |-
                      Type indicates the type of the control plane being referenced. Allowed values:
                      - konnectID
                      - konnectNamespacedRef
                      - kic

                      The default is kic, which implies that the Control Plane is KIC.
                    enum:
                    - konnectID
                    - konnectNamespacedRef
                    - kic
                    type: string
                type: object
                x-kubernetes-validations:
                - message: '''konnectID'' type is not supported'
                  rule: self.type != 'konnectID'
                - message: when type is konnectNamespacedRef, konnectNamespacedRef
                    must be set
                  rule: '(has(self.type) && self.type == ''konnectNamespacedRef'')
                    ? has(self.konnectNamespacedRef) : true'
                - message: when type is konnectNamespacedRef, konnectID must not be
                    set
                  rule: '(has(self.type) && self.type == ''konnectNamespacedRef'')
                    ? !has(self.konnectID) : true'
                - message: when type is konnectID, konnectID must be set
                  rule: '(has(self.type) && self.type == ''konnectID'') ? has(self.konnectID)
                    : true'
                - message: when type is konnectID, konnectNamespacedRef must not be
                    set
                  rule: '(has(self.type) && self.type == ''konnectID'') ? !has(self.konnectNamespacedRef)
                    : true'
                - message: when type is kic, konnectID must not be set
                  rule: '(has(self.type) && self.type == ''kic'') ? !has(self.konnectID)
                    : true'
                - message: when type is kic, konnectNamespacedRef must not be set
                  rule: '(has(self.type) && self.type == ''kic'') ? !has(self.konnectNamespacedRef)
                    : true'
                - message: when type is unset, konnectID must not be set
                  rule: '!has(self.type) ? !has(self.konnectID) : true'
                - message: when type is unset, konnectNamespacedRef must not be set
                  rule: '!has(self.type) ? !has(self.konnectNamespacedRef) : true'
              name:
                description: Name is a name of the KeySet.
                minLength: 1
                type: string
              tags:
                description: Tags is an optional set of strings associated with the
                  KeySet for grouping and filtering.
                items:
                  type: string
                maxItems: 20
                type: array
                x-kubernetes-validations:
                - message: tags entries must not be longer than 128 characters
                  rule: self.all(tag, size(tag) >= 1 && size(tag) <= 128)
            required:
            - controlPlaneRef
            - name
            type: object
            x-kubernetes-validations:
            - message: KIC is not supported as control plane
              rule: '!has(self.controlPlaneRef) ? true : self.controlPlaneRef.type
                != ''kic'''
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Programmed
            description: KongKeySetStatus defines the status for a KongKeySet.
            properties:
              conditions:
                description: Conditions describe the status of the Konnect entity.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              konnect:
                description: Konnect contains the Konnect entity status.
                properties:
                  controlPlaneID:
                    description: ControlPlaneID is the Konnect ID of the ControlPlane
                      this Route is associated with.
                    type: string
                  id:
                    description: |-
                      ID is the unique identifier of the Konnect entity as assigned by Konnect API.
                      If it's unset (empty string), it means the Konnect entity hasn't been created yet.
                    type: string
                  organizationID:
                    description: OrgID is ID of Konnect Org that this entity has been
                      created in.
                    type: string
                  serverURL:
                    description: ServerURL is the URL of the Konnect server in which
                      the entity exists.
                    type: string
                type: object
            type: object
        required:
        - spec
        type: object
        x-kubernetes-validations:
        - message: spec.controlPlaneRef is immutable when an entity is already Programmed
          rule: '(!self.status.conditions.exists(c, c.type == ''Programmed'' && c.status
            == ''True'')) ? true : oldSelf.spec.controlPlaneRef == self.spec.controlPlaneRef'
        - message: spec.controlPlaneRef cannot specify namespace for namespaced resource
          rule: '(!has(self.spec.controlPlaneRef) || !has(self.spec.controlPlaneRef.konnectNamespacedRef))
            ? true : !has(self.spec.controlPlaneRef.konnectNamespacedRef.__namespace__)'
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: ingress-controller,gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: konglicenses.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong-ingress-controller
    - kong
    kind: KongLicense
    listKind: KongLicenseList
    plural: konglicenses
    shortNames:
    - kl
    singular: konglicense
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: Age
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Enabled to configure on Kong gateway instances
      jsonPath: .enabled
      name: Enabled
      type: boolean
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KongLicense stores a Kong enterprise license to apply to managed
          Kong gateway instances.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          enabled:
            default: true
            description: |-
              Enabled is set to true to let controllers (like KIC or KGO) to reconcile it.
              Default value is true to apply the license by default.
            type: boolean
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          rawLicenseString:
            description: RawLicenseString is a string with the raw content of the
              license.
            type: string
          status:
            description: Status is the status of the KongLicense being processed by
              controllers.
            properties:
              controllers:
                items:
                  description: |-
                    KongLicenseControllerStatus is the status of owning KongLicense being processed
                    identified by the controllerName field.
                  properties:
                    conditions:
                      default:
                      - lastTransitionTime: "1970-01-01T00:00:00Z"
                        message: Waiting for controller
                        reason: Pending
                        status: Unknown
                        type: Programmed
                      description: Conditions describe the current conditions of the
                        KongLicense on the controller.
                      items:
                        description: Condition contains details for one aspect of
                          the current state of this API Resource.
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: |-
                        ControllerName is an identifier of the controller to reconcile this KongLicense.
                        Should be unique in the list of controller statuses.
                      type: string
                    controllerRef:
                      description: |-
                        ControllerRef is the reference of the controller to reconcile this KongLicense.
                        It is usually the name of (KIC/KGO) pod that reconciles it.
                      properties:
                        group:
                          description: |-
                            Group is the group of referent.
                            It should be empty if the referent is in "core" group (like pod).
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          description: |-
                            Kind is the kind of the referent.
                            By default the nil kind means kind Pod.
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: Name is the name of the referent.
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace is the namespace of the referent.
                            It should be empty if the referent is cluster scoped.
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - controllerName
                x-kubernetes-list-type: map
            type: object
        required:
        - enabled
        - rawLicenseString
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: kongpluginbindings.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong
    kind: KongPluginBinding
    listKind: KongPluginBindingList
    plural: kongpluginbindings
    singular: kongpluginbinding
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Kind of the plugin
      jsonPath: .spec.pluginRef.kind
      name: Plugin-kind
      type: string
    - description: Name of the plugin
      jsonPath: .spec.pluginRef.name
      name: Plugin-name
      type: string
    - description: The Resource is Programmed
      jsonPath: .status.conditions[?(@.type=='Programmed')].status
      name: Programmed
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KongPluginBinding is the schema for Plugin Bindings API which
          defines a Kong Plugin Binding.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: KongPluginBindingSpec defines specification of a KongPluginBinding.
            properties:
              controlPlaneRef:
                description: ControlPlaneRef is a reference to a ControlPlane this
                  KongPluginBinding is associated with.
                properties:
                  konnectID:
                    description: |-
                      KonnectID is the schema for the KonnectID type.
                      This field is required when the Type is konnectID.
                    type: string
                  konnectNamespacedRef:
                    description: |-
                      KonnectNamespacedRef is a reference to a Konnect Control Plane entity inside the cluster.
                      It contains the name of the Konnect Control Plane.
                      This field is required when the Type is konnectNamespacedRef.
                    properties:
                      name:
                        description: Name is the name of the Konnect Control Plane.
                        type: string
                      namespace:
                        description: |-
                          Namespace is the namespace where the Konnect Control Plane is in.
                          Currently only cluster scoped resources (KongVault) are allowed to set `konnectNamespacedRef.namespace`.
                        type: string
                    required:
                    - name
                    type: object
                  type:
                    default: kic
                    description: |-
                      Type indicates the type of the control plane being referenced. Allowed values:
                      - konnectID
                      - konnectNamespacedRef
                      - kic

                      The default is kic, which implies that the Control Plane is KIC.
                    enum:
                    - konnectID
                    - konnectNamespacedRef
                    - kic
                    type: string
                type: object
                x-kubernetes-validations:
                - message: '''konnectID'' type is not supported'
                  rule: self.type != 'konnectID'
                - message: when type is konnectNamespacedRef, konnectNamespacedRef
                    must be set
                  rule: '(has(self.type) && self.type == ''konnectNamespacedRef'')
                    ? has(self.konnectNamespacedRef) : true'
                - message: when type is konnectNamespacedRef, konnectID must not be
                    set
                  rule: '(has(self.type) && self.type == ''konnectNamespacedRef'')
                    ? !has(self.konnectID) : true'
                - message: when type is konnectID, konnectID must be set
                  rule: '(has(self.type) && self.type == ''konnectID'') ? has(self.konnectID)
                    : true'
                - message: when type is konnectID, konnectNamespacedRef must not be
                    set
                  rule: '(has(self.type) && self.type == ''konnectID'') ? !has(self.konnectNamespacedRef)
                    : true'
                - message: when type is kic, konnectID must not be set
                  rule: '(has(self.type) && self.type == ''kic'') ? !has(self.konnectID)
                    : true'
                - message: when type is kic, konnectNamespacedRef must not be set
                  rule: '(has(self.type) && self.type == ''kic'') ? !has(self.konnectNamespacedRef)
                    : true'
                - message: when type is unset, konnectID must not be set
                  rule: '!has(self.type) ? !has(self.konnectID) : true'
                - message: when type is unset, konnectNamespacedRef must not be set
                  rule: '!has(self.type) ? !has(self.konnectNamespacedRef) : true'
              pluginRef:
                description: PluginReference is a reference to the KongPlugin or KongClusterPlugin
                  resource.
                properties:
                  kind:
                    default: KongPlugin
                    description: Kind can be KongPlugin or KongClusterPlugin. If not
                      set, it is assumed to be KongPlugin.
                    enum:
                    - KongPlugin
                    - KongClusterPlugin
                    type: string
                  name:
                    description: Name is the name of the KongPlugin or KongClusterPlugin
                      resource.
                    type: string
                required:
                - name
                type: object
                x-kubernetes-validations:
                - message: pluginRef name must be set
                  rule: self.name != ''
              scope:
                default: OnlyTargets
                description: Scope defines the scope of the plugin binding.
                enum:
                - OnlyTargets
                - GlobalInControlPlane
                type: string
              targets:
                description: |-
                  Targets contains the targets references. It is possible to set multiple combinations
                  of references, as described in https://docs.konghq.com/gateway/latest/key-concepts/plugins/#precedence
                  The complete set of allowed combinations and their order of precedence for plugins
                  configured to multiple entities is:

                  1. Consumer + route + service
                  2. Consumer group + service + route
                  3. Consumer + route
                  4. Consumer + service
                  5. Consumer group + route
                  6. Consumer group + service
                  7. Route + service
                  8. Consumer
                  9. Consumer group
                  10. Route
                  11. Service
                properties:
                  consumerGroupRef:
                    description: |-
                      ConsumerGroupReference is used to reference a configuration.konghq.com/ConsumerGroup resource.
                      The group/kind is fixed, therefore the reference is performed only by name.
                    properties:
                      name:
                        description: Name is the name of the entity.
                        type: string
                    required:
                    - name
                    type: object
                  consumerRef:
                    description: |-
                      ConsumerReference is used to reference a configuration.konghq.com/Consumer resource.
                      The group/kind is fixed, therefore the reference is performed only by name.
                    properties:
                      name:
                        description: Name is the name of the entity.
                        type: string
                    required:
                    - name
                    type: object
                  routeRef:
                    description: |-
                      RouteReference can be used to reference one of the following resouces:
                      - networking.k8s.io/Ingress
                      - gateway.networking.k8s.io/HTTPRoute
                      - gateway.networking.k8s.io/GRPCRoute
                      - configuration.konghq.com/KongRoute
                    properties:
                      group:
                        enum:
                        - ""
                        - core
                        - networking.k8s.io
                        - gateway.networking.k8s.io
                        - configuration.konghq.com
                        type: string
                      kind:
                        enum:
                        - Service
                        - Ingress
                        - HTTPRoute
                        - GRPCRoute
                        - KongService
                        - KongRoute
                        type: string
                      name:
                        description: Name is the name of the entity.
                        type: string
                    required:
                    - group
                    - kind
                    - name
                    type: object
                    x-kubernetes-validations:
                    - message: group/kind not allowed for the routeRef
                      rule: (self.kind == 'KongRoute' && self.group == 'configuration.konghq.com')
                        || (self.kind == 'Ingress' && self.group == 'networking.k8s.io')
                        || (self.kind == 'HTTPRoute' && self.group == 'gateway.networking.k8s.io')
                        || (self.kind == 'GRPCRoute' && self.group == 'gateway.networking.k8s.io')
                  serviceRef:
                    description: |-
                      ServiceReference can be used to reference one of the following resouces:
                      - core/Service or /Service
                      - configuration.konghq.com/KongService
                    properties:
                      group:
                        enum:
                        - ""
                        - core
                        - networking.k8s.io
                        - gateway.networking.k8s.io
                        - configuration.konghq.com
                        type: string
                      kind:
                        enum:
                        - Service
                        - Ingress
                        - HTTPRoute
                        - GRPCRoute
                        - KongService
                        - KongRoute
                        type: string
                      name:
                        description: Name is the name of the entity.
                        type: string
                    required:
                    - group
                    - kind
                    - name
                    type: object
                    x-kubernetes-validations:
                    - message: group/kind not allowed for the serviceRef
                      rule: (self.kind == 'KongService' && self.group == 'configuration.konghq.com')
                        || (self.kind == 'Service' && (self.group == '' || self.group
                        == 'core'))
                type: object
                x-kubernetes-validations:
                - message: Cannot set Consumer and ConsumerGroup at the same time
                  rule: '(has(self.consumerRef) ? !has(self.consumerGroupRef) : true)'
                - message: KongRoute can be used only when serviceRef is unset or
                    set to KongService
                  rule: '(has(self.routeRef) && self.routeRef.kind == ''KongRoute'')
                    ? (!has(self.serviceRef) || self.serviceRef.kind == ''KongService'')
                    : true'
                - message: KongService can be used only when routeRef is unset or
                    set to KongRoute
                  rule: '(has(self.serviceRef) && self.serviceRef.kind == ''KongService'')
                    ? (!has(self.routeRef) || self.routeRef.kind == ''KongRoute'')
                    : true'
            required:
            - controlPlaneRef
            - pluginRef
            type: object
            x-kubernetes-validations:
            - message: At least one target reference must be set when scope is 'OnlyTargets'
              rule: 'self.scope == ''OnlyTargets'' ? has(self.targets) && (has(self.targets.routeRef)
                || has(self.targets.serviceRef) || has(self.targets.consumerRef) ||
                has(self.targets.consumerGroupRef)) : true'
            - message: No targets must be set when scope is 'GlobalInControlPlane'
              rule: 'self.scope == ''GlobalInControlPlane'' ? !has(self.targets) :
                true'
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Programmed
            description: KongPluginBindingStatus represents the current status of
              the KongBinding resource.
            properties:
              conditions:
                description: Conditions describe the status of the Konnect entity.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              konnect:
                description: Konnect contains the Konnect entity status.
                properties:
                  controlPlaneID:
                    description: ControlPlaneID is the Konnect ID of the ControlPlane
                      this Route is associated with.
                    type: string
                  id:
                    description: |-
                      ID is the unique identifier of the Konnect entity as assigned by Konnect API.
                      If it's unset (empty string), it means the Konnect entity hasn't been created yet.
                    type: string
                  organizationID:
                    description: OrgID is ID of Konnect Org that this entity has been
                      created in.
                    type: string
                  serverURL:
                    description: ServerURL is the URL of the Konnect server in which
                      the entity exists.
                    type: string
                type: object
            type: object
        required:
        - spec
        type: object
        x-kubernetes-validations:
        - message: controlPlaneRef is required once set
          rule: '!has(oldSelf.spec.controlPlaneRef) || has(self.spec.controlPlaneRef)'
        - message: spec.controlPlaneRef is immutable when an entity is already Programmed
          rule: '(!self.status.conditions.exists(c, c.type == ''Programmed'' && c.status
            == ''True'')) ? true : oldSelf.spec.controlPlaneRef == self.spec.controlPlaneRef'
        - message: spec.controlPlaneRef cannot specify namespace for namespaced resource
          rule: '(!has(self.spec) || !has(self.spec.controlPlaneRef) || !has(self.spec.controlPlaneRef.konnectNamespacedRef))
            ? true : !has(self.spec.controlPlaneRef.konnectNamespacedRef.__namespace__)'
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: kongplugininstallations.gateway-operator.konghq.com
spec:
  group: gateway-operator.konghq.com
  names:
    categories:
    - kong
    - all
    kind: KongPluginInstallation
    listKind: KongPluginInstallationList
    plural: kongplugininstallations
    shortNames:
    - kpi
    singular: kongplugininstallation
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The Resource is accepted
      jsonPath: .status.conditions[?(@.type=='Accepted')].status
      name: Accepted
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          KongPluginInstallation allows using a custom Kong Plugin distributed as a container image available in a registry.
          Such a plugin can be associated with GatewayConfiguration or DataPlane to be available for particular Kong Gateway
          and configured with KongPlugin CRD.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: KongPluginInstallationSpec provides the information necessary
              to retrieve and install a Kong custom plugin.
            properties:
              image:
                description: The image is an OCI image URL for a packaged custom Kong
                  plugin.
                type: string
              imagePullSecretRef:
                description: |-
                  ImagePullSecretRef is a reference to a Kubernetes Secret containing credentials necessary to pull the OCI image
                  in Image. It must follow the format in https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry.
                  It is optional. If the image is public, omit this field.
                properties:
                  group:
                    default: ""
                    description: |-
                      Group is the group of the referent. For example, "gateway.networking.k8s.io".
                      When unspecified or empty string, core API group is inferred.
                    maxLength: 253
                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  kind:
                    default: Secret
                    description: Kind is kind of the referent. For example "Secret".
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                    type: string
                  name:
                    description: Name is the name of the referent.
                    maxLength: 253
                    minLength: 1
                    type: string
                  namespace:
                    description: |-
                      Namespace is the namespace of the referenced object. When unspecified, the local
                      namespace is inferred.

                      Note that when a namespace different than the local namespace is specified,
                      a ReferenceGrant object is required in the referent namespace to allow that
                      namespace's owner to accept the reference. See the ReferenceGrant
                      documentation for details.

                      Support: Core
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                required:
                - name
                type: object
            required:
            - image
            type: object
          status:
            description: KongPluginInstallationStatus defines the observed state of
              KongPluginInstallation.
            properties:
              conditions:
                description: Conditions describe the current conditions of this KongPluginInstallation.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              underlyingConfigMapName:
                description: |-
                  UnderlyingConfigMapName is the name of the ConfigMap that contains the plugin's content.
                  It is set when the plugin is successfully fetched and unpacked.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: ingress-controller,gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: kongplugins.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong-ingress-controller
    - kong
    kind: KongPlugin
    listKind: KongPluginList
    plural: kongplugins
    shortNames:
    - kp
    singular: kongplugin
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Name of the plugin
      jsonPath: .plugin
      name: Plugin-Type
      type: string
    - description: Age
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Indicates if the plugin is disabled
      jsonPath: .disabled
      name: Disabled
      priority: 1
      type: boolean
    - description: Configuration of the plugin
      jsonPath: .config
      name: Config
      priority: 1
      type: string
    - jsonPath: .status.conditions[?(@.type=="Programmed")].status
      name: Programmed
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: KongPlugin is the Schema for the kongplugins API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          config:
            description: |-
              Config contains the plugin configuration. It's a list of keys and values
              required to configure the plugin.
              Please read the documentation of the plugin being configured to set values
              in here. For any plugin in Kong, anything that goes in the `config` JSON
              key in the Admin API request, goes into this property.
              Only one of `config` or `configFrom` may be used in a KongPlugin, not both at once.
            type: object
            x-kubernetes-preserve-unknown-fields: true
          configFrom:
            description: |-
              ConfigFrom references a secret containing the plugin configuration.
              This should be used when the plugin configuration contains sensitive information,
              such as AWS credentials in the Lambda plugin or the client secret in the OIDC plugin.
              Only one of `config` or `configFrom` may be used in a KongPlugin, not both at once.
            properties:
              secretKeyRef:
                description: Specifies a name and a key of a secret to refer to. The
                  namespace is implicitly set to the one of referring object.
                properties:
                  key:
                    description: The key containing the value.
                    type: string
                  name:
                    description: The secret containing the key.
                    type: string
                required:
                - key
                - name
                type: object
            required:
            - secretKeyRef
            type: object
          configPatches:
            description: |-
              ConfigPatches represents JSON patches to the configuration of the plugin.
              Each item means a JSON patch to add something in the configuration,
              where path is specified in `path` and value is in `valueFrom` referencing
              a key in a secret.
              When Config is specified, patches will be applied to the configuration in Config.
              Otherwise, patches will be applied to an empty object.
            items:
              description: |-
                ConfigPatch is a JSON patch (RFC6902) to add values from Secret to the generated configuration.
                It is an equivalent of the following patch:
                `{"op": "add", "path": {.Path}, "value": {.ComputedValueFrom}}`.
              properties:
                path:
                  description: Path is the JSON-Pointer value (RFC6901) that references
                    a location within the target configuration.
                  type: string
                valueFrom:
                  description: ValueFrom is the reference to a key of a secret where
                    the patched value comes from.
                  properties:
                    secretKeyRef:
                      description: Specifies a name and a key of a secret to refer
                        to. The namespace is implicitly set to the one of referring
                        object.
                      properties:
                        key:
                          description: The key containing the value.
                          type: string
                        name:
                          description: The secret containing the key.
                          type: string
                      required:
                      - key
                      - name
                      type: object
                  required:
                  - secretKeyRef
                  type: object
              required:
              - path
              - valueFrom
              type: object
            type: array
          consumerRef:
            description: ConsumerRef is a reference to a particular consumer.
            type: string
          disabled:
            description: Disabled set if the plugin is disabled or not.
            type: boolean
          instance_name:
            description: |-
              InstanceName is an optional custom name to identify an instance of the plugin. This is useful when running the
              same plugin in multiple contexts, for example, on multiple services.
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          ordering:
            description: |-
              Ordering overrides the normal plugin execution order. It's only available on Kong Enterprise.
              `<phase>` is a request processing phase (for example, `access` or `body_filter`) and
              `<plugin>` is the name of the plugin that will run before or after the KongPlugin.
              For example, a KongPlugin with `plugin: rate-limiting` and `before.access: ["key-auth"]`
              will create a rate limiting plugin that limits requests _before_ they are authenticated.
            properties:
              after:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: PluginOrderingPhase indicates which plugins in a phase
                  should affect the target plugin's order
                type: object
              before:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: PluginOrderingPhase indicates which plugins in a phase
                  should affect the target plugin's order
                type: object
            type: object
          plugin:
            description: PluginName is the name of the plugin to which to apply the
              config.
            type: string
          protocols:
            description: |-
              Protocols configures plugin to run on requests received on specific
              protocols.
            items:
              description: |-
                KongProtocol is a valid Kong protocol.
                This alias is necessary to deal with https://github.com/kubernetes-sigs/controller-tools/issues/342
              enum:
              - http
              - https
              - grpc
              - grpcs
              - tcp
              - tls
              - udp
              type: string
            type: array
          run_on:
            description: |-
              RunOn configures the plugin to run on the first or the second or both
              nodes in case of a service mesh deployment.
            enum:
            - first
            - second
            - all
            type: string
          status:
            description: Status represents the current status of the KongPlugin resource.
            properties:
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Programmed
                description: |-
                  Conditions describe the current conditions of the KongPluginStatus.

                  Known condition types are:

                  * "Programmed"
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - plugin
        type: object
        x-kubernetes-validations:
        - message: Using both config and configFrom fields is not allowed.
          rule: '!(has(self.config) && has(self.configFrom))'
        - message: Using both configFrom and configPatches fields is not allowed.
          rule: '!(has(self.configFrom) && has(self.configPatches))'
        - message: The plugin field is immutable
          rule: self.plugin == oldSelf.plugin
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: kongroutes.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong
    kind: KongRoute
    listKind: KongRouteList
    plural: kongroutes
    singular: kongroute
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The Resource is Programmed on Konnect
      jsonPath: .status.conditions[?(@.type=='Programmed')].status
      name: Programmed
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KongRoute is the schema for Routes API which defines a Kong Route.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: KongRouteSpec defines spec of a Kong Route.
            properties:
              controlPlaneRef:
                description: |-
                  ControlPlaneRef is a reference to a ControlPlane this KongRoute is associated with.
                  Route can either specify a ControlPlaneRef and be 'serviceless' route or
                  specify a ServiceRef and be associated with a Service.
                properties:
                  konnectID:
                    description: |-
                      KonnectID is the schema for the KonnectID type.
                      This field is required when the Type is konnectID.
                    type: string
                  konnectNamespacedRef:
                    description: |-
                      KonnectNamespacedRef is a reference to a Konnect Control Plane entity inside the cluster.
                      It contains the name of the Konnect Control Plane.
                      This field is required when the Type is konnectNamespacedRef.
                    properties:
                      name:
                        description: Name is the name of the Konnect Control Plane.
                        type: string
                      namespace:
                        description: |-
                          Namespace is the namespace where the Konnect Control Plane is in.
                          Currently only cluster scoped resources (KongVault) are allowed to set `konnectNamespacedRef.namespace`.
                        type: string
                    required:
                    - name
                    type: object
                  type:
                    default: kic
                    description: |-
                      Type indicates the type of the control plane being referenced. Allowed values:
                      - konnectID
                      - konnectNamespacedRef
                      - kic

                      The default is kic, which implies that the Control Plane is KIC.
                    enum:
                    - konnectID
                    - konnectNamespacedRef
                    - kic
                    type: string
                type: object
                x-kubernetes-validations:
                - message: '''konnectID'' type is not supported'
                  rule: self.type != 'konnectID'
                - message: when type is konnectNamespacedRef, konnectNamespacedRef
                    must be set
                  rule: '(has(self.type) && self.type == ''konnectNamespacedRef'')
                    ? has(self.konnectNamespacedRef) : true'
                - message: when type is konnectNamespacedRef, konnectID must not be
                    set
                  rule: '(has(self.type) && self.type == ''konnectNamespacedRef'')
                    ? !has(self.konnectID) : true'
                - message: when type is konnectID, konnectID must be set
                  rule: '(has(self.type) && self.type == ''konnectID'') ? has(self.konnectID)
                    : true'
                - message: when type is konnectID, konnectNamespacedRef must not be
                    set
                  rule: '(has(self.type) && self.type == ''konnectID'') ? !has(self.konnectNamespacedRef)
                    : true'
                - message: when type is kic, konnectID must not be set
                  rule: '(has(self.type) && self.type == ''kic'') ? !has(self.konnectID)
                    : true'
                - message: when type is kic, konnectNamespacedRef must not be set
                  rule: '(has(self.type) && self.type == ''kic'') ? !has(self.konnectNamespacedRef)
                    : true'
                - message: when type is unset, konnectID must not be set
                  rule: '!has(self.type) ? !has(self.konnectID) : true'
                - message: when type is unset, konnectNamespacedRef must not be set
                  rule: '!has(self.type) ? !has(self.konnectNamespacedRef) : true'
              destinations:
                description: A list of IP destinations of incoming connections that
                  match this Route when using stream routing. Each entry is an object
                  with fields "ip" (optionally in CIDR range notation) and/or "port".
                items:
                  properties:
                    ip:
                      type: string
                    port:
                      format: int64
                      type: integer
                  type: object
                type: array
              headers:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: 'One or more lists of values indexed by header name that
                  will cause this Route to match if present in the request. The `Host`
                  header cannot be used with this attribute: hosts should be specified
                  using the `hosts` attribute. When `headers` contains only one value
                  and that value starts with the special prefix `~*`, the value is
                  interpreted as a regular expression.'
                type: object
              hosts:
                description: A list of domain names that match this Route. Note that
                  the hosts value is case sensitive.
                items:
                  type: string
                type: array
              https_redirect_status_code:
                description: 'The status code Kong responds with when all properties
                  of a Route match except the protocol i.e. if the protocol of the
                  request is `HTTP` instead of `HTTPS`. `Location` header is injected
                  by Kong if the field is set to 301, 302, 307 or 308. Note: This
                  config applies only if the Route is configured to only accept the
                  `https` protocol.'
                format: int64
                type: integer
              methods:
                description: A list of HTTP methods that match this Route.
                items:
                  type: string
                type: array
              name:
                description: The name of the Route. Route names must be unique, and
                  they are case sensitive. For example, there can be two different
                  Routes named "test" and "Test".
                type: string
              path_handling:
                description: Controls how the Service path, Route path and requested
                  path are combined when sending a request to the upstream. See above
                  for a detailed description of each behavior.
                type: string
              paths:
                description: A list of paths that match this Route.
                items:
                  type: string
                type: array
              preserve_host:
                description: When matching a Route via one of the `hosts` domain names,
                  use the request `Host` header in the upstream request headers. If
                  set to `false`, the upstream `Host` header will be that of the Service's
                  `host`.
                type: boolean
              protocols:
                description: An array of the protocols this Route should allow. See
                  KongRoute for a list of accepted protocols. When set to only `"https"`,
                  HTTP requests are answered with an upgrade error. When set to only
                  `"http"`, HTTPS requests are answered with an error.
                items:
                  type: string
                type: array
              regex_priority:
                description: A number used to choose which route resolves a given
                  request when several routes match it using regexes simultaneously.
                  When two routes match the path and have the same `regex_priority`,
                  the older one (lowest `created_at`) is used. Note that the priority
                  for non-regex routes is different (longer non-regex routes are matched
                  before shorter ones).
                format: int64
                type: integer
              request_buffering:
                description: Whether to enable request body buffering or not. With
                  HTTP 1.1, it may make sense to turn this off on services that receive
                  data with chunked transfer encoding.
                type: boolean
              response_buffering:
                description: Whether to enable response body buffering or not. With
                  HTTP 1.1, it may make sense to turn this off on services that send
                  data with chunked transfer encoding.
                type: boolean
              serviceRef:
                description: |-
                  ServiceRef is a reference to a Service this KongRoute is associated with.
                  Route can either specify a ControlPlaneRef and be 'serviceless' route or
                  specify a ServiceRef and be associated with a Service.
                properties:
                  namespacedRef:
                    description: NamespacedRef is a reference to a KongService.
                    properties:
                      name:
                        description: Name is the name of the entity.
                        minLength: 1
                        type: string
                    required:
                    - name
                    type: object
                  type:
                    description: |-
                      Type can be one of:
                      - namespacedRef
                    enum:
                    - namespacedRef
                    type: string
                type: object
                x-kubernetes-validations:
                - message: when type is namespacedRef, namespacedRef must be set
                  rule: 'self.type == ''namespacedRef'' ? has(self.namespacedRef)
                    : true'
              snis:
                description: A list of SNIs that match this Route when using stream
                  routing.
                items:
                  type: string
                type: array
              sources:
                description: A list of IP sources of incoming connections that match
                  this Route when using stream routing. Each entry is an object with
                  fields "ip" (optionally in CIDR range notation) and/or "port".
                items:
                  properties:
                    ip:
                      type: string
                    port:
                      format: int64
                      type: integer
                  type: object
                type: array
              strip_path:
                description: When matching a Route via one of the `paths`, strip the
                  matching prefix from the upstream request URL.
                type: boolean
              tags:
                description: An optional set of strings associated with the Route
                  for grouping and filtering.
                items:
                  type: string
                maxItems: 20
                type: array
                x-kubernetes-validations:
                - message: tags entries must not be longer than 128 characters
                  rule: self.all(tag, size(tag) >= 1 && size(tag) <= 128)
            type: object
            x-kubernetes-validations:
            - message: KIC is not supported as control plane
              rule: '!has(self.controlPlaneRef) ? true : self.controlPlaneRef.type
                != ''kic'''
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Programmed
            description: KongRouteStatus represents the current status of the Kong
              Route resource.
            properties:
              conditions:
                description: Conditions describe the status of the Konnect entity.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              konnect:
                description: Konnect contains the Konnect entity status.
                properties:
                  controlPlaneID:
                    description: ControlPlaneID is the Konnect ID of the ControlPlane
                      this entity is associated with.
                    type: string
                  id:
                    description: |-
                      ID is the unique identifier of the Konnect entity as assigned by Konnect API.
                      If it's unset (empty string), it means the Konnect entity hasn't been created yet.
                    type: string
                  organizationID:
                    description: OrgID is ID of Konnect Org that this entity has been
                      created in.
                    type: string
                  serverURL:
                    description: ServerURL is the URL of the Konnect server in which
                      the entity exists.
                    type: string
                  serviceID:
                    description: ServiceID is the Konnect ID of the Service this entity
                      is associated with.
                    type: string
                type: object
            type: object
        required:
        - spec
        type: object
        x-kubernetes-validations:
        - message: serviceRef is required once set
          rule: '!has(oldSelf.spec.serviceRef) || has(self.spec.serviceRef)'
        - message: If protocols has 'http', at least one of 'hosts', 'methods', 'paths'
            or 'headers' must be set
          rule: 'has(self.spec.protocols) && self.spec.protocols.exists(p, p == ''http'')
            ? (has(self.spec.hosts) || has(self.spec.methods) || has(self.spec.paths)
            || has(self.spec.paths) || has(self.spec.paths) || has(self.spec.headers)
            ) : true'
        - message: Has to set either controlPlaneRef or serviceRef
          rule: has(self.spec.controlPlaneRef) && !has(self.spec.serviceRef) || !has(self.spec.controlPlaneRef)
            && has(self.spec.serviceRef)
        - message: spec.controlPlaneRef cannot specify namespace for namespaced resource
          rule: '(!has(self.spec.controlPlaneRef) || !has(self.spec.controlPlaneRef.konnectNamespacedRef))
            ? true : !has(self.spec.controlPlaneRef.konnectNamespacedRef.__namespace__)'
        - message: spec.serviceRef is immutable when an entity is already Programmed
          rule: '!has(self.spec.serviceRef) ? true : (!self.status.conditions.exists(c,
            c.type == ''Programmed'' && c.status == ''True'')) ? true : oldSelf.spec.serviceRef
            == self.spec.serviceRef'
        - message: spec.controlPlaneRef is immutable when an entity is already Programmed
          rule: '!has(self.spec.controlPlaneRef) ? true :(!self.status.conditions.exists(c,
            c.type == ''Programmed'' && c.status == ''True'')) ? true : oldSelf.spec.controlPlaneRef
            == self.spec.controlPlaneRef'
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: kongservices.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong
    kind: KongService
    listKind: KongServiceList
    plural: kongservices
    singular: kongservice
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Host of the service
      jsonPath: .spec.host
      name: Host
      type: string
    - description: Protocol of the service
      jsonPath: .spec.protocol
      name: Protocol
      type: string
    - description: The Resource is Programmed on Konnect
      jsonPath: .status.conditions[?(@.type=='Programmed')].status
      name: Programmed
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KongService is the schema for Services API which defines a Kong
          Service.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: KongServiceSpec defines specification of a Kong Service.
            properties:
              connect_timeout:
                description: The timeout in milliseconds for establishing a connection
                  to the upstream server.
                format: int64
                type: integer
              controlPlaneRef:
                description: ControlPlaneRef is a reference to a ControlPlane this
                  KongService is associated with.
                properties:
                  konnectID:
                    description: |-
                      KonnectID is the schema for the KonnectID type.
                      This field is required when the Type is konnectID.
                    type: string
                  konnectNamespacedRef:
                    description: |-
                      KonnectNamespacedRef is a reference to a Konnect Control Plane entity inside the cluster.
                      It contains the name of the Konnect Control Plane.
                      This field is required when the Type is konnectNamespacedRef.
                    properties:
                      name:
                        description: Name is the name of the Konnect Control Plane.
                        type: string
                      namespace:
                        description: |-
                          Namespace is the namespace where the Konnect Control Plane is in.
                          Currently only cluster scoped resources (KongVault) are allowed to set `konnectNamespacedRef.namespace`.
                        type: string
                    required:
                    - name
                    type: object
                  type:
                    default: kic
                    description: |-
                      Type indicates the type of the control plane being referenced. Allowed values:
                      - konnectID
                      - konnectNamespacedRef
                      - kic

                      The default is kic, which implies that the Control Plane is KIC.
                    enum:
                    - konnectID
                    - konnectNamespacedRef
                    - kic
                    type: string
                type: object
                x-kubernetes-validations:
                - message: '''konnectID'' type is not supported'
                  rule: self.type != 'konnectID'
                - message: when type is konnectNamespacedRef, konnectNamespacedRef
                    must be set
                  rule: '(has(self.type) && self.type == ''konnectNamespacedRef'')
                    ? has(self.konnectNamespacedRef) : true'
                - message: when type is konnectNamespacedRef, konnectID must not be
                    set
                  rule: '(has(self.type) && self.type == ''konnectNamespacedRef'')
                    ? !has(self.konnectID) : true'
                - message: when type is konnectID, konnectID must be set
                  rule: '(has(self.type) && self.type == ''konnectID'') ? has(self.konnectID)
                    : true'
                - message: when type is konnectID, konnectNamespacedRef must not be
                    set
                  rule: '(has(self.type) && self.type == ''konnectID'') ? !has(self.konnectNamespacedRef)
                    : true'
                - message: when type is kic, konnectID must not be set
                  rule: '(has(self.type) && self.type == ''kic'') ? !has(self.konnectID)
                    : true'
                - message: when type is kic, konnectNamespacedRef must not be set
                  rule: '(has(self.type) && self.type == ''kic'') ? !has(self.konnectNamespacedRef)
                    : true'
                - message: when type is unset, konnectID must not be set
                  rule: '!has(self.type) ? !has(self.konnectID) : true'
                - message: when type is unset, konnectNamespacedRef must not be set
                  rule: '!has(self.type) ? !has(self.konnectNamespacedRef) : true'
              enabled:
                description: 'Whether the Service is active. If set to `false`, the
                  proxy behavior will be as if any routes attached to it do not exist
                  (404). Default: `true`.'
                type: boolean
              host:
                description: The host of the upstream server. Note that the host value
                  is case sensitive.
                type: string
              name:
                description: The Service name.
                type: string
              path:
                description: The path to be used in requests to the upstream server.
                type: string
              port:
                description: The upstream server port.
                format: int64
                type: integer
              protocol:
                description: The protocol used to communicate with the upstream.
                type: string
              read_timeout:
                description: The timeout in milliseconds between two successive read
                  operations for transmitting a request to the upstream server.
                format: int64
                type: integer
              retries:
                description: The number of retries to execute upon failure to proxy.
                format: int64
                type: integer
              tags:
                description: An optional set of strings associated with the Service
                  for grouping and filtering.
                items:
                  type: string
                maxItems: 20
                type: array
                x-kubernetes-validations:
                - message: tags entries must not be longer than 128 characters
                  rule: self.all(tag, size(tag) >= 1 && size(tag) <= 128)
              tls_verify:
                description: Whether to enable verification of upstream server TLS
                  certificate. If set to `null`, then the Nginx default is respected.
                type: boolean
              tls_verify_depth:
                description: Maximum depth of chain while verifying Upstream server's
                  TLS certificate. If set to `null`, then the Nginx default is respected.
                format: int64
                type: integer
              url:
                description: Helper field to set `protocol`, `host`, `port` and `path`
                  using a URL. This field is write-only and is not returned in responses.
                type: string
              write_timeout:
                description: The timeout in milliseconds between two successive write
                  operations for transmitting a request to the upstream server.
                format: int64
                type: integer
            required:
            - controlPlaneRef
            - host
            type: object
            x-kubernetes-validations:
            - message: KIC is not supported as control plane
              rule: '!has(self.controlPlaneRef) ? true : self.controlPlaneRef.type
                != ''kic'''
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Programmed
            description: KongServiceStatus represents the current status of the Kong
              Service resource.
            properties:
              conditions:
                description: Conditions describe the status of the Konnect entity.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              konnect:
                description: Konnect contains the Konnect entity status.
                properties:
                  controlPlaneID:
                    description: ControlPlaneID is the Konnect ID of the ControlPlane
                      this Route is associated with.
                    type: string
                  id:
                    description: |-
                      ID is the unique identifier of the Konnect entity as assigned by Konnect API.
                      If it's unset (empty string), it means the Konnect entity hasn't been created yet.
                    type: string
                  organizationID:
                    description: OrgID is ID of Konnect Org that this entity has been
                      created in.
                    type: string
                  serverURL:
                    description: ServerURL is the URL of the Konnect server in which
                      the entity exists.
                    type: string
                type: object
            type: object
        required:
        - spec
        type: object
        x-kubernetes-validations:
        - message: controlPlaneRef is required once set
          rule: '!has(oldSelf.spec.controlPlaneRef) || has(self.spec.controlPlaneRef)'
        - message: spec.controlPlaneRef cannot specify namespace for namespaced resource
          rule: '(!has(self.spec.controlPlaneRef) || !has(self.spec.controlPlaneRef.konnectNamespacedRef))
            ? true : !has(self.spec.controlPlaneRef.konnectNamespacedRef.__namespace__)'
        - message: spec.controlPlaneRef is immutable when an entity is already Programmed
          rule: '(!has(self.spec.controlPlaneRef)) ? true : (!has(self.status) ||
            !self.status.conditions.exists(c, c.type == ''Programmed'' && c.status
            == ''True'')) ? true : oldSelf.spec.controlPlaneRef == self.spec.controlPlaneRef'
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: kongsnis.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong
    kind: KongSNI
    listKind: KongSNIList
    plural: kongsnis
    singular: kongsni
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The Resource is Programmed on Konnect
      jsonPath: .status.conditions[?(@.type=='Programmed')].status
      name: Programmed
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KongSNI is the schema for SNI API which defines a Kong SNI.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: KongSNISpec defines specification of a Kong SNI.
            properties:
              certificateRef:
                description: CertificateRef is the reference to the certificate to
                  which the KongSNI is attached.
                properties:
                  name:
                    description: Name is the name of the entity.
                    minLength: 1
                    type: string
                required:
                - name
                type: object
              name:
                description: Name is the name of the SNI. Required and must be a host
                  or wildcard host.
                minLength: 1
                type: string
              tags:
                description: Tags is an optional set of strings associated with the
                  SNI for grouping and filtering.
                items:
                  type: string
                maxItems: 20
                type: array
                x-kubernetes-validations:
                - message: tags entries must not be longer than 128 characters
                  rule: self.all(tag, size(tag) >= 1 && size(tag) <= 128)
            required:
            - certificateRef
            - name
            type: object
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Programmed
            description: KongSNIStatus defines the status for a KongSNI.
            properties:
              conditions:
                description: Conditions describe the status of the Konnect entity.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              konnect:
                description: Konnect contains the Konnect entity status.
                properties:
                  certificateID:
                    description: CertificateID is the Konnect ID of the Certificate
                      this entity is associated with.
                    type: string
                  controlPlaneID:
                    description: ControlPlaneID is the Konnect ID of the ControlPlane
                      this entity is associated with.
                    type: string
                  id:
                    description: |-
                      ID is the unique identifier of the Konnect entity as assigned by Konnect API.
                      If it's unset (empty string), it means the Konnect entity hasn't been created yet.
                    type: string
                  organizationID:
                    description: OrgID is ID of Konnect Org that this entity has been
                      created in.
                    type: string
                  serverURL:
                    description: ServerURL is the URL of the Konnect server in which
                      the entity exists.
                    type: string
                type: object
            type: object
        required:
        - spec
        type: object
        x-kubernetes-validations:
        - message: spec.certificateRef is immutable when programmed
          rule: '(!self.status.conditions.exists(c, c.type == ''Programmed'' && c.status
            == ''True'')) ? true : oldSelf.spec.certificateRef == self.spec.certificateRef'
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: kongtargets.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong
    kind: KongTarget
    listKind: KongTargetList
    plural: kongtargets
    singular: kongtarget
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The Resource is Programmed on Konnect
      jsonPath: .status.conditions[?(@.type=='Programmed')].status
      name: Programmed
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KongTarget is the schema for Target API which defines a Kong
          Target attached to a Kong Upstream.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: KongTargetSpec defines the spec of KongTarget.
            properties:
              tags:
                description: Tags is an optional set of strings associated with the
                  Target for grouping and filtering.
                items:
                  type: string
                maxItems: 20
                type: array
                x-kubernetes-validations:
                - message: tags entries must not be longer than 128 characters
                  rule: self.all(tag, size(tag) >= 1 && size(tag) <= 128)
              target:
                description: Target is the target address of the upstream.
                type: string
              upstreamRef:
                description: UpstreamRef is a reference to a KongUpstream this KongTarget
                  is attached to.
                properties:
                  name:
                    description: Name is the name of the entity.
                    type: string
                required:
                - name
                type: object
              weight:
                default: 100
                description: Weight is the weight this target gets within the upstream
                  loadbalancer.
                maximum: 65535
                minimum: 0
                type: integer
            required:
            - target
            - upstreamRef
            - weight
            type: object
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Programmed
            description: KongTargetStatus defines the observed state of KongTarget.
            properties:
              conditions:
                description: Conditions describe the status of the Konnect entity.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              konnect:
                description: Konnect contains the Konnect entity status.
                properties:
                  controlPlaneID:
                    description: ControlPlaneID is the Konnect ID of the ControlPlane
                      this entity is associated with.
                    type: string
                  id:
                    description: |-
                      ID is the unique identifier of the Konnect entity as assigned by Konnect API.
                      If it's unset (empty string), it means the Konnect entity hasn't been created yet.
                    type: string
                  organizationID:
                    description: OrgID is ID of Konnect Org that this entity has been
                      created in.
                    type: string
                  serverURL:
                    description: ServerURL is the URL of the Konnect server in which
                      the entity exists.
                    type: string
                  upstreamID:
                    description: UpstreamID is the Konnect ID of the Upstream this
                      entity is associated with.
                    type: string
                type: object
            type: object
        required:
        - spec
        type: object
        x-kubernetes-validations:
        - message: spec.upstreamRef is immutable
          rule: oldSelf.spec.upstreamRef == self.spec.upstreamRef
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: kongupstreams.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong
    kind: KongUpstream
    listKind: KongUpstreamList
    plural: kongupstreams
    singular: kongupstream
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The Resource is Programmed on Konnect
      jsonPath: .status.conditions[?(@.type=='Programmed')].status
      name: Programmed
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KongUpstream is the schema for Upstream API which defines a Kong
          Upstream.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: KongUpstreamSpec defines the spec of Kong Upstream.
            properties:
              algorithm:
                description: Which load balancing algorithm to use.
                type: string
              client_certificate:
                description: If set, the certificate to be used as client certificate
                  while TLS handshaking to the upstream server.
                properties:
                  id:
                    type: string
                type: object
              controlPlaneRef:
                description: ControlPlaneRef is a reference to a ControlPlane this
                  KongUpstream is associated with.
                properties:
                  konnectID:
                    description: |-
                      KonnectID is the schema for the KonnectID type.
                      This field is required when the Type is konnectID.
                    type: string
                  konnectNamespacedRef:
                    description: |-
                      KonnectNamespacedRef is a reference to a Konnect Control Plane entity inside the cluster.
                      It contains the name of the Konnect Control Plane.
                      This field is required when the Type is konnectNamespacedRef.
                    properties:
                      name:
                        description: Name is the name of the Konnect Control Plane.
                        type: string
                      namespace:
                        description: |-
                          Namespace is the namespace where the Konnect Control Plane is in.
                          Currently only cluster scoped resources (KongVault) are allowed to set `konnectNamespacedRef.namespace`.
                        type: string
                    required:
                    - name
                    type: object
                  type:
                    default: kic
                    description: |-
                      Type indicates the type of the control plane being referenced. Allowed values:
                      - konnectID
                      - konnectNamespacedRef
                      - kic

                      The default is kic, which implies that the Control Plane is KIC.
                    enum:
                    - konnectID
                    - konnectNamespacedRef
                    - kic
                    type: string
                type: object
                x-kubernetes-validations:
                - message: '''konnectID'' type is not supported'
                  rule: self.type != 'konnectID'
                - message: when type is konnectNamespacedRef, konnectNamespacedRef
                    must be set
                  rule: '(has(self.type) && self.type == ''konnectNamespacedRef'')
                    ? has(self.konnectNamespacedRef) : true'
                - message: when type is konnectNamespacedRef, konnectID must not be
                    set
                  rule: '(has(self.type) && self.type == ''konnectNamespacedRef'')
                    ? !has(self.konnectID) : true'
                - message: when type is konnectID, konnectID must be set
                  rule: '(has(self.type) && self.type == ''konnectID'') ? has(self.konnectID)
                    : true'
                - message: when type is konnectID, konnectNamespacedRef must not be
                    set
                  rule: '(has(self.type) && self.type == ''konnectID'') ? !has(self.konnectNamespacedRef)
                    : true'
                - message: when type is kic, konnectID must not be set
                  rule: '(has(self.type) && self.type == ''kic'') ? !has(self.konnectID)
                    : true'
                - message: when type is kic, konnectNamespacedRef must not be set
                  rule: '(has(self.type) && self.type == ''kic'') ? !has(self.konnectNamespacedRef)
                    : true'
                - message: when type is unset, konnectID must not be set
                  rule: '!has(self.type) ? !has(self.konnectID) : true'
                - message: when type is unset, konnectNamespacedRef must not be set
                  rule: '!has(self.type) ? !has(self.konnectNamespacedRef) : true'
              hash_fallback:
                description: What to use as hashing input if the primary `hash_on`
                  does not return a hash (eg. header is missing, or no Consumer identified).
                  Not available if `hash_on` is set to `cookie`.
                type: string
              hash_fallback_header:
                description: The header name to take the value from as hash input.
                  Only required when `hash_fallback` is set to `header`.
                type: string
              hash_fallback_query_arg:
                description: The name of the query string argument to take the value
                  from as hash input. Only required when `hash_fallback` is set to
                  `query_arg`.
                type: string
              hash_fallback_uri_capture:
                description: The name of the route URI capture to take the value from
                  as hash input. Only required when `hash_fallback` is set to `uri_capture`.
                type: string
              hash_on:
                description: What to use as hashing input. Using `none` results in
                  a weighted-round-robin scheme with no hashing.
                type: string
              hash_on_cookie:
                description: The cookie name to take the value from as hash input.
                  Only required when `hash_on` or `hash_fallback` is set to `cookie`.
                  If the specified cookie is not in the request, Kong will generate
                  a value and set the cookie in the response.
                type: string
              hash_on_cookie_path:
                description: The cookie path to set in the response headers. Only
                  required when `hash_on` or `hash_fallback` is set to `cookie`.
                type: string
              hash_on_header:
                description: The header name to take the value from as hash input.
                  Only required when `hash_on` is set to `header`.
                type: string
              hash_on_query_arg:
                description: The name of the query string argument to take the value
                  from as hash input. Only required when `hash_on` is set to `query_arg`.
                type: string
              hash_on_uri_capture:
                description: The name of the route URI capture to take the value from
                  as hash input. Only required when `hash_on` is set to `uri_capture`.
                type: string
              healthchecks:
                properties:
                  active:
                    properties:
                      concurrency:
                        format: int64
                        type: integer
                      headers:
                        additionalProperties:
                          type: string
                        type: object
                      healthy:
                        properties:
                          http_statuses:
                            items:
                              format: int64
                              type: integer
                            type: array
                          interval:
                            type: number
                          successes:
                            format: int64
                            type: integer
                        type: object
                      http_path:
                        type: string
                      https_sni:
                        type: string
                      https_verify_certificate:
                        type: boolean
                      timeout:
                        type: number
                      type:
                        type: string
                      unhealthy:
                        properties:
                          http_failures:
                            format: int64
                            type: integer
                          http_statuses:
                            items:
                              format: int64
                              type: integer
                            type: array
                          interval:
                            type: number
                          tcp_failures:
                            format: int64
                            type: integer
                          timeouts:
                            format: int64
                            type: integer
                        type: object
                    type: object
                  passive:
                    properties:
                      healthy:
                        properties:
                          http_statuses:
                            items:
                              format: int64
                              type: integer
                            type: array
                          successes:
                            format: int64
                            type: integer
                        type: object
                      type:
                        type: string
                      unhealthy:
                        properties:
                          http_failures:
                            format: int64
                            type: integer
                          http_statuses:
                            items:
                              format: int64
                              type: integer
                            type: array
                          tcp_failures:
                            format: int64
                            type: integer
                          timeouts:
                            format: int64
                            type: integer
                        type: object
                    type: object
                  threshold:
                    type: number
                type: object
              host_header:
                description: The hostname to be used as `Host` header when proxying
                  requests through Kong.
                type: string
              name:
                description: This is a hostname, which must be equal to the `host`
                  of a Service.
                type: string
              slots:
                description: The number of slots in the load balancer algorithm. If
                  `algorithm` is set to `round-robin`, this setting determines the
                  maximum number of slots. If `algorithm` is set to `consistent-hashing`,
                  this setting determines the actual number of slots in the algorithm.
                  Accepts an integer in the range `10`-`65536`.
                format: int64
                maximum: 65536
                minimum: 10
                type: integer
              tags:
                description: An optional set of strings associated with the Upstream
                  for grouping and filtering.
                items:
                  type: string
                maxItems: 20
                type: array
                x-kubernetes-validations:
                - message: tags entries must not be longer than 128 characters
                  rule: self.all(tag, size(tag) >= 1 && size(tag) <= 128)
              use_srv_name:
                description: If set, the balancer will use SRV hostname(if DNS Answer
                  has SRV record) as the proxy upstream `Host`.
                type: boolean
            required:
            - controlPlaneRef
            type: object
            x-kubernetes-validations:
            - message: KIC is not supported as control plane
              rule: '!has(self.controlPlaneRef) ? true : self.controlPlaneRef.type
                != ''kic'''
            - message: hash_fallback_header is required when `hash_fallback` is set
                to `header`.
              rule: '!has(self.hash_fallback) || (self.hash_fallback != ''header''
                || has(self.hash_fallback_header))'
            - message: hash_fallback_query_arg is required when `hash_fallback` is
                set to `query_arg`.
              rule: '!has(self.hash_fallback) || (self.hash_fallback != ''query_arg''
                || has(self.hash_fallback_query_arg))'
            - message: hash_fallback_uri_capture is required when `hash_fallback`
                is set to `uri_capture`.
              rule: '!has(self.hash_fallback) || (self.hash_fallback != ''uri_capture''
                || has(self.hash_fallback_uri_capture))'
            - message: hash_on_cookie is required when hash_fallback is set to `cookie`.
              rule: '!has(self.hash_fallback) || (self.hash_fallback != ''cookie''
                || has(self.hash_on_cookie))'
            - message: hash_on_cookie is required when hash_on is set to `cookie`.
              rule: '!has(self.hash_on) || (self.hash_on != ''cookie'' || has(self.hash_on_cookie))'
            - message: hash_on_cookie_path is required when hash_fallback is set to
                `cookie`.
              rule: '!has(self.hash_fallback) || (self.hash_fallback != ''cookie''
                || has(self.hash_on_cookie_path))'
            - message: hash_on_cookie_path is required when hash_on is set to `cookie`.
              rule: '!has(self.hash_on) || (self.hash_on != ''cookie'' || has(self.hash_on_cookie_path))'
            - message: hash_on_header is required when hash_on is set to `header`.
              rule: '!has(self.hash_on) || (self.hash_on != ''header'' || has(self.hash_on_header))'
            - message: hash_on_query_arg is required when `hash_on` is set to `query_arg`.
              rule: '!has(self.hash_on) || (self.hash_on != ''query_arg'' || has(self.hash_on_query_arg))'
            - message: hash_on_uri_capture is required when `hash_on` is set to `uri_capture`.
              rule: '!has(self.hash_on) || (self.hash_on != ''uri_capture'' || has(self.hash_on_uri_capture))'
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Programmed
            description: KongUpstreamStatus represents the current status of the Kong
              Upstream resource.
            properties:
              conditions:
                description: Conditions describe the status of the Konnect entity.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              konnect:
                description: Konnect contains the Konnect entity status.
                properties:
                  controlPlaneID:
                    description: ControlPlaneID is the Konnect ID of the ControlPlane
                      this Route is associated with.
                    type: string
                  id:
                    description: |-
                      ID is the unique identifier of the Konnect entity as assigned by Konnect API.
                      If it's unset (empty string), it means the Konnect entity hasn't been created yet.
                    type: string
                  organizationID:
                    description: OrgID is ID of Konnect Org that this entity has been
                      created in.
                    type: string
                  serverURL:
                    description: ServerURL is the URL of the Konnect server in which
                      the entity exists.
                    type: string
                type: object
            type: object
        required:
        - spec
        type: object
        x-kubernetes-validations:
        - message: controlPlaneRef is required once set
          rule: '!has(oldSelf.spec.controlPlaneRef) || has(self.spec.controlPlaneRef)'
        - message: spec.controlPlaneRef cannot specify namespace for namespaced resource
          rule: '(!has(self.spec.controlPlaneRef) || !has(self.spec.controlPlaneRef.konnectNamespacedRef))
            ? true : !has(self.spec.controlPlaneRef.konnectNamespacedRef.__namespace__)'
        - message: spec.controlPlaneRef is immutable when an entity is already Programmed
          rule: '(!self.status.conditions.exists(c, c.type == ''Programmed'' && c.status
            == ''True'')) ? true : oldSelf.spec.controlPlaneRef == self.spec.controlPlaneRef'
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: ingress-controller,gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: kongvaults.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong-ingress-controller
    - kong
    kind: KongVault
    listKind: KongVaultList
    plural: kongvaults
    shortNames:
    - kv
    singular: kongvault
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: Name of the backend of the vault
      jsonPath: .spec.backend
      name: Backend Type
      type: string
    - description: Prefix of vault URI to reference the values in the vault
      jsonPath: .spec.prefix
      name: Prefix
      type: string
    - description: Age
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Description
      jsonPath: .spec.description
      name: Description
      priority: 1
      type: string
    - jsonPath: .status.conditions[?(@.type=="Programmed")].status
      name: Programmed
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          KongVault is the schema for kongvaults API which defines a custom Kong vault.
          A Kong vault is a storage to store sensitive data, where the values can be referenced in configuration of plugins.
          See: https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: KongVaultSpec defines specification of a custom Kong vault.
            properties:
              backend:
                description: |-
                  Backend is the type of the backend storing the secrets in the vault.
                  The supported backends of Kong is listed here:
                  https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/backends/
                minLength: 1
                type: string
              config:
                description: Config is the configuration of the vault. Varies for
                  different backends.
                x-kubernetes-preserve-unknown-fields: true
              controlPlaneRef:
                description: ControlPlaneRef is a reference to a Konnect ControlPlane
                  this KongVault is associated with.
                properties:
                  konnectID:
                    description: |-
                      KonnectID is the schema for the KonnectID type.
                      This field is required when the Type is konnectID.
                    type: string
                  konnectNamespacedRef:
                    description: |-
                      KonnectNamespacedRef is a reference to a Konnect Control Plane entity inside the cluster.
                      It contains the name of the Konnect Control Plane.
                      This field is required when the Type is konnectNamespacedRef.
                    properties:
                      name:
                        description: Name is the name of the Konnect Control Plane.
                        type: string
                      namespace:
                        description: |-
                          Namespace is the namespace where the Konnect Control Plane is in.
                          Currently only cluster scoped resources (KongVault) are allowed to set `konnectNamespacedRef.namespace`.
                        type: string
                    required:
                    - name
                    type: object
                  type:
                    default: kic
                    description: |-
                      Type indicates the type of the control plane being referenced. Allowed values:
                      - konnectID
                      - konnectNamespacedRef
                      - kic

                      The default is kic, which implies that the Control Plane is KIC.
                    enum:
                    - konnectID
                    - konnectNamespacedRef
                    - kic
                    type: string
                type: object
                x-kubernetes-validations:
                - message: '''konnectID'' type is not supported'
                  rule: self.type != 'konnectID'
                - message: when type is konnectNamespacedRef, konnectNamespacedRef
                    must be set
                  rule: '(has(self.type) && self.type == ''konnectNamespacedRef'')
                    ? has(self.konnectNamespacedRef) : true'
                - message: when type is konnectNamespacedRef, konnectID must not be
                    set
                  rule: '(has(self.type) && self.type == ''konnectNamespacedRef'')
                    ? !has(self.konnectID) : true'
                - message: when type is konnectID, konnectID must be set
                  rule: '(has(self.type) && self.type == ''konnectID'') ? has(self.konnectID)
                    : true'
                - message: when type is konnectID, konnectNamespacedRef must not be
                    set
                  rule: '(has(self.type) && self.type == ''konnectID'') ? !has(self.konnectNamespacedRef)
                    : true'
                - message: when type is kic, konnectID must not be set
                  rule: '(has(self.type) && self.type == ''kic'') ? !has(self.konnectID)
                    : true'
                - message: when type is kic, konnectNamespacedRef must not be set
                  rule: '(has(self.type) && self.type == ''kic'') ? !has(self.konnectNamespacedRef)
                    : true'
                - message: when type is unset, konnectID must not be set
                  rule: '!has(self.type) ? !has(self.konnectID) : true'
                - message: when type is unset, konnectNamespacedRef must not be set
                  rule: '!has(self.type) ? !has(self.konnectNamespacedRef) : true'
              description:
                description: Description is the additional information about the vault.
                type: string
              prefix:
                description: |-
                  Prefix is the prefix of vault URI for referencing values in the vault.
                  It is immutable after created.
                minLength: 1
                type: string
              tags:
                description: Tags are the tags associated to the vault for grouping
                  and filtering.
                items:
                  type: string
                maxItems: 20
                type: array
                x-kubernetes-validations:
                - message: tags entries must not be longer than 128 characters
                  rule: self.all(tag, size(tag) >= 1 && size(tag) <= 128)
            required:
            - backend
            - prefix
            type: object
          status:
            description: KongVaultStatus represents the current status of the KongVault
              resource.
            properties:
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Programmed
                description: |-
                  Conditions describe the current conditions of the KongVaultStatus.

                  Known condition types are:

                  * "Programmed"
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              konnect:
                description: Konnect contains the Konnect entity status.
                properties:
                  controlPlaneID:
                    description: ControlPlaneID is the Konnect ID of the ControlPlane
                      this Route is associated with.
                    type: string
                  id:
                    description: |-
                      ID is the unique identifier of the Konnect entity as assigned by Konnect API.
                      If it's unset (empty string), it means the Konnect entity hasn't been created yet.
                    type: string
                  organizationID:
                    description: OrgID is ID of Konnect Org that this entity has been
                      created in.
                    type: string
                  serverURL:
                    description: ServerURL is the URL of the Konnect server in which
                      the entity exists.
                    type: string
                type: object
            required:
            - conditions
            type: object
        required:
        - spec
        type: object
        x-kubernetes-validations:
        - message: The spec.prefix field is immutable
          rule: self.spec.prefix == oldSelf.spec.prefix
        - message: controlPlaneRef is required once set
          rule: '!has(oldSelf.spec.controlPlaneRef) || has(self.spec.controlPlaneRef)'
        - message: spec.controlPlaneRef is immutable when an entity is already Programmed
          rule: '(!has(self.status) || !self.status.conditions.exists(c, c.type ==
            ''Programmed'' && c.status == ''True'') || !has(self.spec.controlPlaneRef))
            ? true : oldSelf.spec.controlPlaneRef == self.spec.controlPlaneRef'
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: konnectapiauthconfigurations.konnect.konghq.com
spec:
  group: konnect.konghq.com
  names:
    categories:
    - kong
    kind: KonnectAPIAuthConfiguration
    listKind: KonnectAPIAuthConfigurationList
    plural: konnectapiauthconfigurations
    singular: konnectapiauthconfiguration
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The API authentication information is valid
      jsonPath: .status.conditions[?(@.type=='APIAuthValid')].status
      name: Valid
      type: string
    - description: Konnect Organization ID this API authentication configuration belongs
        to.
      jsonPath: .status.organizationID
      name: OrgID
      type: string
    - description: Configured server URL.
      jsonPath: .status.serverURL
      name: ServerURL
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KonnectAPIAuthConfiguration is the Schema for the Konnect configuration
          type.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the KonnectAPIAuthConfiguration
              resource.
            properties:
              secretRef:
                description: |-
                  SecretRef is a reference to a Kubernetes Secret containing the Konnect token.
                  This secret is required to have the konghq.com/credential label set to "konnect".
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              serverURL:
                description: |-
                  ServerURL is the URL of the Konnect server.
                  It can be either a full URL with an HTTPs scheme or just a hostname.
                  Please refer to https://docs.konghq.com/konnect/network/ for the list of supported hostnames.
                type: string
                x-kubernetes-validations:
                - message: Server URL is required
                  rule: size(self) > 0
                - message: Server URL is immutable
                  rule: self == oldSelf
                - message: Server URL must use HTTPs if specifying scheme
                  rule: 'isURL(self) ? url(self).getScheme() == ''https'' : true'
                - message: Server URL must satisfy hostname (RFC 1123) regex if not
                    a valid absolute URL
                  rule: 'size(self) > 0 && !isURL(self) ? self.matches(''^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]).)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9-]*[A-Za-z0-9])$'')
                    : true'
              token:
                description: Token is the Konnect token used to authenticate with
                  the Konnect API.
                type: string
              type:
                description: KonnectAPIAuthType is the type of authentication used
                  to authenticate with the Konnect API.
                enum:
                - token
                - secretRef
                type: string
            required:
            - serverURL
            - type
            type: object
            x-kubernetes-validations:
            - message: spec.token is required if auth type is set to token
              rule: 'self.type == ''token'' ? size(self.token) > 0 : true'
            - message: spec.secretRef is required if auth type is set to secretRef
              rule: 'self.type == ''secretRef'' ? has(self.secretRef) : true'
            - message: spec.token and spec.secretRef cannot be set at the same time
              rule: '!(has(self.token) && has(self.secretRef))'
          status:
            description: Status is the status of the KonnectAPIAuthConfiguration resource.
            properties:
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Valid
                description: Conditions describe the status of the Konnect configuration.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              organizationID:
                description: OrganizationID is the unique identifier of the organization
                  in Konnect.
                type: string
              serverURL:
                description: ServerURL is configured server URL.
                type: string
            type: object
        type: object
        x-kubernetes-validations:
        - message: Konnect tokens have to start with spat_ or kpat_
          rule: self.spec.type != 'token' || (self.spec.token.startsWith('spat_')
            || self.spec.token.startsWith('kpat_'))
        - message: Token is required once set
          rule: self.spec.type != 'token' || (!has(oldSelf.spec.token) || has(self.spec.token))
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: konnectcloudgatewaydataplanegroupconfigurations.konnect.konghq.com
spec:
  group: konnect.konghq.com
  names:
    categories:
    - kong
    kind: KonnectCloudGatewayDataPlaneGroupConfiguration
    listKind: KonnectCloudGatewayDataPlaneGroupConfigurationList
    plural: konnectcloudgatewaydataplanegroupconfigurations
    singular: konnectcloudgatewaydataplanegroupconfiguration
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The Resource is Programmed on Konnect
      jsonPath: .status.conditions[?(@.type=='Programmed')].status
      name: Programmed
      type: string
    - description: Konnect ID
      jsonPath: .status.id
      name: ID
      type: string
    - description: ControlPlane ID
      jsonPath: .status.controlPlaneID
      name: ControlPlaneID
      type: string
    - description: Konnect Organization ID this resource belongs to.
      jsonPath: .status.organizationID
      name: OrgID
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KonnectCloudGatewayDataPlaneGroupConfiguration is the Schema
          for the Konnect Network API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of KonnectCloudGatewayDataPlaneGroupConfiguration.
            properties:
              api_access:
                default: private+public
                description: APIAccess is the desired type of API access for data-plane
                  groups.
                enum:
                - private
                - public
                - private+public
                type: string
              controlPlaneRef:
                description: |-
                  ControlPlaneRef is a reference to a ControlPlane which DataPlanes from this
                  configuration will connect to.
                properties:
                  konnectID:
                    description: |-
                      KonnectID is the schema for the KonnectID type.
                      This field is required when the Type is konnectID.
                    type: string
                  konnectNamespacedRef:
                    description: |-
                      KonnectNamespacedRef is a reference to a Konnect Control Plane entity inside the cluster.
                      It contains the name of the Konnect Control Plane.
                      This field is required when the Type is konnectNamespacedRef.
                    properties:
                      name:
                        description: Name is the name of the Konnect Control Plane.
                        type: string
                      namespace:
                        description: |-
                          Namespace is the namespace where the Konnect Control Plane is in.
                          Currently only cluster scoped resources (KongVault) are allowed to set `konnectNamespacedRef.namespace`.
                        type: string
                    required:
                    - name
                    type: object
                  type:
                    default: kic
                    description: |-
                      Type indicates the type of the control plane being referenced. Allowed values:
                      - konnectID
                      - konnectNamespacedRef
                      - kic

                      The default is kic, which implies that the Control Plane is KIC.
                    enum:
                    - konnectID
                    - konnectNamespacedRef
                    - kic
                    type: string
                type: object
                x-kubernetes-validations:
                - message: when type is konnectNamespacedRef, konnectNamespacedRef
                    must be set
                  rule: '(has(self.type) && self.type == ''konnectNamespacedRef'')
                    ? has(self.konnectNamespacedRef) : true'
                - message: when type is konnectNamespacedRef, konnectID must not be
                    set
                  rule: '(has(self.type) && self.type == ''konnectNamespacedRef'')
                    ? !has(self.konnectID) : true'
                - message: when type is konnectID, konnectID must be set
                  rule: '(has(self.type) && self.type == ''konnectID'') ? has(self.konnectID)
                    : true'
                - message: when type is konnectID, konnectNamespacedRef must not be
                    set
                  rule: '(has(self.type) && self.type == ''konnectID'') ? !has(self.konnectNamespacedRef)
                    : true'
                - message: when type is kic, konnectID must not be set
                  rule: '(has(self.type) && self.type == ''kic'') ? !has(self.konnectID)
                    : true'
                - message: when type is kic, konnectNamespacedRef must not be set
                  rule: '(has(self.type) && self.type == ''kic'') ? !has(self.konnectNamespacedRef)
                    : true'
                - message: when type is unset, konnectID must not be set
                  rule: '!has(self.type) ? !has(self.konnectID) : true'
                - message: when type is unset, konnectNamespacedRef must not be set
                  rule: '!has(self.type) ? !has(self.konnectNamespacedRef) : true'
              dataplane_groups:
                description: |-
                  DataplaneGroups is a list of desired data-plane groups that describe where
                  to deploy instances, along with how many instances.
                items:
                  description: KonnectConfigurationDataPlaneGroup is the schema for
                    the KonnectConfiguration type.
                  properties:
                    autoscale:
                      description: Autoscale configuration for the data-plane group.
                      properties:
                        autopilot:
                          description: Autopilot specifies the autoscale configuration
                            for the data-plane group.
                          properties:
                            base_rps:
                              description: Base number of requests per second that
                                the deployment target should support.
                              format: int64
                              type: integer
                            max_rps:
                              description: Max number of requests per second that
                                the deployment target should support. If not set,
                                this defaults to 10x base_rps.
                              format: int64
                              type: integer
                          required:
                          - base_rps
                          type: object
                        static:
                          description: Static specifies the static configuration for
                            the data-plane group.
                          properties:
                            instance_type:
                              description: |-
                                Instance type name to indicate capacity.
                                Currently supported values are small, medium, large but this list might be
                                expanded in the future.
                                For all the allowed values, please refer to the Konnect API documentation
                                at https://docs.konghq.com/konnect/api/cloud-gateways/latest/#/Data-Plane%20Group%20Configurations/create-configuration.
                              type: string
                            requested_instances:
                              description: Number of data-planes the deployment target
                                will contain.
                              format: int64
                              type: integer
                          required:
                          - instance_type
                          - requested_instances
                          type: object
                        type:
                          description: Type of autoscaling to use.
                          enum:
                          - static
                          - autopilot
                          type: string
                      required:
                      - type
                      type: object
                      x-kubernetes-validations:
                      - message: can't provide both autopilot and static configuration
                        rule: '!(has(self.autopilot) && has(self.static))'
                      - message: static is required when type is static
                        rule: 'self.type == ''static'' ? has(self.static) : true'
                      - message: autopilot is required when type is autopilot
                        rule: 'self.type == ''autopilot'' ? has(self.autopilot) :
                          true'
                    environment:
                      description: Array of environment variables to set for a data-plane
                        group.
                      items:
                        description: ConfigurationDataPlaneGroupEnvironmentField specifies
                          an environment variable field for the data-plane group.
                        properties:
                          name:
                            description: Name of the environment variable field to
                              set for the data-plane group. Must be prefixed by KONG_.
                            maxLength: 63
                            minLength: 1
                            pattern: ^KONG_.
                            type: string
                          value:
                            description: Value assigned to the environment variable
                              field for the data-plane group.
                            maxLength: 63
                            minLength: 1
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    networkRef:
                      description: NetworkRef is the schema for the NetworkRef type.
                      properties:
                        konnectID:
                          description: |-
                            KonnectID is the schema for the KonnectID type.
                            This field is required when the Type is konnectID.
                          type: string
                        type:
                          description: Type indicates the type of the control plane
                            being referenced.
                          enum:
                          - konnectID
                          type: string
                      type: object
                      x-kubernetes-validations:
                      - message: when type is konnectID, konnectID must be set
                        rule: '(has(self.type) && self.type == ''konnectID'') ? has(self.konnectID)
                          : true'
                    provider:
                      description: Name of cloud provider.
                      type: string
                    region:
                      description: Region for cloud provider region.
                      type: string
                  required:
                  - autoscale
                  - networkRef
                  - provider
                  - region
                  type: object
                type: array
              version:
                description: Version specifies the desired Kong Gateway version.
                type: string
            required:
            - controlPlaneRef
            - version
            type: object
          status:
            description: Status defines the observed state of KonnectCloudGatewayDataPlaneGroupConfiguration.
            properties:
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Programmed
                description: |-
                  Conditions describe the current conditions of the KonnectCloudGatewayDataPlaneGroupConfiguration.

                  Known condition types are:

                  * "Programmed"
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              controlPlaneID:
                description: ControlPlaneID is the Konnect ID of the ControlPlane
                  this Route is associated with.
                type: string
              dataplane_groups:
                description: DataPlaneGroups is a list of deployed data-plane groups.
                items:
                  description: KonnectCloudGatewayDataPlaneGroupConfigurationStatusGroup
                    defines the observed state of a deployed data-plane group.
                  properties:
                    cloud_gateway_network_id:
                      description: CloudGatewayNetworkID is the ID of the cloud gateway
                        network.
                      type: string
                    egress_ip_addresses:
                      description: EgressIPAddresses is a list of egress IP addresses
                        for the network that this data-plane group runs on.
                      items:
                        type: string
                      type: array
                    id:
                      description: ID is the ID of the deployed data-plane group.
                      type: string
                    private_ip_addresses:
                      description: PrivateIPAddresses is a list of private IP addresses
                        of the internal load balancer that proxies traffic to this
                        data-plane group.
                      items:
                        type: string
                      type: array
                    provider:
                      description: Name of cloud provider.
                      type: string
                    region:
                      description: Region ID for cloud provider region.
                      type: string
                    state:
                      description: State is the current state of the data plane group.
                        Can be e.g. initializing, ready, terminating.
                      type: string
                  required:
                  - cloud_gateway_network_id
                  - id
                  - provider
                  - region
                  - state
                  type: object
                type: array
              id:
                description: |-
                  ID is the unique identifier of the Konnect entity as assigned by Konnect API.
                  If it's unset (empty string), it means the Konnect entity hasn't been created yet.
                type: string
              organizationID:
                description: OrgID is ID of Konnect Org that this entity has been
                  created in.
                type: string
              serverURL:
                description: ServerURL is the URL of the Konnect server in which the
                  entity exists.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: konnectcloudgatewaynetworks.konnect.konghq.com
spec:
  group: konnect.konghq.com
  names:
    categories:
    - kong
    kind: KonnectCloudGatewayNetwork
    listKind: KonnectCloudGatewayNetworkList
    plural: konnectcloudgatewaynetworks
    singular: konnectcloudgatewaynetwork
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The Resource is Programmed on Konnect
      jsonPath: .status.conditions[?(@.type=='Programmed')].status
      name: Programmed
      type: string
    - description: The state the network is in
      jsonPath: .status.state
      name: State
      type: string
    - description: Konnect ID
      jsonPath: .status.id
      name: ID
      type: string
    - description: Konnect Organization ID this resource belongs to.
      jsonPath: .status.organizationID
      name: OrgID
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KonnectCloudGatewayNetwork is the Schema for the Konnect Network
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of KonnectCloudGatewayNetwork.
            properties:
              availability_zones:
                description: List of availability zones that the network is attached
                  to.
                items:
                  type: string
                maxItems: 5
                minItems: 1
                type: array
              cidr_block:
                description: CIDR block configuration for the network.
                type: string
              cloud_gateway_provider_account_id:
                description: Specifies the provider Account ID.
                type: string
              konnect:
                description: KonnectConfiguration is the Schema for the KonnectConfiguration
                  API.
                properties:
                  authRef:
                    description: |-
                      APIAuthConfigurationRef is the reference to the API Auth Configuration
                      that should be used for this Konnect Configuration.
                    properties:
                      name:
                        description: Name is the name of the KonnectAPIAuthConfiguration
                          resource.
                        type: string
                    required:
                    - name
                    type: object
                required:
                - authRef
                type: object
              name:
                description: Specifies the name of the network on Konnect.
                type: string
              region:
                description: Region ID for cloud provider region.
                type: string
              state:
                description: Initial state for creating a network.
                type: string
            required:
            - availability_zones
            - cidr_block
            - cloud_gateway_provider_account_id
            - konnect
            - name
            - region
            type: object
          status:
            description: Status defines the observed state of KonnectCloudGatewayNetwork.
            properties:
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Programmed
                description: |-
                  Conditions describe the current conditions of the KonnectCloudGatewayNetwork.

                  Known condition types are:

                  * "Programmed"
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              id:
                description: |-
                  ID is the unique identifier of the Konnect entity as assigned by Konnect API.
                  If it's unset (empty string), it means the Konnect entity hasn't been created yet.
                type: string
              organizationID:
                description: OrgID is ID of Konnect Org that this entity has been
                  created in.
                type: string
              serverURL:
                description: ServerURL is the URL of the Konnect server in which the
                  entity exists.
                type: string
              state:
                description: State is the current state of the network. Can be e.g.
                  initializing, ready, terminating.
                type: string
            type: object
        required:
        - spec
        type: object
        x-kubernetes-validations:
        - message: spec.name is immutable when an entity is already Programmed
          rule: '(!has(self.status) || !self.status.conditions.exists(c, c.type ==
            ''Programmed'' && c.status == ''True'')) ? true : oldSelf.spec.name ==
            self.spec.name'
        - message: spec.cloud_gateway_provider_account_id is immutable when an entity
            is already Programmed
          rule: '(!has(self.status) || !self.status.conditions.exists(c, c.type ==
            ''Programmed'' && c.status == ''True'')) ? true : oldSelf.spec.cloud_gateway_provider_account_id
            == self.spec.cloud_gateway_provider_account_id'
        - message: spec.region is immutable when an entity is already Programmed
          rule: '(!has(self.status) || !self.status.conditions.exists(c, c.type ==
            ''Programmed'' && c.status == ''True'')) ? true : oldSelf.spec.region
            == self.spec.region'
        - message: spec.availability_zones is immutable when an entity is already
            Programmed
          rule: '(!has(self.status) || !self.status.conditions.exists(c, c.type ==
            ''Programmed'' && c.status == ''True'')) ? true : oldSelf.spec.availability_zones
            == self.spec.availability_zones'
        - message: spec.cidr_block is immutable when an entity is already Programmed
          rule: '(!has(self.status) || !self.status.conditions.exists(c, c.type ==
            ''Programmed'' && c.status == ''True'')) ? true : oldSelf.spec.cidr_block
            == self.spec.cidr_block'
        - message: spec.state is immutable when an entity is already Programmed
          rule: '(!has(self.status) || !self.status.conditions.exists(c, c.type ==
            ''Programmed'' && c.status == ''True'')) ? true : (!has(self.spec.state)
            && !has(oldSelf.spec.state)) || self.spec.state == oldSelf.spec.state'
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: konnectextensions.gateway-operator.konghq.com
spec:
  group: gateway-operator.konghq.com
  names:
    kind: KonnectExtension
    listKind: KonnectExtensionList
    plural: konnectextensions
    singular: konnectextension
  scope: Namespaced
  versions:
  - deprecated: true
    deprecationWarning: The v1alpha1 version of KonnectExtension in the gateway-operator.konghq.com
      API group has been deprecated and will be removed in a future release of the
      API. Please use the version from the konnect.konghq.com API group.
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          KonnectExtension is the Schema for the KonnectExtension API,
          and is intended to be referenced as extension by the DataPlane API.
          If a DataPlane successfully refers a KonnectExtension, the DataPlane
          deployment spec gets customized to include the konnect-related configuration.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the KonnectExtension resource.
            properties:
              clusterDataPlaneLabels:
                additionalProperties:
                  type: string
                description: ClusterDataPlaneLabels is a set of labels that will be
                  applied to the Konnect DataPlane.
                type: object
              controlPlaneRef:
                description: ControlPlaneRef is a reference to a ControlPlane this
                  KonnectExtension is associated with.
                properties:
                  konnectID:
                    description: |-
                      KonnectID is the schema for the KonnectID type.
                      This field is required when the Type is konnectID.
                    type: string
                  konnectNamespacedRef:
                    description: |-
                      KonnectNamespacedRef is a reference to a Konnect Control Plane entity inside the cluster.
                      It contains the name of the Konnect Control Plane.
                      This field is required when the Type is konnectNamespacedRef.
                    properties:
                      name:
                        description: Name is the name of the Konnect Control Plane.
                        type: string
                      namespace:
                        description: |-
                          Namespace is the namespace where the Konnect Control Plane is in.
                          Currently only cluster scoped resources (KongVault) are allowed to set `konnectNamespacedRef.namespace`.
                        type: string
                    required:
                    - name
                    type: object
                  type:
                    default: kic
                    description: |-
                      Type indicates the type of the control plane being referenced. Allowed values:
                      - konnectID
                      - konnectNamespacedRef
                      - kic

                      The default is kic, which implies that the Control Plane is KIC.
                    enum:
                    - konnectID
                    - konnectNamespacedRef
                    - kic
                    type: string
                type: object
                x-kubernetes-validations:
                - message: Only konnectID type currently supported as controlPlaneRef.
                  rule: self.type == 'konnectID'
                - message: when type is konnectNamespacedRef, konnectNamespacedRef
                    must be set
                  rule: '(has(self.type) && self.type == ''konnectNamespacedRef'')
                    ? has(self.konnectNamespacedRef) : true'
                - message: when type is konnectNamespacedRef, konnectID must not be
                    set
                  rule: '(has(self.type) && self.type == ''konnectNamespacedRef'')
                    ? !has(self.konnectID) : true'
                - message: when type is konnectID, konnectID must be set
                  rule: '(has(self.type) && self.type == ''konnectID'') ? has(self.konnectID)
                    : true'
                - message: when type is konnectID, konnectNamespacedRef must not be
                    set
                  rule: '(has(self.type) && self.type == ''konnectID'') ? !has(self.konnectNamespacedRef)
                    : true'
                - message: when type is kic, konnectID must not be set
                  rule: '(has(self.type) && self.type == ''kic'') ? !has(self.konnectID)
                    : true'
                - message: when type is kic, konnectNamespacedRef must not be set
                  rule: '(has(self.type) && self.type == ''kic'') ? !has(self.konnectNamespacedRef)
                    : true'
                - message: when type is unset, konnectID must not be set
                  rule: '!has(self.type) ? !has(self.konnectID) : true'
                - message: when type is unset, konnectNamespacedRef must not be set
                  rule: '!has(self.type) ? !has(self.konnectNamespacedRef) : true'
              controlPlaneRegion:
                description: ControlPlaneRegion is the region of the Konnect Control
                  Plane.
                example: us
                type: string
              konnectControlPlaneAPIAuthConfiguration:
                description: AuthConfiguration must be used to configure the Konnect
                  API authentication.
                properties:
                  clusterCertificateSecretRef:
                    description: ClusterCertificateSecretRef is the reference to the
                      Secret containing the Konnect Control Plane's cluster certificate.
                    properties:
                      name:
                        description: Name is the name of the Secret containing the
                          Konnect Control Plane's cluster certificate.
                        type: string
                    required:
                    - name
                    type: object
                required:
                - clusterCertificateSecretRef
                type: object
              serverHostname:
                default: konghq.com
                description: |-
                  ServerHostname is the fully qualified domain name of the Konnect server.
                  For typical operation a default value doesn't need to be adjusted.
                  It matches the RFC 1123 definition of a hostname with 1 notable exception
                  that numeric IP addresses are not allowed.

                  Note that as per RFC1035 and RFC1123, a *label* must consist of lower case
                  alphanumeric characters or '-', and must start and end with an alphanumeric
                  character. No other punctuation is allowed.
                maxLength: 253
                minLength: 1
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                type: string
            required:
            - controlPlaneRef
            - controlPlaneRegion
            - konnectControlPlaneAPIAuthConfiguration
            - serverHostname
            type: object
          status:
            description: Status is the status of the KonnectExtension resource.
            properties:
              dataPlaneRefs:
                description: |-
                  DataPlaneRefs is the array  of DataPlane references this is associated with.
                  A new reference is set by the operator when this extension is associated with
                  a DataPlane through its extensions spec.
                items:
                  description: NamespacedRef is a reference to a namespaced resource.
                  properties:
                    name:
                      description: Name is the name of the referred resource.
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace is the namespace of the referred resource.

                        For namespace-scoped resources if no Namespace is provided then the
                        namespace of the parent object MUST be used.

                        This field MUST not be set when referring to cluster-scoped resources.
                      type: string
                  required:
                  - name
                  type: object
                type: array
            type: object
        type: object
        x-kubernetes-validations:
        - message: spec.controlPlaneRef is immutable.
          rule: oldSelf.spec.controlPlaneRef == self.spec.controlPlaneRef
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: konnectextensions.konnect.konghq.com
spec:
  group: konnect.konghq.com
  names:
    categories:
    - kong
    kind: KonnectExtension
    listKind: KonnectExtensionList
    plural: konnectextensions
    singular: konnectextension
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The Resource is Ready to be used
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          KonnectExtension is the Schema for the KonnectExtension API, and is intended to be referenced as
          extension by the DataPlane, ControlPlane or GatewayConfiguration APIs.
          If one of the above mentioned resources successfully refers a KonnectExtension, the underlying
          deployment(s) spec gets customized to include the konnect-related configuration.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the KonnectExtension resource.
            properties:
              clientAuth:
                default:
                  certificateSecret:
                    provisioning: Automatic
                description: |-
                  ClientAuth is the configuration for the client certificate authentication.
                  In case the ControlPlaneRef is of type KonnectID, it is required to set up the connection with the
                  Konnect Platform.
                properties:
                  certificateSecret:
                    description: CertificateSecret contains the information to access
                      the client certificate.
                    properties:
                      provisioning:
                        default: Automatic
                        description: |-
                          Provisioning is the method used to provision the certificate. It can be either Manual or Automatic.
                          In case manual provisioning is used, the certificate must be provided by the user.
                          In case automatic provisioning is used, the certificate will be automatically generated by the system.
                        enum:
                        - Manual
                        - Automatic
                        type: string
                      secretRef:
                        description: CertificateSecretRef is the reference to the
                          Secret containing the client certificate.
                        properties:
                          name:
                            description: Name is the name of the Secret containing
                              the Konnect Control Plane's cluster certificate.
                            type: string
                        required:
                        - name
                        type: object
                    type: object
                required:
                - certificateSecret
                type: object
                x-kubernetes-validations:
                - message: secretRef must be set when provisioning is set to Manual.
                  rule: 'self.certificateSecret.provisioning == ''Manual'' ? has(self.certificateSecret.secretRef)
                    : true'
                - message: secretRef must not be set when provisioning is set to Automatic.
                  rule: 'self.certificateSecret.provisioning == ''Automatic'' ? !has(self.certificateSecret.secretRef)
                    : true'
              konnect:
                description: Konnect holds the konnect-related configuration
                properties:
                  configuration:
                    description: Configuration holds the information needed to set
                      up the Konnect Configuration.
                    properties:
                      authRef:
                        description: |-
                          APIAuthConfigurationRef is the reference to the API Auth Configuration
                          that should be used for this Konnect Configuration.
                        properties:
                          name:
                            description: Name is the name of the KonnectAPIAuthConfiguration
                              resource.
                            type: string
                        required:
                        - name
                        type: object
                    required:
                    - authRef
                    type: object
                  controlPlane:
                    description: ControlPlane is the configuration for the Konnect
                      Control Plane.
                    properties:
                      ref:
                        description: Ref is a reference to a Konnect ControlPlane
                          this KonnectExtension is associated with.
                        properties:
                          konnectID:
                            description: |-
                              KonnectID is the schema for the KonnectID type.
                              This field is required when the Type is konnectID.
                            type: string
                          konnectNamespacedRef:
                            description: |-
                              KonnectNamespacedRef is a reference to a Konnect Control Plane entity inside the cluster.
                              It contains the name of the Konnect Control Plane.
                              This field is required when the Type is konnectNamespacedRef.
                            properties:
                              name:
                                description: Name is the name of the Konnect Control
                                  Plane.
                                type: string
                              namespace:
                                description: |-
                                  Namespace is the namespace where the Konnect Control Plane is in.
                                  Currently only cluster scoped resources (KongVault) are allowed to set `konnectNamespacedRef.namespace`.
                                type: string
                            required:
                            - name
                            type: object
                          type:
                            default: kic
                            description: |-
                              Type indicates the type of the control plane being referenced. Allowed values:
                              - konnectID
                              - konnectNamespacedRef
                              - kic

                              The default is kic, which implies that the Control Plane is KIC.
                            enum:
                            - konnectID
                            - konnectNamespacedRef
                            - kic
                            type: string
                        type: object
                        x-kubernetes-validations:
                        - message: kic type not supported as controlPlaneRef.
                          rule: self.type != 'kic'
                        - message: when type is konnectNamespacedRef, konnectNamespacedRef
                            must be set
                          rule: '(has(self.type) && self.type == ''konnectNamespacedRef'')
                            ? has(self.konnectNamespacedRef) : true'
                        - message: when type is konnectNamespacedRef, konnectID must
                            not be set
                          rule: '(has(self.type) && self.type == ''konnectNamespacedRef'')
                            ? !has(self.konnectID) : true'
                        - message: when type is konnectID, konnectID must be set
                          rule: '(has(self.type) && self.type == ''konnectID'') ?
                            has(self.konnectID) : true'
                        - message: when type is konnectID, konnectNamespacedRef must
                            not be set
                          rule: '(has(self.type) && self.type == ''konnectID'') ?
                            !has(self.konnectNamespacedRef) : true'
                        - message: when type is kic, konnectID must not be set
                          rule: '(has(self.type) && self.type == ''kic'') ? !has(self.konnectID)
                            : true'
                        - message: when type is kic, konnectNamespacedRef must not
                            be set
                          rule: '(has(self.type) && self.type == ''kic'') ? !has(self.konnectNamespacedRef)
                            : true'
                        - message: when type is unset, konnectID must not be set
                          rule: '!has(self.type) ? !has(self.konnectID) : true'
                        - message: when type is unset, konnectNamespacedRef must not
                            be set
                          rule: '!has(self.type) ? !has(self.konnectNamespacedRef)
                            : true'
                    required:
                    - ref
                    type: object
                  dataPlane:
                    description: DataPlane is the configuration for the Konnect DataPlane.
                    properties:
                      labels:
                        additionalProperties:
                          description: DataPlaneLabelValue is the type that defines
                            the value of a label that will be applied to the Konnect
                            DataPlane.
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z0-9]([a-zA-Z0-9._-]*[a-zA-Z0-9])?$
                          type: string
                        description: Labels is a set of labels that will be applied
                          to the Konnect DataPlane.
                        type: object
                        x-kubernetes-validations:
                        - message: keys must match the pattern '^[a-zA-Z0-9]([a-zA-Z0-9._-]*[a-zA-Z0-9])?$'.
                          rule: self.all(key, key.matches('^[a-zA-Z0-9]([a-zA-Z0-9._-]*[a-zA-Z0-9])?$'))
                        - message: keys must not start with 'kong', 'konnect', 'insomnia',
                            'mesh', 'kic', or '_'.
                          rule: self.all(key, !(key.startsWith('kong') || key.startsWith('konnect')
                            || key.startsWith('insomnia') || key.startsWith('mesh')
                            || key.startsWith('kic') || key.startsWith('_')))
                        - message: 'Too long: may not be more than 63 bytes'
                          rule: self.all(key, size(key) > 0 && size(key) < 64)
                    type: object
                required:
                - controlPlane
                type: object
            required:
            - konnect
            type: object
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Ready
            description: Status is the status of the KonnectExtension resource.
            properties:
              conditions:
                description: |-
                  Conditions describe the current conditions of the KonnectExtensionStatus.
                  Known condition types are:
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              controlPlaneRefs:
                description: |-
                  ControlPlaneRefs is the array  of ControlPlane references this is associated with.
                  A new reference is set by the operator when this extension is associated with
                  a ControlPlane through its extensions spec.
                items:
                  description: NamespacedRef is a reference to a namespaced resource.
                  properties:
                    name:
                      description: Name is the name of the referred resource.
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace is the namespace of the referred resource.

                        For namespace-scoped resources if no Namespace is provided then the
                        namespace of the parent object MUST be used.

                        This field MUST not be set when referring to cluster-scoped resources.
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 16
                type: array
              dataPlaneClientAuth:
                description: DataPlaneClientAuth contains the configuration for the
                  client certificate authentication for the DataPlane.
                properties:
                  certificateSecretRef:
                    description: CertificateSecretRef is the reference to the Secret
                      containing the client certificate.
                    properties:
                      name:
                        description: Name is the name of the Secret containing the
                          Konnect Control Plane's cluster certificate.
                        type: string
                    required:
                    - name
                    type: object
                type: object
              dataPlaneRefs:
                description: |-
                  DataPlaneRefs is the array  of DataPlane references this is associated with.
                  A new reference is set by the operator when this extension is associated with
                  a DataPlane through its extensions spec.
                items:
                  description: NamespacedRef is a reference to a namespaced resource.
                  properties:
                    name:
                      description: Name is the name of the referred resource.
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace is the namespace of the referred resource.

                        For namespace-scoped resources if no Namespace is provided then the
                        namespace of the parent object MUST be used.

                        This field MUST not be set when referring to cluster-scoped resources.
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 16
                type: array
              konnect:
                description: Konnect contains the status information related to the
                  Konnect Control Plane.
                properties:
                  clusterType:
                    description: ClusterType is the type of the Konnect Control Plane.
                    enum:
                    - ControlPlane
                    - K8SIngressController
                    type: string
                  controlPlaneID:
                    description: ControlPlaneID is the Konnect ID of the ControlPlane
                      this KonnectExtension is associated with.
                    type: string
                  endpoints:
                    description: Endpoints defines the Konnect endpoints for the control
                      plane.
                    properties:
                      controlPlane:
                        description: ControlPlaneEndpoint is the endpoint for the
                          control plane.
                        type: string
                      telemetry:
                        description: TelemetryEndpoint is the endpoint for telemetry.
                        type: string
                    required:
                    - controlPlane
                    - telemetry
                    type: object
                required:
                - clusterType
                - controlPlaneID
                - endpoints
                type: object
            type: object
        type: object
        x-kubernetes-validations:
        - message: spec.konnect.controlPlane.ref is immutable.
          rule: oldSelf.spec.konnect.controlPlane.ref == self.spec.konnect.controlPlane.ref
        - message: konnect must be set when ControlPlaneRef is set to KonnectID.
          rule: 'self.spec.konnect.controlPlane.ref.type == ''konnectID'' ? has(self.spec.konnect.configuration)
            : true'
        - message: konnect must be unset when ControlPlaneRef is set to konnectNamespacedRef.
          rule: 'self.spec.konnect.controlPlane.ref.type == ''konnectNamespacedRef''
            ? !has(self.spec.konnect.configuration) : true'
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    kubernetes-configuration.konghq.com/channels: gateway-operator
    kubernetes-configuration.konghq.com/version: v1.2.0
  name: konnectgatewaycontrolplanes.konnect.konghq.com
spec:
  group: konnect.konghq.com
  names:
    categories:
    - kong
    kind: KonnectGatewayControlPlane
    listKind: KonnectGatewayControlPlaneList
    plural: konnectgatewaycontrolplanes
    singular: konnectgatewaycontrolplane
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The Resource is Programmed on Konnect
      jsonPath: .status.conditions[?(@.type=='Programmed')].status
      name: Programmed
      type: string
    - description: Konnect ID
      jsonPath: .status.id
      name: ID
      type: string
    - description: Konnect Organization ID this resource belongs to.
      jsonPath: .status.organizationID
      name: OrgID
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KonnectGatewayControlPlane is the Schema for the KonnectGatewayControlplanes
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of KonnectGatewayControlPlane.
            properties:
              auth_type:
                description: The auth type value of the cluster associated with the
                  Runtime Group.
                type: string
              cloud_gateway:
                description: Whether this control-plane can be used for cloud-gateways.
                type: boolean
              cluster_type:
                description: The ClusterType value of the cluster associated with
                  the Control Plane.
                type: string
              description:
                description: The description of the control plane in Konnect.
                type: string
              konnect:
                description: KonnectConfiguration is the Schema for the KonnectConfiguration
                  API.
                properties:
                  authRef:
                    description: |-
                      APIAuthConfigurationRef is the reference to the API Auth Configuration
                      that should be used for this Konnect Configuration.
                    properties:
                      name:
                        description: Name is the name of the KonnectAPIAuthConfiguration
                          resource.
                        type: string
                    required:
                    - name
                    type: object
                required:
                - authRef
                type: object
              labels:
                additionalProperties:
                  type: string
                description: |-
                  Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types.

                  Keys must be of length 1-63 characters, and cannot start with "kong", "konnect", "mesh", "kic", or "_".
                type: object
              members:
                description: |-
                  Members is a list of references to the KonnectGatewayControlPlaneMembers that are part of this control plane group.
                  Only applicable for ControlPlanes that are created as groups.
                items:
                  description: |-
                    LocalObjectReference contains enough information to let you locate the
                    referenced object inside the same namespace.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              name:
                description: The name of the control plane.
                type: string
              proxy_urls:
                description: Array of proxy URLs associated with reaching the data-planes
                  connected to a control-plane.
                items:
                  description: ProxyURL - Proxy URL associated with reaching the data-planes
                    connected to a control-plane.
                  properties:
                    host:
                      description: Hostname of the proxy URL.
                      type: string
                    port:
                      description: Port of the proxy URL.
                      format: int64
                      type: integer
                    protocol:
                      description: Protocol of the proxy URL.
                      type: string
                  required:
                  - host
                  - port
                  - protocol
                  type: object
                type: array
            required:
            - name
            type: object
            x-kubernetes-validations:
            - message: spec.labels must not have more than 40 entries
              rule: 'has(self.labels) ? size(self.labels) <= 40 : true'
            - message: spec.labels keys must be of length 1-63 characters
              rule: 'has(self.labels) ? self.labels.all(key, size(key) >= 1 && size(key)
                <= 63) : true'
            - message: spec.labels values must be of length 1-63 characters
              rule: 'has(self.labels) ? self.labels.all(key, size(self.labels[key])
                >= 1 && size(self.labels[key]) <= 63) : true'
            - message: spec.labels keys must not start with 'k8s', 'kong', 'konnect',
                'mesh', 'kic', 'insomnia' or '_'
              rule: 'has(self.labels) ? self.labels.all(key, !key.startsWith(''k8s'')
                && !key.startsWith(''kong'') && !key.startsWith(''konnect'') && !key.startsWith(''mesh'')
                && !key.startsWith(''kic'') && !key.startsWith(''_'') && !key.startsWith(''insomnia''))
                : true'
            - message: spec.labels keys must satisfy the '^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$'
                pattern
              rule: 'has(self.labels) ? self.labels.all(key, key.matches(''^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$''))
                : true'
            - message: when specified, spec.cluster_type must be one of 'CLUSTER_TYPE_CONTROL_PLANE_GROUP',
                'CLUSTER_TYPE_CONTROL_PLANE' or 'CLUSTER_TYPE_K8S_INGRESS_CONTROLLER'
              rule: '!has(self.cluster_type) ? true : [''CLUSTER_TYPE_CONTROL_PLANE_GROUP'',
                ''CLUSTER_TYPE_CONTROL_PLANE'', ''CLUSTER_TYPE_K8S_INGRESS_CONTROLLER''].exists(ct,
                ct == self.cluster_type)'
            - message: spec.members is only applicable for ControlPlanes that are
                created as groups
              rule: '(has(self.cluster_type) && self.cluster_type != ''CLUSTER_TYPE_CONTROL_PLANE_GROUP'')
                ? !has(self.members) : true'
            - message: spec.cluster_type is immutable
              rule: '!has(self.cluster_type) ? !has(oldSelf.cluster_type) : self.cluster_type
                == oldSelf.cluster_type'
            - message: cloud_gateway cannot be set for cluster_type 'CLUSTER_TYPE_K8S_INGRESS_CONTROLLER'
              rule: 'has(self.cluster_type) && self.cluster_type == ''CLUSTER_TYPE_K8S_INGRESS_CONTROLLER''
                ? !has(self.cloud_gateway) : true'
          status:
            description: Status defines the observed state of KonnectGatewayControlPlane.
            properties:
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Programmed
                description: |-
                  Conditions describe the current conditions of the KonnectGatewayControlPlane.

                  Known condition types are:

                  * "Programmed"
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              id:
                description: |-
                  ID is the unique identifier of the Konnect entity as assigned by Konnect API.
                  If it's unset (empty string), it means the Konnect entity hasn't been created yet.
                type: string
              konnectEndpoints:
                description: |-
                  Endpoints defines the Konnect endpoints for the control plane.
                  They are required by the DataPlane to be properly configured in
                  Konnect and connect to the control plane.
                properties:
                  controlPlane:
                    description: ControlPlaneEndpoint is the endpoint for the control
                      plane.
                    type: string
                  telemetry:
                    description: TelemetryEndpoint is the endpoint for telemetry.
                    type: string
                required:
                - controlPlane
                - telemetry
                type: object
              organizationID:
                description: OrgID is ID of Konnect Org that this entity has been
                  created in.
                type: string
              serverURL:
                description: ServerURL is the URL of the Konnect server in which the
                  entity exists.
                type: string
            type: object
        type: object
        x-kubernetes-validations:
        - message: spec.konnect.authRef is immutable when an entity is already Programmed
          rule: '!self.status.conditions.exists(c, c.type == ''Programmed'' && c.status
            == ''True'') ? true : self.spec.konnect.authRef == oldSelf.spec.konnect.authRef'
        - message: spec.konnect.authRef is immutable when an entity refers to a Valid
            API Auth Configuration
          rule: '!self.status.conditions.exists(c, c.type == ''APIAuthValid'' && c.status
            == ''True'') ? true : self.spec.konnect.authRef == oldSelf.spec.konnect.authRef'
    served: true
    storage: true
    subresources:
      status: {}

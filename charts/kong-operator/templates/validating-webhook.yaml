# This file is auto-generated by KO's hack/generators/validating-webhook/main.go generator.

{{ $name := ( include "kong.webhookValidatingCertSecretName" .) }}
{{ $secret := (lookup "v1" "Secret" .Release.Namespace $name) }}
{{ $serviceName := (include "kong.webhookServiceName" .) }}
{{ $namespace := (include "kong.namespace" .) }}
{{ $domainName := ( printf "%s.%s.svc" $serviceName $namespace ) }}
{{ $domainNameClusterLocal := ( printf "%s.%s.svc.cluster.local" $serviceName $namespace ) }}
{{ $dnsNames := list ($domainName) ($domainNameClusterLocal) }}

{{ $ca := genCA "" 3650 }}
{{ $cert := genSignedCert $domainName nil $dnsNames 3650 $ca }}
{{ $certCert := $cert.Cert }}
{{ $certKey := $cert.Key }}
{{ $caCert := $ca.Cert }}
{{ if $secret }}
{{ $certCert = (index $secret.data "tls.crt" ) | b64dec }}
{{ $certKey = (index $secret.data "tls.key" ) | b64dec }}
{{ $caCert = (index $secret.data "ca.crt" ) | b64dec }}
{{- end }}

{{- if .Values.global.webhooks.validating.enabled }}
{{- if ( not .Values.global.webhooks.options.certManager.enabled ) }}
apiVersion: v1
kind: Secret
metadata:
  labels:
    {{- include "kong.metaLabels" . | nindent 4 }}
    app.kubernetes.io/component: ko
  annotations:
    dnsNames: {{ join "," $dnsNames | quote }}
  name: {{ $name }}
  namespace: {{ template "kong.namespace" . }}
type: kubernetes.io/tls
stringData:
  ca.crt: |
    {{ $caCert | nindent 4 }}
  tls.crt: |
    {{ $certCert | nindent 4 }}
  tls.key: |
    {{ $certKey | nindent 4 }}
{{- end }}
{{- end }}
---
{{- if .Values.global.webhooks.validating.enabled }}
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
{{- if .Values.global.webhooks.options.certManager.enabled }}
  annotations:
    cert-manager.io/inject-ca-from: {{ template "kong.namespace" . }}/{{ template "kong.webhookServiceName" . }}-serving-cert
    cert-manager.io/secret-template: '{ "labels": { "konghq.com/secret" : "true" } }'
{{- end }}
  labels:
    {{- include "kong.metaLabels" . | nindent 4 }}
    app.kubernetes.io/component: ko
  name: controlplane-configuration-validations
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: {{ template "kong.webhookServiceName" . }}
      namespace: {{ template "kong.namespace" . }}
      port: 5443
{{- if not .Values.global.webhooks.options.certManager.enabled }}
    caBundle: |
      {{ $caCert | b64enc }}
{{- end }}
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validations.kong.konghq.com
  rules:
  - apiGroups:
    - configuration.konghq.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - kongconsumers
    - kongconsumergroups
    - kongplugins
    - kongclusterplugins
    - kongingresses
    - kongvaults
    scope: '*'
  - apiGroups:
    - networking.k8s.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
    scope: '*'
  - apiGroups:
    - gateway.networking.k8s.io
    apiVersions:
    - v1alpha2
    - v1beta1
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - gateways
    - httproutes
    scope: '*'
  sideEffects: None
  timeoutSeconds: 10
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: {{ template "kong.webhookServiceName" . }}
      namespace: {{ template "kong.namespace" . }}
      port: 5443
{{- if not .Values.global.webhooks.options.certManager.enabled }}
    caBundle: |
      {{ $caCert | b64enc }}
{{- end }}
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: secrets.validations.kong.konghq.com
  objectSelector:
    matchLabels:
      konghq.com/secret: "true"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
    scope: '*'
  sideEffects: None
  timeoutSeconds: 10
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: {{ template "kong.webhookServiceName" . }}
      namespace: {{ template "kong.namespace" . }}
      port: 5443
{{- if not .Values.global.webhooks.options.certManager.enabled }}
    caBundle: |
      {{ $caCert | b64enc }}
{{- end }}
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: services.validations.kong.konghq.com
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - services
    scope: '*'
  sideEffects: None
  timeoutSeconds: 10

{{- end }}
